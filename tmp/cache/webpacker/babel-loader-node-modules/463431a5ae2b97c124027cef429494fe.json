{"ast":null,"code":"/*! Select for DataTables 1.1.0\n * 2015 SpryMedia Ltd - datatables.net/license/mit\n */\n\n/**\n * @summary     Select for DataTables\n * @description A collection of API methods, events and buttons for DataTables\n *   that provides selection options of the items in a DataTable\n * @version     1.1.0\n * @file        dataTables.select.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     datatables.net/forums\n * @copyright   Copyright 2015 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net/extensions/select\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable; // Version information for debugger\n\n  DataTable.select = {};\n  DataTable.select.version = '1.1.0';\n  /*\n  \n  Select is a collection of API methods, event handlers, event emitters and\n  buttons (for the `Buttons` extension) for DataTables. It provides the following\n  features, with an overview of how they are implemented:\n  \n  ## Selection of rows, columns and cells. Whether an item is selected or not is\n     stored in:\n  \n  * rows: a `_select_selected` property which contains a boolean value of the\n    DataTables' `aoData` object for each row\n  * columns: a `_select_selected` property which contains a boolean value of the\n    DataTables' `aoColumns` object for each column\n  * cells: a `_selected_cells` property which contains an array of boolean values\n    of the `aoData` object for each row. The array is the same length as the\n    columns array, with each element of it representing a cell.\n  \n  This method of using boolean flags allows Select to operate when nodes have not\n  been created for rows / cells (DataTables' defer rendering feature).\n  \n  ## API methods\n  \n  A range of API methods are available for triggering selection and de-selection\n  of rows. Methods are also available to configure the selection events that can\n  be triggered by an end user (such as which items are to be selected). To a large\n  extent, these of API methods *is* Select. It is basically a collection of helper\n  functions that can be used to select items in a DataTable.\n  \n  Configuration of select is held in the object `_select` which is attached to the\n  DataTables settings object on initialisation. Select being available on a table\n  is not optional when Select is loaded, but its default is for selection only to\n  be available via the API - so the end user wouldn't be able to select rows\n  without additional configuration.\n  \n  The `_select` object contains the following properties:\n  \n  ```\n  {\n  \titems:string     - Can be `rows`, `columns` or `cells`. Defines what item \n  \t                   will be selected if the user is allowed to activate row\n  \t                   selection using the mouse.\n  \tstyle:string     - Can be `none`, `single`, `multi` or `os`. Defines the\n  \t                   interaction style when selecting items\n  \tblurable:boolean - If row selection can be cleared by clicking outside of\n  \t                   the table\n  \tinfo:boolean     - If the selection summary should be shown in the table\n  \t                   information elements\n  }\n  ```\n  \n  In addition to the API methods, Select also extends the DataTables selector\n  options for rows, columns and cells adding a `selected` option to the selector\n  options object, allowing the developer to select only selected items or\n  unselected items.\n  \n  ## Mouse selection of items\n  \n  Clicking on items can be used to select items. This is done by a simple event\n  handler that will select the items using the API methods.\n  \n   */\n\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Local functions\n   */\n\n  /**\n   * Add one or more cells to the selection when shift clicking in OS selection\n   * style cell selection.\n   *\n   * Cell range is more complicated than row and column as we want to select\n   * in the visible grid rather than by index in sequence. For example, if you\n   * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n   * should also be selected (and not 1-3, 1-4. etc)\n   * \n   * @param  {DataTable.Api} dt   DataTable\n   * @param  {object}        idx  Cell index to select to\n   * @param  {object}        last Cell index to select from\n   * @private\n   */\n\n  function cellRange(dt, idx, last) {\n    var indexes;\n    var columnIndexes;\n    var rowIndexes;\n\n    var selectColumns = function selectColumns(start, end) {\n      if (start > end) {\n        var tmp = end;\n        end = start;\n        start = tmp;\n      }\n\n      var record = false;\n      return dt.columns(':visible').indexes().filter(function (i) {\n        if (i === start) {\n          record = true;\n        }\n\n        if (i === end) {\n          // not else if, as start might === end\n          record = false;\n          return true;\n        }\n\n        return record;\n      });\n    };\n\n    var selectRows = function selectRows(start, end) {\n      var indexes = dt.rows({\n        search: 'applied'\n      }).indexes(); // Which comes first - might need to swap\n\n      if (indexes.indexOf(start) > indexes.indexOf(end)) {\n        var tmp = end;\n        end = start;\n        start = tmp;\n      }\n\n      var record = false;\n      return indexes.filter(function (i) {\n        if (i === start) {\n          record = true;\n        }\n\n        if (i === end) {\n          record = false;\n          return true;\n        }\n\n        return record;\n      });\n    };\n\n    if (!dt.cells({\n      selected: true\n    }).any() && !last) {\n      // select from the top left cell to this one\n      columnIndexes = selectColumns(0, idx.column);\n      rowIndexes = selectRows(0, idx.row);\n    } else {\n      // Get column indexes between old and new\n      columnIndexes = selectColumns(last.column, idx.column);\n      rowIndexes = selectRows(last.row, idx.row);\n    }\n\n    indexes = dt.cells(rowIndexes, columnIndexes).flatten();\n\n    if (!dt.cells(idx, {\n      selected: true\n    }).any()) {\n      // Select range\n      dt.cells(indexes).select();\n    } else {\n      // Deselect range\n      dt.cells(indexes).deselect();\n    }\n  }\n  /**\n   * Disable mouse selection by removing the selectors\n   *\n   * @param {DataTable.Api} dt DataTable to remove events from\n   * @private\n   */\n\n\n  function disableMouseSelection(dt) {\n    var ctx = dt.settings()[0];\n    var selector = ctx._select.selector;\n    $(dt.table().body()).off('mousedown.dtSelect', selector).off('mouseup.dtSelect', selector).off('click.dtSelect', selector);\n    $('body').off('click.dtSelect');\n  }\n  /**\n   * Attach mouse listeners to the table to allow mouse selection of items\n   *\n   * @param {DataTable.Api} dt DataTable to remove events from\n   * @private\n   */\n\n\n  function enableMouseSelection(dt) {\n    var body = $(dt.table().body());\n    var ctx = dt.settings()[0];\n    var selector = ctx._select.selector;\n    body.on('mousedown.dtSelect', selector, function (e) {\n      // Disallow text selection for shift clicking on the table so multi\n      // element selection doesn't look terrible!\n      if (e.shiftKey) {\n        body.css('-moz-user-select', 'none').one('selectstart.dtSelect', selector, function () {\n          return false;\n        });\n      }\n    }).on('mouseup.dtSelect', selector, function (e) {\n      // Allow text selection to occur again, Mozilla style (tested in FF\n      // 35.0.1 - still required)\n      body.css('-moz-user-select', '');\n    }).on('click.dtSelect', selector, function (e) {\n      var items = dt.select.items();\n      var idx;\n      var ctx = dt.settings()[0]; // Ignore clicks inside a sub-table\n\n      if ($(e.target).closest('tbody')[0] != body[0]) {\n        return;\n      }\n\n      var cell = $(e.target).closest('td, th');\n      var cellIndex = dt.cell(cell).index(); // Check the cell actually belongs to the host DataTable (so child rows,\n      // etc, are ignored)\n\n      if (!dt.cell(cell).any()) {\n        return;\n      }\n\n      if (items === 'row') {\n        idx = cellIndex.row;\n        typeSelect(e, dt, ctx, 'row', idx);\n      } else if (items === 'column') {\n        idx = dt.cell(cell).index().column;\n        typeSelect(e, dt, ctx, 'column', idx);\n      } else if (items === 'cell') {\n        idx = dt.cell(cell).index();\n        typeSelect(e, dt, ctx, 'cell', idx);\n      }\n\n      ctx._select_lastCell = cellIndex;\n    }); // Blurable\n\n    $('body').on('click.dtSelect', function (e) {\n      if (ctx._select.blurable) {\n        // If the click was inside the DataTables container, don't blur\n        if ($(e.target).parents().filter(dt.table().container()).length) {\n          return;\n        } // Don't blur in Editor form\n\n\n        if ($(e.target).parents('div.DTE').length) {\n          return;\n        }\n\n        clear(ctx, true);\n      }\n    });\n  }\n  /**\n   * Trigger an event on a DataTable\n   *\n   * @param {DataTable.Api} api      DataTable to trigger events on\n   * @param  {boolean}      selected true if selected, false if deselected\n   * @param  {string}       type     Item type acting on\n   * @param  {boolean}      any      Require that there are values before\n   *     triggering\n   * @private\n   */\n\n\n  function eventTrigger(api, type, args, any) {\n    if (any && !api.flatten().length) {\n      return;\n    }\n\n    args.unshift(api);\n    $(api.table().node()).triggerHandler(type + '.dt', args);\n  }\n  /**\n   * Update the information element of the DataTable showing information about the\n   * items selected. This is done by adding tags to the existing text\n   * \n   * @param {DataTable.Api} api DataTable to update\n   * @private\n   */\n\n\n  function info(api) {\n    var ctx = api.settings()[0];\n\n    if (!ctx._select.info || !ctx.aanFeatures.i) {\n      return;\n    }\n\n    var output = $('<span class=\"select-info\"/>');\n\n    var add = function add(name, num) {\n      output.append($('<span class=\"select-item\"/>').append(api.i18n('select.' + name + 's', {\n        _: '%d ' + name + 's selected',\n        0: '',\n        1: '1 ' + name + ' selected'\n      }, num)));\n    };\n\n    add('row', api.rows({\n      selected: true\n    }).flatten().length);\n    add('column', api.columns({\n      selected: true\n    }).flatten().length);\n    add('cell', api.cells({\n      selected: true\n    }).flatten().length); // Internal knowledge of DataTables to loop over all information elements\n\n    $.each(ctx.aanFeatures.i, function (i, el) {\n      el = $(el);\n      var exisiting = el.children('span.select-info');\n\n      if (exisiting.length) {\n        exisiting.remove();\n      }\n\n      if (output.text() !== '') {\n        el.append(output);\n      }\n    });\n  }\n  /**\n   * Initialisation of a new table. Attach event handlers and callbacks to allow\n   * Select to operate correctly.\n   *\n   * This will occur _after_ the initial DataTables initialisation, although\n   * before Ajax data is rendered, if there is ajax data\n   *\n   * @param  {DataTable.settings} ctx Settings object to operate on\n   * @private\n   */\n\n\n  function init(ctx) {\n    var api = new DataTable.Api(ctx); // Row callback so that classes can be added to rows and cells if the item\n    // was selected before the element was created. This will happen with the\n    // `deferRender` option enabled.\n    // \n    // This method of attaching to `aoRowCreatedCallback` is a hack until\n    // DataTables has proper events for row manipulation If you are reviewing\n    // this code to create your own plug-ins, please do not do this!\n\n    ctx.aoRowCreatedCallback.push({\n      fn: function fn(row, data, index) {\n        var i, ien;\n        var d = ctx.aoData[index]; // Row\n\n        if (d._select_selected) {\n          $(row).addClass(ctx._select.className);\n        } // Cells and columns - if separated out, we would need to do two\n        // loops, so it makes sense to combine them into a single one\n\n\n        for (i = 0, ien = ctx.aoColumns.length; i < ien; i++) {\n          if (ctx.aoColumns[i]._select_selected || d._selected_cells && d._selected_cells[i]) {\n            $(d.anCells[i]).addClass(ctx._select.className);\n          }\n        }\n      },\n      sName: 'select-deferRender'\n    }); // On Ajax reload we want to reselect all rows which are currently selected,\n    // if there is an rowId (i.e. a unique value to identify each row with)\n\n    api.on('preXhr.dt.dtSelect', function () {\n      // note that column selection doesn't need to be cached and then\n      // reselected, as they are already selected\n      var rows = api.rows({\n        selected: true\n      }).ids(true).filter(function (d) {\n        return d !== undefined;\n      });\n      var cells = api.cells({\n        selected: true\n      }).eq(0).map(function (cellIdx) {\n        var id = api.row(cellIdx.row).id(true);\n        return id ? {\n          row: id,\n          column: cellIdx.column\n        } : undefined;\n      }).filter(function (d) {\n        return d !== undefined;\n      }); // On the next draw, reselect the currently selected items\n\n      api.one('draw.dt.dtSelect', function () {\n        api.rows(rows).select(); // `cells` is not a cell index selector, so it needs a loop\n\n        if (cells.any()) {\n          cells.each(function (id) {\n            api.cells(id.row, id.column).select();\n          });\n        }\n      });\n    }); // Update the table information element with selected item summary\n\n    api.on('draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt', function () {\n      info(api);\n    }); // Clean up and release\n\n    api.on('destroy.dtSelect', function () {\n      disableMouseSelection(api);\n      api.off('.dtSelect');\n    });\n  }\n  /**\n   * Add one or more items (rows or columns) to the selection when shift clicking\n   * in OS selection style\n   *\n   * @param  {DataTable.Api} dt   DataTable\n   * @param  {string}        type Row or column range selector\n   * @param  {object}        idx  Item index to select to\n   * @param  {object}        last Item index to select from\n   * @private\n   */\n\n\n  function rowColumnRange(dt, type, idx, last) {\n    // Add a range of rows from the last selected row to this one\n    var indexes = dt[type + 's']({\n      search: 'applied'\n    }).indexes();\n    var idx1 = $.inArray(last, indexes);\n    var idx2 = $.inArray(idx, indexes);\n\n    if (!dt[type + 's']({\n      selected: true\n    }).any() && idx1 === -1) {\n      // select from top to here - slightly odd, but both Windows and Mac OS\n      // do this\n      indexes.splice($.inArray(idx, indexes) + 1, indexes.length);\n    } else {\n      // reverse so we can shift click 'up' as well as down\n      if (idx1 > idx2) {\n        var tmp = idx2;\n        idx2 = idx1;\n        idx1 = tmp;\n      }\n\n      indexes.splice(idx2 + 1, indexes.length);\n      indexes.splice(0, idx1);\n    }\n\n    if (!dt[type](idx, {\n      selected: true\n    }).any()) {\n      // Select range\n      dt[type + 's'](indexes).select();\n    } else {\n      // Deselect range - need to keep the clicked on row selected\n      indexes.splice($.inArray(idx, indexes), 1);\n      dt[type + 's'](indexes).deselect();\n    }\n  }\n  /**\n   * Clear all selected items\n   *\n   * @param  {DataTable.settings} ctx Settings object of the host DataTable\n   * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n   *     of selection style\n   * @private\n   */\n\n\n  function clear(ctx, force) {\n    if (force || ctx._select.style === 'single') {\n      var api = new DataTable.Api(ctx);\n      api.rows({\n        selected: true\n      }).deselect();\n      api.columns({\n        selected: true\n      }).deselect();\n      api.cells({\n        selected: true\n      }).deselect();\n    }\n  }\n  /**\n   * Select items based on the current configuration for style and items.\n   *\n   * @param  {object}             e    Mouse event object\n   * @param  {DataTables.Api}     dt   DataTable\n   * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n   * @param  {string}             type Items to select\n   * @param  {int|object}         idx  Index of the item to select\n   * @private\n   */\n\n\n  function typeSelect(e, dt, ctx, type, idx) {\n    var style = dt.select.style();\n    var isSelected = dt[type](idx, {\n      selected: true\n    }).any();\n\n    if (style === 'os') {\n      if (e.ctrlKey || e.metaKey) {\n        // Add or remove from the selection\n        dt[type](idx).select(!isSelected);\n      } else if (e.shiftKey) {\n        if (type === 'cell') {\n          cellRange(dt, idx, ctx._select_lastCell || null);\n        } else {\n          rowColumnRange(dt, type, idx, ctx._select_lastCell ? ctx._select_lastCell[type] : null);\n        }\n      } else {\n        // No cmd or shift click - deselect if selected, or select\n        // this row only\n        var selected = dt[type + 's']({\n          selected: true\n        });\n\n        if (isSelected && selected.flatten().length === 1) {\n          dt[type](idx).deselect();\n        } else {\n          selected.deselect();\n          dt[type](idx).select();\n        }\n      }\n    } else {\n      dt[type](idx).select(!isSelected);\n    }\n  }\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables selectors\n   */\n  // row and column are basically identical just assigned to different properties\n  // and checking a different array, so we can dynamically create the functions to\n  // reduce the code size\n\n\n  $.each([{\n    type: 'row',\n    prop: 'aoData'\n  }, {\n    type: 'column',\n    prop: 'aoColumns'\n  }], function (i, o) {\n    DataTable.ext.selector[o.type].push(function (settings, opts, indexes) {\n      var selected = opts.selected;\n      var data;\n      var out = [];\n\n      if (selected === undefined) {\n        return indexes;\n      }\n\n      for (var i = 0, ien = indexes.length; i < ien; i++) {\n        data = settings[o.prop][indexes[i]];\n\n        if (selected === true && data._select_selected === true || selected === false && !data._select_selected) {\n          out.push(indexes[i]);\n        }\n      }\n\n      return out;\n    });\n  });\n  DataTable.ext.selector.cell.push(function (settings, opts, cells) {\n    var selected = opts.selected;\n    var rowData;\n    var out = [];\n\n    if (selected === undefined) {\n      return cells;\n    }\n\n    for (var i = 0, ien = cells.length; i < ien; i++) {\n      rowData = settings.aoData[cells[i].row];\n\n      if (selected === true && rowData._selected_cells && rowData._selected_cells[cells[i].column] === true || selected === false && (!rowData._selected_cells || !rowData._selected_cells[cells[i].column])) {\n        out.push(cells[i]);\n      }\n    }\n\n    return out;\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables API\n   *\n   * For complete documentation, please refer to the docs/api directory or the\n   * DataTables site\n   */\n  // Local variables to improve compression\n\n  var apiRegister = DataTable.Api.register;\n  var apiRegisterPlural = DataTable.Api.registerPlural;\n  apiRegister('select()', function () {});\n  apiRegister('select.blurable()', function (flag) {\n    if (flag === undefined) {\n      return this.context[0]._select.blurable;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.blurable = flag;\n    });\n  });\n  apiRegister('select.info()', function (flag) {\n    if (info === undefined) {\n      return this.context[0]._select.info;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.info = flag;\n    });\n  });\n  apiRegister('select.items()', function (items) {\n    if (items === undefined) {\n      return this.context[0]._select.items;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.items = items;\n      eventTrigger(new DataTable.Api(ctx), 'selectItems', [items]);\n    });\n  }); // Takes effect from the _next_ selection. None disables future selection, but\n  // does not clear the current selection. Use the `deselect` methods for that\n\n  apiRegister('select.style()', function (style) {\n    if (style === undefined) {\n      return this.context[0]._select.style;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.style = style;\n\n      if (!ctx._select_init) {\n        init(ctx);\n      } // Add / remove mouse event handlers. They aren't required when only\n      // API selection is available\n\n\n      var dt = new DataTable.Api(ctx);\n      disableMouseSelection(dt);\n\n      if (style !== 'api') {\n        enableMouseSelection(dt);\n      }\n\n      eventTrigger(new DataTable.Api(ctx), 'selectStyle', [style]);\n    });\n  });\n  apiRegister('select.selector()', function (selector) {\n    if (selector === undefined) {\n      return this.context[0]._select.selector;\n    }\n\n    return this.iterator('table', function (ctx) {\n      disableMouseSelection(new DataTable.Api(ctx));\n      ctx._select.selector = selector;\n\n      if (ctx._select.style !== 'api') {\n        enableMouseSelection(new DataTable.Api(ctx));\n      }\n    });\n  });\n  apiRegisterPlural('rows().select()', 'row().select()', function (select) {\n    var api = this;\n\n    if (select === false) {\n      return this.deselect();\n    }\n\n    this.iterator('row', function (ctx, idx) {\n      clear(ctx);\n      ctx.aoData[idx]._select_selected = true;\n      $(ctx.aoData[idx].nTr).addClass(ctx._select.className);\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'select', ['row', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('columns().select()', 'column().select()', function (select) {\n    var api = this;\n\n    if (select === false) {\n      return this.deselect();\n    }\n\n    this.iterator('column', function (ctx, idx) {\n      clear(ctx);\n      ctx.aoColumns[idx]._select_selected = true;\n      var column = new DataTable.Api(ctx).column(idx);\n      $(column.header()).addClass(ctx._select.className);\n      $(column.footer()).addClass(ctx._select.className);\n      column.nodes().to$().addClass(ctx._select.className);\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'select', ['column', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('cells().select()', 'cell().select()', function (select) {\n    var api = this;\n\n    if (select === false) {\n      return this.deselect();\n    }\n\n    this.iterator('cell', function (ctx, rowIdx, colIdx) {\n      clear(ctx);\n      var data = ctx.aoData[rowIdx];\n\n      if (data._selected_cells === undefined) {\n        data._selected_cells = [];\n      }\n\n      data._selected_cells[colIdx] = true;\n\n      if (data.anCells) {\n        $(data.anCells[colIdx]).addClass(ctx._select.className);\n      }\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'select', ['cell', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('rows().deselect()', 'row().deselect()', function () {\n    var api = this;\n    this.iterator('row', function (ctx, idx) {\n      ctx.aoData[idx]._select_selected = false;\n      $(ctx.aoData[idx].nTr).removeClass(ctx._select.className);\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'deselect', ['row', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('columns().deselect()', 'column().deselect()', function () {\n    var api = this;\n    this.iterator('column', function (ctx, idx) {\n      ctx.aoColumns[idx]._select_selected = false;\n      var api = new DataTable.Api(ctx);\n      var column = api.column(idx);\n      $(column.header()).removeClass(ctx._select.className);\n      $(column.footer()).removeClass(ctx._select.className); // Need to loop over each cell, rather than just using\n      // `column().nodes()` as cells which are individually selected should\n      // not have the `selected` class removed from them\n\n      api.cells(null, idx).indexes().each(function (cellIdx) {\n        var data = ctx.aoData[cellIdx.row];\n        var cellSelected = data._selected_cells;\n\n        if (data.anCells && (!cellSelected || !cellSelected[cellIdx.column])) {\n          $(data.anCells[cellIdx.column]).removeClass(ctx._select.className);\n        }\n      });\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'deselect', ['column', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('cells().deselect()', 'cell().deselect()', function () {\n    var api = this;\n    this.iterator('cell', function (ctx, rowIdx, colIdx) {\n      var data = ctx.aoData[rowIdx];\n      data._selected_cells[colIdx] = false; // Remove class only if the cells exist, and the cell is not column\n      // selected, in which case the class should remain (since it is selected\n      // in the column)\n\n      if (data.anCells && !ctx.aoColumns[colIdx]._select_selected) {\n        $(data.anCells[colIdx]).removeClass(ctx._select.className);\n      }\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'deselect', ['cell', api[i]], true);\n    });\n    return this;\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Buttons\n   */\n\n  function i18n(label, def) {\n    return function (dt) {\n      return dt.i18n('buttons.' + label, def);\n    };\n  }\n\n  $.extend(DataTable.ext.buttons, {\n    selected: {\n      text: i18n('selected', 'Selected'),\n      className: 'buttons-selected',\n      init: function init(dt, button, config) {\n        var that = this; // .DT namespace listeners are removed by DataTables automatically\n        // on table destroy\n\n        dt.on('draw.dt.DT select.dt.DT deselect.dt.DT', function () {\n          var enable = that.rows({\n            selected: true\n          }).any() || that.columns({\n            selected: true\n          }).any() || that.cells({\n            selected: true\n          }).any();\n          that.enable(enable);\n        });\n        this.disable();\n      }\n    },\n    selectedSingle: {\n      text: i18n('selectedSingle', 'Selected single'),\n      className: 'buttons-selected-single',\n      init: function init(dt, button, config) {\n        var that = this;\n        dt.on('draw.dt.DT select.dt.DT deselect.dt.DT', function () {\n          var count = dt.rows({\n            selected: true\n          }).flatten().length + dt.columns({\n            selected: true\n          }).flatten().length + dt.cells({\n            selected: true\n          }).flatten().length;\n          that.enable(count === 1);\n        });\n        this.disable();\n      }\n    },\n    selectAll: {\n      text: i18n('selectAll', 'Select all'),\n      className: 'buttons-select-all',\n      action: function action() {\n        var items = this.select.items();\n        this[items + 's']().select();\n      }\n    },\n    selectNone: {\n      text: i18n('selectNone', 'Deselect all'),\n      className: 'buttons-select-none',\n      action: function action() {\n        clear(this.settings()[0], true);\n      }\n    }\n  });\n  $.each(['Row', 'Column', 'Cell'], function (i, item) {\n    var lc = item.toLowerCase();\n    DataTable.ext.buttons['select' + item + 's'] = {\n      text: i18n('select' + item + 's', 'Select ' + lc + 's'),\n      className: 'buttons-select-' + lc + 's',\n      action: function action() {\n        this.select.items(lc);\n      },\n      init: function init(dt, button, config) {\n        var that = this;\n        dt.on('selectItems.dt.DT', function (e, ctx, items) {\n          that.active(items === lc);\n        });\n      }\n    };\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Initialisation\n   */\n  // DataTables creation - check if the buttons have been defined for this table,\n  // they will have been if the `B` option was used in `dom`, otherwise we should\n  // create the buttons instance here so they can be inserted into the document\n  // using the API\n\n  $(document).on('preInit.dt.dtSelect', function (e, ctx, json) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    var opts = ctx.oInit.select || DataTable.defaults.select;\n    var dt = new DataTable.Api(ctx); // Set defaults\n\n    var items = 'row';\n    var style = 'api';\n    var blurable = false;\n    var info = true;\n    var selector = 'td, th';\n    var className = 'selected';\n    ctx._select = {}; // Initialisation customisations\n\n    if (opts === true) {\n      style = 'os';\n    } else if (typeof opts === 'string') {\n      style = opts;\n    } else if ($.isPlainObject(opts)) {\n      if (opts.blurable !== undefined) {\n        blurable = opts.blurable;\n      }\n\n      if (opts.info !== undefined) {\n        info = opts.info;\n      }\n\n      if (opts.items !== undefined) {\n        items = opts.items;\n      }\n\n      if (opts.style !== undefined) {\n        style = opts.style;\n      }\n\n      if (opts.selector !== undefined) {\n        selector = opts.selector;\n      }\n\n      if (opts.className !== undefined) {\n        className = opts.className;\n      }\n    }\n\n    dt.select.selector(selector);\n    dt.select.items(items);\n    dt.select.style(style);\n    dt.select.blurable(blurable);\n    dt.select.info(info);\n    ctx._select.className = className; // If the init options haven't enabled select, but there is a selectable\n    // class name, then enable\n\n    if ($(dt.table().node()).hasClass('selectable')) {\n      dt.select.style('os');\n    }\n  });\n  return DataTable.select;\n});","map":{"version":3,"sources":["/Users/david/Winner-Stock/app/javascript/packs/custom/dataTables/dataTables.select.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","select","version","cellRange","dt","idx","last","indexes","columnIndexes","rowIndexes","selectColumns","start","end","tmp","record","columns","filter","i","selectRows","rows","search","indexOf","cells","selected","any","column","row","flatten","deselect","disableMouseSelection","ctx","settings","selector","_select","table","body","off","enableMouseSelection","on","e","shiftKey","css","one","items","target","closest","cell","cellIndex","index","typeSelect","_select_lastCell","blurable","parents","container","length","clear","eventTrigger","api","type","args","unshift","node","triggerHandler","info","aanFeatures","output","add","name","num","append","i18n","_","each","el","exisiting","children","remove","text","init","Api","aoRowCreatedCallback","push","data","ien","d","aoData","_select_selected","addClass","className","aoColumns","_selected_cells","anCells","sName","ids","eq","map","cellIdx","id","rowColumnRange","idx1","inArray","idx2","splice","force","style","isSelected","ctrlKey","metaKey","prop","o","ext","opts","out","rowData","apiRegister","register","apiRegisterPlural","registerPlural","flag","context","iterator","_select_init","nTr","header","footer","nodes","to$","rowIdx","colIdx","removeClass","cellSelected","label","def","extend","buttons","button","config","that","enable","disable","selectedSingle","count","selectAll","action","selectNone","item","lc","toLowerCase","active","json","namespace","oInit","defaults","isPlainObject","hasClass"],"mappings":"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","sourcesContent":["/*! Select for DataTables 1.1.0\n * 2015 SpryMedia Ltd - datatables.net/license/mit\n */\n\n/**\n * @summary     Select for DataTables\n * @description A collection of API methods, events and buttons for DataTables\n *   that provides selection options of the items in a DataTable\n * @version     1.1.0\n * @file        dataTables.select.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     datatables.net/forums\n * @copyright   Copyright 2015 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net/extensions/select\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Version information for debugger\nDataTable.select = {};\nDataTable.select.version = '1.1.0';\n\n/*\n\nSelect is a collection of API methods, event handlers, event emitters and\nbuttons (for the `Buttons` extension) for DataTables. It provides the following\nfeatures, with an overview of how they are implemented:\n\n## Selection of rows, columns and cells. Whether an item is selected or not is\n   stored in:\n\n* rows: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoData` object for each row\n* columns: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoColumns` object for each column\n* cells: a `_selected_cells` property which contains an array of boolean values\n  of the `aoData` object for each row. The array is the same length as the\n  columns array, with each element of it representing a cell.\n\nThis method of using boolean flags allows Select to operate when nodes have not\nbeen created for rows / cells (DataTables' defer rendering feature).\n\n## API methods\n\nA range of API methods are available for triggering selection and de-selection\nof rows. Methods are also available to configure the selection events that can\nbe triggered by an end user (such as which items are to be selected). To a large\nextent, these of API methods *is* Select. It is basically a collection of helper\nfunctions that can be used to select items in a DataTable.\n\nConfiguration of select is held in the object `_select` which is attached to the\nDataTables settings object on initialisation. Select being available on a table\nis not optional when Select is loaded, but its default is for selection only to\nbe available via the API - so the end user wouldn't be able to select rows\nwithout additional configuration.\n\nThe `_select` object contains the following properties:\n\n```\n{\n\titems:string     - Can be `rows`, `columns` or `cells`. Defines what item \n\t                   will be selected if the user is allowed to activate row\n\t                   selection using the mouse.\n\tstyle:string     - Can be `none`, `single`, `multi` or `os`. Defines the\n\t                   interaction style when selecting items\n\tblurable:boolean - If row selection can be cleared by clicking outside of\n\t                   the table\n\tinfo:boolean     - If the selection summary should be shown in the table\n\t                   information elements\n}\n```\n\nIn addition to the API methods, Select also extends the DataTables selector\noptions for rows, columns and cells adding a `selected` option to the selector\noptions object, allowing the developer to select only selected items or\nunselected items.\n\n## Mouse selection of items\n\nClicking on items can be used to select items. This is done by a simple event\nhandler that will select the items using the API methods.\n\n */\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Local functions\n */\n\n/**\n * Add one or more cells to the selection when shift clicking in OS selection\n * style cell selection.\n *\n * Cell range is more complicated than row and column as we want to select\n * in the visible grid rather than by index in sequence. For example, if you\n * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n * should also be selected (and not 1-3, 1-4. etc)\n * \n * @param  {DataTable.Api} dt   DataTable\n * @param  {object}        idx  Cell index to select to\n * @param  {object}        last Cell index to select from\n * @private\n */\nfunction cellRange( dt, idx, last )\n{\n\tvar indexes;\n\tvar columnIndexes;\n\tvar rowIndexes;\n\tvar selectColumns = function ( start, end ) {\n\t\tif ( start > end ) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\t\t\n\t\tvar record = false;\n\t\treturn dt.columns( ':visible' ).indexes().filter( function (i) {\n\t\t\tif ( i === start ) {\n\t\t\t\trecord = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( i === end ) { // not else if, as start might === end\n\t\t\t\trecord = false;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn record;\n\t\t} );\n\t};\n\n\tvar selectRows = function ( start, end ) {\n\t\tvar indexes = dt.rows( { search: 'applied' } ).indexes();\n\n\t\t// Which comes first - might need to swap\n\t\tif ( indexes.indexOf( start ) > indexes.indexOf( end ) ) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\n\t\tvar record = false;\n\t\treturn indexes.filter( function (i) {\n\t\t\tif ( i === start ) {\n\t\t\t\trecord = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( i === end ) {\n\t\t\t\trecord = false;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn record;\n\t\t} );\n\t};\n\n\tif ( ! dt.cells( { selected: true } ).any() && ! last ) {\n\t\t// select from the top left cell to this one\n\t\tcolumnIndexes = selectColumns( 0, idx.column );\n\t\trowIndexes = selectRows( 0 , idx.row );\n\t}\n\telse {\n\t\t// Get column indexes between old and new\n\t\tcolumnIndexes = selectColumns( last.column, idx.column );\n\t\trowIndexes = selectRows( last.row , idx.row );\n\t}\n\n\tindexes = dt.cells( rowIndexes, columnIndexes ).flatten();\n\n\tif ( ! dt.cells( idx, { selected: true } ).any() ) {\n\t\t// Select range\n\t\tdt.cells( indexes ).select();\n\t}\n\telse {\n\t\t// Deselect range\n\t\tdt.cells( indexes ).deselect();\n\t}\n}\n\n/**\n * Disable mouse selection by removing the selectors\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction disableMouseSelection( dt )\n{\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\n\t$( dt.table().body() )\n\t\t.off( 'mousedown.dtSelect', selector )\n\t\t.off( 'mouseup.dtSelect', selector )\n\t\t.off( 'click.dtSelect', selector );\n\n\t$('body').off( 'click.dtSelect' );\n}\n\n/**\n * Attach mouse listeners to the table to allow mouse selection of items\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction enableMouseSelection ( dt )\n{\n\tvar body = $( dt.table().body() );\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\n\tbody\n\t\t.on( 'mousedown.dtSelect', selector, function(e) {\n\t\t\t// Disallow text selection for shift clicking on the table so multi\n\t\t\t// element selection doesn't look terrible!\n\t\t\tif ( e.shiftKey ) {\n\t\t\t\tbody\n\t\t\t\t\t.css( '-moz-user-select', 'none' )\n\t\t\t\t\t.one('selectstart.dtSelect', selector, function () {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} );\n\t\t\t}\n\t\t} )\n\t\t.on( 'mouseup.dtSelect', selector, function(e) {\n\t\t\t// Allow text selection to occur again, Mozilla style (tested in FF\n\t\t\t// 35.0.1 - still required)\n\t\t\tbody.css( '-moz-user-select', '' );\n\t\t} )\n\t\t.on( 'click.dtSelect', selector, function ( e ) {\n\t\t\tvar items = dt.select.items();\n\t\t\tvar idx;\n\n\t\t\tvar ctx = dt.settings()[0];\n\n\t\t\t// Ignore clicks inside a sub-table\n\t\t\tif ( $(e.target).closest('tbody')[0] != body[0] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cell = $(e.target).closest('td, th');\n\t\t\tvar cellIndex = dt.cell( cell ).index();\n\n\t\t\t// Check the cell actually belongs to the host DataTable (so child rows,\n\t\t\t// etc, are ignored)\n\t\t\tif ( ! dt.cell( cell ).any() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( items === 'row' ) {\n\t\t\t\tidx = cellIndex.row;\n\t\t\t\ttypeSelect( e, dt, ctx, 'row', idx );\n\t\t\t}\n\t\t\telse if ( items === 'column' ) {\n\t\t\t\tidx = dt.cell( cell ).index().column;\n\t\t\t\ttypeSelect( e, dt, ctx, 'column', idx );\n\t\t\t}\n\t\t\telse if ( items === 'cell' ) {\n\t\t\t\tidx = dt.cell( cell ).index();\n\t\t\t\ttypeSelect( e, dt, ctx, 'cell', idx );\n\t\t\t}\n\n\t\t\tctx._select_lastCell = cellIndex;\n\t\t} );\n\n\t// Blurable\n\t$('body').on( 'click.dtSelect', function ( e ) {\n\t\tif ( ctx._select.blurable ) {\n\t\t\t// If the click was inside the DataTables container, don't blur\n\t\t\tif ( $(e.target).parents().filter( dt.table().container() ).length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Don't blur in Editor form\n\t\t\tif ( $(e.target).parents('div.DTE').length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclear( ctx, true );\n\t\t}\n\t} );\n}\n\n/**\n * Trigger an event on a DataTable\n *\n * @param {DataTable.Api} api      DataTable to trigger events on\n * @param  {boolean}      selected true if selected, false if deselected\n * @param  {string}       type     Item type acting on\n * @param  {boolean}      any      Require that there are values before\n *     triggering\n * @private\n */\nfunction eventTrigger ( api, type, args, any )\n{\n\tif ( any && ! api.flatten().length ) {\n\t\treturn;\n\t}\n\n\targs.unshift( api );\n\n\t$(api.table().node()).triggerHandler( type+'.dt', args );\n}\n\n/**\n * Update the information element of the DataTable showing information about the\n * items selected. This is done by adding tags to the existing text\n * \n * @param {DataTable.Api} api DataTable to update\n * @private\n */\nfunction info ( api )\n{\n\tvar ctx = api.settings()[0];\n\n\tif ( ! ctx._select.info || ! ctx.aanFeatures.i ) {\n\t\treturn;\n\t}\n\n\tvar output  = $('<span class=\"select-info\"/>');\n\tvar add = function ( name, num ) {\n\t\toutput.append( $('<span class=\"select-item\"/>').append( api.i18n(\n\t\t\t'select.'+name+'s',\n\t\t\t{ _: '%d '+name+'s selected', 0: '', 1: '1 '+name+' selected' },\n\t\t\tnum\n\t\t) ) );\n\t};\n\n\tadd( 'row',    api.rows( { selected: true } ).flatten().length );\n\tadd( 'column', api.columns( { selected: true } ).flatten().length );\n\tadd( 'cell',   api.cells( { selected: true } ).flatten().length );\n\n\t// Internal knowledge of DataTables to loop over all information elements\n\t$.each( ctx.aanFeatures.i, function ( i, el ) {\n\t\tel = $(el);\n\n\t\tvar exisiting = el.children('span.select-info');\n\t\tif ( exisiting.length ) {\n\t\t\texisiting.remove();\n\t\t}\n\n\t\tif ( output.text() !== '' ) {\n\t\t\tel.append( output );\n\t\t}\n\t} );\n}\n\n/**\n * Initialisation of a new table. Attach event handlers and callbacks to allow\n * Select to operate correctly.\n *\n * This will occur _after_ the initial DataTables initialisation, although\n * before Ajax data is rendered, if there is ajax data\n *\n * @param  {DataTable.settings} ctx Settings object to operate on\n * @private\n */\nfunction init ( ctx ) {\n\tvar api = new DataTable.Api( ctx );\n\n\t// Row callback so that classes can be added to rows and cells if the item\n\t// was selected before the element was created. This will happen with the\n\t// `deferRender` option enabled.\n\t// \n\t// This method of attaching to `aoRowCreatedCallback` is a hack until\n\t// DataTables has proper events for row manipulation If you are reviewing\n\t// this code to create your own plug-ins, please do not do this!\n\tctx.aoRowCreatedCallback.push( {\n\t\tfn: function ( row, data, index ) {\n\t\t\tvar i, ien;\n\t\t\tvar d = ctx.aoData[ index ];\n\n\t\t\t// Row\n\t\t\tif ( d._select_selected ) {\n\t\t\t\t$( row ).addClass( ctx._select.className );\n\t\t\t}\n\n\t\t\t// Cells and columns - if separated out, we would need to do two\n\t\t\t// loops, so it makes sense to combine them into a single one\n\t\t\tfor ( i=0, ien=ctx.aoColumns.length ; i<ien ; i++ ) {\n\t\t\t\tif ( ctx.aoColumns[i]._select_selected || (d._selected_cells && d._selected_cells[i]) ) {\n\t\t\t\t\t$(d.anCells[i]).addClass( ctx._select.className );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsName: 'select-deferRender'\n\t} );\n\n\t// On Ajax reload we want to reselect all rows which are currently selected,\n\t// if there is an rowId (i.e. a unique value to identify each row with)\n\tapi.on( 'preXhr.dt.dtSelect', function () {\n\t\t// note that column selection doesn't need to be cached and then\n\t\t// reselected, as they are already selected\n\t\tvar rows = api.rows( { selected: true } ).ids( true ).filter( function ( d ) {\n\t\t\treturn d !== undefined;\n\t\t} );\n\n\t\tvar cells = api.cells( { selected: true } ).eq(0).map( function ( cellIdx ) {\n\t\t\tvar id = api.row( cellIdx.row ).id( true );\n\t\t\treturn id ?\n\t\t\t\t{ row: id, column: cellIdx.column } :\n\t\t\t\tundefined;\n\t\t} ).filter( function ( d ) {\n\t\t\treturn d !== undefined;\n\t\t} );\n\n\t\t// On the next draw, reselect the currently selected items\n\t\tapi.one( 'draw.dt.dtSelect', function () {\n\t\t\tapi.rows( rows ).select();\n\n\t\t\t// `cells` is not a cell index selector, so it needs a loop\n\t\t\tif ( cells.any() ) {\n\t\t\t\tcells.each( function ( id ) {\n\t\t\t\t\tapi.cells( id.row, id.column ).select();\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t} );\n\n\t// Update the table information element with selected item summary\n\tapi.on( 'draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt', function () {\n\t\tinfo( api );\n\t} );\n\n\t// Clean up and release\n\tapi.on( 'destroy.dtSelect', function () {\n\t\tdisableMouseSelection( api );\n\t\tapi.off( '.dtSelect' );\n\t} );\n}\n\n/**\n * Add one or more items (rows or columns) to the selection when shift clicking\n * in OS selection style\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {string}        type Row or column range selector\n * @param  {object}        idx  Item index to select to\n * @param  {object}        last Item index to select from\n * @private\n */\nfunction rowColumnRange( dt, type, idx, last )\n{\n\t// Add a range of rows from the last selected row to this one\n\tvar indexes = dt[type+'s']( { search: 'applied' } ).indexes();\n\tvar idx1 = $.inArray( last, indexes );\n\tvar idx2 = $.inArray( idx, indexes );\n\n\tif ( ! dt[type+'s']( { selected: true } ).any() && idx1 === -1 ) {\n\t\t// select from top to here - slightly odd, but both Windows and Mac OS\n\t\t// do this\n\t\tindexes.splice( $.inArray( idx, indexes )+1, indexes.length );\n\t}\n\telse {\n\t\t// reverse so we can shift click 'up' as well as down\n\t\tif ( idx1 > idx2 ) {\n\t\t\tvar tmp = idx2;\n\t\t\tidx2 = idx1;\n\t\t\tidx1 = tmp;\n\t\t}\n\n\t\tindexes.splice( idx2+1, indexes.length );\n\t\tindexes.splice( 0, idx1 );\n\t}\n\n\tif ( ! dt[type]( idx, { selected: true } ).any() ) {\n\t\t// Select range\n\t\tdt[type+'s']( indexes ).select();\n\t}\n\telse {\n\t\t// Deselect range - need to keep the clicked on row selected\n\t\tindexes.splice( $.inArray( idx, indexes ), 1 );\n\t\tdt[type+'s']( indexes ).deselect();\n\t}\n}\n\n/**\n * Clear all selected items\n *\n * @param  {DataTable.settings} ctx Settings object of the host DataTable\n * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n *     of selection style\n * @private\n */\nfunction clear( ctx, force )\n{\n\tif ( force || ctx._select.style === 'single' ) {\n\t\tvar api = new DataTable.Api( ctx );\n\t\t\n\t\tapi.rows( { selected: true } ).deselect();\n\t\tapi.columns( { selected: true } ).deselect();\n\t\tapi.cells( { selected: true } ).deselect();\n\t}\n}\n\n/**\n * Select items based on the current configuration for style and items.\n *\n * @param  {object}             e    Mouse event object\n * @param  {DataTables.Api}     dt   DataTable\n * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n * @param  {string}             type Items to select\n * @param  {int|object}         idx  Index of the item to select\n * @private\n */\nfunction typeSelect ( e, dt, ctx, type, idx )\n{\n\tvar style = dt.select.style();\n\tvar isSelected = dt[type]( idx, { selected: true } ).any();\n\n\tif ( style === 'os' ) {\n\t\tif ( e.ctrlKey || e.metaKey ) {\n\t\t\t// Add or remove from the selection\n\t\t\tdt[type]( idx ).select( ! isSelected );\n\t\t}\n\t\telse if ( e.shiftKey ) {\n\t\t\tif ( type === 'cell' ) {\n\t\t\t\tcellRange( dt, idx, ctx._select_lastCell || null );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange( dt, type, idx, ctx._select_lastCell ?\n\t\t\t\t\tctx._select_lastCell[type] :\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No cmd or shift click - deselect if selected, or select\n\t\t\t// this row only\n\t\t\tvar selected = dt[type+'s']( { selected: true } );\n\n\t\t\tif ( isSelected && selected.flatten().length === 1 ) {\n\t\t\t\tdt[type]( idx ).deselect();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselected.deselect();\n\t\t\t\tdt[type]( idx ).select();\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tdt[ type ]( idx ).select( ! isSelected );\n\t}\n}\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables selectors\n */\n\n// row and column are basically identical just assigned to different properties\n// and checking a different array, so we can dynamically create the functions to\n// reduce the code size\n$.each( [\n\t{ type: 'row', prop: 'aoData' },\n\t{ type: 'column', prop: 'aoColumns' }\n], function ( i, o ) {\n\tDataTable.ext.selector[ o.type ].push( function ( settings, opts, indexes ) {\n\t\tvar selected = opts.selected;\n\t\tvar data;\n\t\tvar out = [];\n\n\t\tif ( selected === undefined ) {\n\t\t\treturn indexes;\n\t\t}\n\n\t\tfor ( var i=0, ien=indexes.length ; i<ien ; i++ ) {\n\t\t\tdata = settings[ o.prop ][ indexes[i] ];\n\n\t\t\tif ( (selected === true && data._select_selected === true) ||\n\t\t\t\t (selected === false && ! data._select_selected )\n\t\t\t) {\n\t\t\t\tout.push( indexes[i] );\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t} );\n} );\n\nDataTable.ext.selector.cell.push( function ( settings, opts, cells ) {\n\tvar selected = opts.selected;\n\tvar rowData;\n\tvar out = [];\n\n\tif ( selected === undefined ) {\n\t\treturn cells;\n\t}\n\n\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\trowData = settings.aoData[ cells[i].row ];\n\n\t\tif ( (selected === true && rowData._selected_cells && rowData._selected_cells[ cells[i].column ] === true) ||\n\t\t\t (selected === false && ( ! rowData._selected_cells || ! rowData._selected_cells[ cells[i].column ] ) )\n\t\t) {\n\t\t\tout.push( cells[i] );\n\t\t}\n\t}\n\n\treturn out;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Local variables to improve compression\nvar apiRegister = DataTable.Api.register;\nvar apiRegisterPlural = DataTable.Api.registerPlural;\n\napiRegister( 'select()', function () {} );\n\napiRegister( 'select.blurable()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.context[0]._select.blurable;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.blurable = flag;\n\t} );\n} );\n\napiRegister( 'select.info()', function ( flag ) {\n\tif ( info === undefined ) {\n\t\treturn this.context[0]._select.info;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.info = flag;\n\t} );\n} );\n\napiRegister( 'select.items()', function ( items ) {\n\tif ( items === undefined ) {\n\t\treturn this.context[0]._select.items;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.items = items;\n\n\t\teventTrigger( new DataTable.Api( ctx ), 'selectItems', [ items ] );\n\t} );\n} );\n\n// Takes effect from the _next_ selection. None disables future selection, but\n// does not clear the current selection. Use the `deselect` methods for that\napiRegister( 'select.style()', function ( style ) {\n\tif ( style === undefined ) {\n\t\treturn this.context[0]._select.style;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.style = style;\n\n\t\tif ( ! ctx._select_init ) {\n\t\t\tinit( ctx );\n\t\t}\n\n\t\t// Add / remove mouse event handlers. They aren't required when only\n\t\t// API selection is available\n\t\tvar dt = new DataTable.Api( ctx );\n\t\tdisableMouseSelection( dt );\n\t\t\n\t\tif ( style !== 'api' ) {\n\t\t\tenableMouseSelection( dt );\n\t\t}\n\n\t\teventTrigger( new DataTable.Api( ctx ), 'selectStyle', [ style ] );\n\t} );\n} );\n\napiRegister( 'select.selector()', function ( selector ) {\n\tif ( selector === undefined ) {\n\t\treturn this.context[0]._select.selector;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tdisableMouseSelection( new DataTable.Api( ctx ) );\n\n\t\tctx._select.selector = selector;\n\n\t\tif ( ctx._select.style !== 'api' ) {\n\t\t\tenableMouseSelection( new DataTable.Api( ctx ) );\n\t\t}\n\t} );\n} );\n\n\n\napiRegisterPlural( 'rows().select()', 'row().select()', function ( select ) {\n\tvar api = this;\n\n\tif ( select === false ) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator( 'row', function ( ctx, idx ) {\n\t\tclear( ctx );\n\n\t\tctx.aoData[ idx ]._select_selected = true;\n\t\t$( ctx.aoData[ idx ].nTr ).addClass( ctx._select.className );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'select', [ 'row', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegisterPlural( 'columns().select()', 'column().select()', function ( select ) {\n\tvar api = this;\n\n\tif ( select === false ) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator( 'column', function ( ctx, idx ) {\n\t\tclear( ctx );\n\n\t\tctx.aoColumns[ idx ]._select_selected = true;\n\n\t\tvar column = new DataTable.Api( ctx ).column( idx );\n\n\t\t$( column.header() ).addClass( ctx._select.className );\n\t\t$( column.footer() ).addClass( ctx._select.className );\n\n\t\tcolumn.nodes().to$().addClass( ctx._select.className );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'select', [ 'column', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegisterPlural( 'cells().select()', 'cell().select()', function ( select ) {\n\tvar api = this;\n\n\tif ( select === false ) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {\n\t\tclear( ctx );\n\n\t\tvar data = ctx.aoData[ rowIdx ];\n\n\t\tif ( data._selected_cells === undefined ) {\n\t\t\tdata._selected_cells = [];\n\t\t}\n\n\t\tdata._selected_cells[ colIdx ] = true;\n\n\t\tif ( data.anCells ) {\n\t\t\t$( data.anCells[ colIdx ] ).addClass( ctx._select.className );\n\t\t}\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'select', [ 'cell', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\n\napiRegisterPlural( 'rows().deselect()', 'row().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator( 'row', function ( ctx, idx ) {\n\t\tctx.aoData[ idx ]._select_selected = false;\n\t\t$( ctx.aoData[ idx ].nTr ).removeClass( ctx._select.className );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'deselect', [ 'row', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegisterPlural( 'columns().deselect()', 'column().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator( 'column', function ( ctx, idx ) {\n\t\tctx.aoColumns[ idx ]._select_selected = false;\n\n\t\tvar api = new DataTable.Api( ctx );\n\t\tvar column = api.column( idx );\n\n\t\t$( column.header() ).removeClass( ctx._select.className );\n\t\t$( column.footer() ).removeClass( ctx._select.className );\n\n\t\t// Need to loop over each cell, rather than just using\n\t\t// `column().nodes()` as cells which are individually selected should\n\t\t// not have the `selected` class removed from them\n\t\tapi.cells( null, idx ).indexes().each( function (cellIdx) {\n\t\t\tvar data = ctx.aoData[ cellIdx.row ];\n\t\t\tvar cellSelected = data._selected_cells;\n\n\t\t\tif ( data.anCells && (! cellSelected || ! cellSelected[ cellIdx.column ]) ) {\n\t\t\t\t$( data.anCells[ cellIdx.column  ] ).removeClass( ctx._select.className );\n\t\t\t}\n\t\t} );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'deselect', [ 'column', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegisterPlural( 'cells().deselect()', 'cell().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {\n\t\tvar data = ctx.aoData[ rowIdx ];\n\n\t\tdata._selected_cells[ colIdx ] = false;\n\n\t\t// Remove class only if the cells exist, and the cell is not column\n\t\t// selected, in which case the class should remain (since it is selected\n\t\t// in the column)\n\t\tif ( data.anCells && ! ctx.aoColumns[ colIdx ]._select_selected ) {\n\t\t\t$( data.anCells[ colIdx ] ).removeClass( ctx._select.className );\n\t\t}\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'deselect', [ 'cell', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Buttons\n */\nfunction i18n( label, def ) {\n\treturn function (dt) {\n\t\treturn dt.i18n( 'buttons.'+label, def );\n\t};\n}\n\n$.extend( DataTable.ext.buttons, {\n\tselected: {\n\t\ttext: i18n( 'selected', 'Selected' ),\n\t\tclassName: 'buttons-selected',\n\t\tinit: function ( dt, button, config ) {\n\t\t\tvar that = this;\n\n\t\t\t// .DT namespace listeners are removed by DataTables automatically\n\t\t\t// on table destroy\n\t\t\tdt.on( 'draw.dt.DT select.dt.DT deselect.dt.DT', function () {\n\t\t\t\tvar enable = that.rows( { selected: true } ).any() ||\n\t\t\t\t             that.columns( { selected: true } ).any() ||\n\t\t\t\t             that.cells( { selected: true } ).any();\n\n\t\t\t\tthat.enable( enable );\n\t\t\t} );\n\n\t\t\tthis.disable();\n\t\t}\n\t},\n\tselectedSingle: {\n\t\ttext: i18n( 'selectedSingle', 'Selected single' ),\n\t\tclassName: 'buttons-selected-single',\n\t\tinit: function ( dt, button, config ) {\n\t\t\tvar that = this;\n\n\t\t\tdt.on( 'draw.dt.DT select.dt.DT deselect.dt.DT', function () {\n\t\t\t\tvar count = dt.rows( { selected: true } ).flatten().length +\n\t\t\t\t            dt.columns( { selected: true } ).flatten().length +\n\t\t\t\t            dt.cells( { selected: true } ).flatten().length;\n\n\t\t\t\tthat.enable( count === 1 );\n\t\t\t} );\n\n\t\t\tthis.disable();\n\t\t}\n\t},\n\tselectAll: {\n\t\ttext: i18n( 'selectAll', 'Select all' ),\n\t\tclassName: 'buttons-select-all',\n\t\taction: function () {\n\t\t\tvar items = this.select.items();\n\t\t\tthis[ items+'s' ]().select();\n\t\t}\n\t},\n\tselectNone: {\n\t\ttext: i18n( 'selectNone', 'Deselect all' ),\n\t\tclassName: 'buttons-select-none',\n\t\taction: function () {\n\t\t\tclear( this.settings()[0], true );\n\t\t}\n\t}\n} );\n\n$.each( [ 'Row', 'Column', 'Cell' ], function ( i, item ) {\n\tvar lc = item.toLowerCase();\n\n\tDataTable.ext.buttons[ 'select'+item+'s' ] = {\n\t\ttext: i18n( 'select'+item+'s', 'Select '+lc+'s' ),\n\t\tclassName: 'buttons-select-'+lc+'s',\n\t\taction: function () {\n\t\t\tthis.select.items( lc );\n\t\t},\n\t\tinit: function ( dt, button, config ) {\n\t\t\tvar that = this;\n\n\t\t\tdt.on( 'selectItems.dt.DT', function ( e, ctx, items ) {\n\t\t\t\tthat.active( items === lc );\n\t\t\t} );\n\t\t}\n\t};\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n */\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API\n$(document).on( 'preInit.dt.dtSelect', function (e, ctx, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar opts = ctx.oInit.select || DataTable.defaults.select;\n\tvar dt = new DataTable.Api( ctx );\n\n\t// Set defaults\n\tvar items = 'row';\n\tvar style = 'api';\n\tvar blurable = false;\n\tvar info = true;\n\tvar selector = 'td, th';\n\tvar className = 'selected';\n\n\tctx._select = {};\n\n\t// Initialisation customisations\n\tif ( opts === true ) {\n\t\tstyle = 'os';\n\t}\n\telse if ( typeof opts === 'string' ) {\n\t\tstyle = opts;\n\t}\n\telse if ( $.isPlainObject( opts ) ) {\n\t\tif ( opts.blurable !== undefined ) {\n\t\t\tblurable = opts.blurable;\n\t\t}\n\n\t\tif ( opts.info !== undefined ) {\n\t\t\tinfo = opts.info;\n\t\t}\n\n\t\tif ( opts.items !== undefined ) {\n\t\t\titems = opts.items;\n\t\t}\n\n\t\tif ( opts.style !== undefined ) {\n\t\t\tstyle = opts.style;\n\t\t}\n\n\t\tif ( opts.selector !== undefined ) {\n\t\t\tselector = opts.selector;\n\t\t}\n\n\t\tif ( opts.className !== undefined ) {\n\t\t\tclassName = opts.className;\n\t\t}\n\t}\n\n\tdt.select.selector( selector );\n\tdt.select.items( items );\n\tdt.select.style( style );\n\tdt.select.blurable( blurable );\n\tdt.select.info( info );\n\tctx._select.className = className;\n\n\t// If the init options haven't enabled select, but there is a selectable\n\t// class name, then enable\n\tif ( $( dt.table().node() ).hasClass( 'selectable' ) ) {\n\t\tdt.select.style( 'os' );\n\t}\n} );\n\n\nreturn DataTable.select;\n}));\n"]},"metadata":{},"sourceType":"module"}