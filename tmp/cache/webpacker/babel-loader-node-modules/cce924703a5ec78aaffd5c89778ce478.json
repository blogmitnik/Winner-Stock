{"ast":null,"code":"/*! FixedColumns 3.2.0\n * Â©2010-2014 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     FixedColumns\n * @description Freeze columns in place on a scrolling DataTable\n * @version     3.2.0\n * @file        dataTables.fixedColumns.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2010-2014 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable;\n  /**\n   * When making use of DataTables' x-axis scrolling feature, you may wish to\n   * fix the left most column in place. This plug-in for DataTables provides\n   * exactly this option (note for non-scrolling tables, please use the\n   * FixedHeader plug-in, which can fix headers, footers and columns). Key\n   * features include:\n   *\n   * * Freezes the left or right most columns to the side of the table\n   * * Option to freeze two or more columns\n   * * Full integration with DataTables' scrolling options\n   * * Speed - FixedColumns is fast in its operation\n   *\n   *  @class\n   *  @constructor\n   *  @global\n   *  @param {object} dt DataTables instance. With DataTables 1.10 this can also\n   *    be a jQuery collection, a jQuery selector, DataTables API instance or\n   *    settings object.\n   *  @param {object} [init={}] Configuration object for FixedColumns. Options are\n   *    defined by {@link FixedColumns.defaults}\n   *\n   *  @requires jQuery 1.7+\n   *  @requires DataTables 1.8.0+\n   *\n   *  @example\n   *      var table = $('#example').dataTable( {\n   *        \"scrollX\": \"100%\"\n   *      } );\n   *      new $.fn.dataTable.fixedColumns( table );\n   */\n\n  var FixedColumns = function FixedColumns(dt, init) {\n    var that = this;\n    /* Sanity check - you just know it will happen */\n\n    if (!(this instanceof FixedColumns)) {\n      alert(\"FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.\");\n      return;\n    }\n\n    if (init === undefined || init === true) {\n      init = {};\n    } // Use the DataTables Hungarian notation mapping method, if it exists to\n    // provide forwards compatibility for camel case variables\n\n\n    var camelToHungarian = $.fn.dataTable.camelToHungarian;\n\n    if (camelToHungarian) {\n      camelToHungarian(FixedColumns.defaults, FixedColumns.defaults, true);\n      camelToHungarian(FixedColumns.defaults, init);\n    } // v1.10 allows the settings object to be got form a number of sources\n\n\n    var dtSettings = new $.fn.dataTable.Api(dt).settings()[0];\n    /**\n     * Settings object which contains customisable information for FixedColumns instance\n     * @namespace\n     * @extends FixedColumns.defaults\n     * @private\n     */\n\n    this.s = {\n      /**\n       * DataTables settings objects\n       *  @type     object\n       *  @default  Obtained from DataTables instance\n       */\n      \"dt\": dtSettings,\n\n      /**\n       * Number of columns in the DataTable - stored for quick access\n       *  @type     int\n       *  @default  Obtained from DataTables instance\n       */\n      \"iTableColumns\": dtSettings.aoColumns.length,\n\n      /**\n       * Original outer widths of the columns as rendered by DataTables - used to calculate\n       * the FixedColumns grid bounding box\n       *  @type     array.<int>\n       *  @default  []\n       */\n      \"aiOuterWidths\": [],\n\n      /**\n       * Original inner widths of the columns as rendered by DataTables - used to apply widths\n       * to the columns\n       *  @type     array.<int>\n       *  @default  []\n       */\n      \"aiInnerWidths\": []\n    };\n    /**\n     * DOM elements used by the class instance\n     * @namespace\n     * @private\n     *\n     */\n\n    this.dom = {\n      /**\n       * DataTables scrolling element\n       *  @type     node\n       *  @default  null\n       */\n      \"scroller\": null,\n\n      /**\n       * DataTables header table\n       *  @type     node\n       *  @default  null\n       */\n      \"header\": null,\n\n      /**\n       * DataTables body table\n       *  @type     node\n       *  @default  null\n       */\n      \"body\": null,\n\n      /**\n       * DataTables footer table\n       *  @type     node\n       *  @default  null\n       */\n      \"footer\": null,\n\n      /**\n       * Display grid elements\n       * @namespace\n       */\n      \"grid\": {\n        /**\n         * Grid wrapper. This is the container element for the 3x3 grid\n         *  @type     node\n         *  @default  null\n         */\n        \"wrapper\": null,\n\n        /**\n         * DataTables scrolling element. This element is the DataTables\n         * component in the display grid (making up the main table - i.e.\n         * not the fixed columns).\n         *  @type     node\n         *  @default  null\n         */\n        \"dt\": null,\n\n        /**\n         * Left fixed column grid components\n         * @namespace\n         */\n        \"left\": {\n          \"wrapper\": null,\n          \"head\": null,\n          \"body\": null,\n          \"foot\": null\n        },\n\n        /**\n         * Right fixed column grid components\n         * @namespace\n         */\n        \"right\": {\n          \"wrapper\": null,\n          \"head\": null,\n          \"body\": null,\n          \"foot\": null\n        }\n      },\n\n      /**\n       * Cloned table nodes\n       * @namespace\n       */\n      \"clone\": {\n        /**\n         * Left column cloned table nodes\n         * @namespace\n         */\n        \"left\": {\n          /**\n           * Cloned header table\n           *  @type     node\n           *  @default  null\n           */\n          \"header\": null,\n\n          /**\n           * Cloned body table\n           *  @type     node\n           *  @default  null\n           */\n          \"body\": null,\n\n          /**\n           * Cloned footer table\n           *  @type     node\n           *  @default  null\n           */\n          \"footer\": null\n        },\n\n        /**\n         * Right column cloned table nodes\n         * @namespace\n         */\n        \"right\": {\n          /**\n           * Cloned header table\n           *  @type     node\n           *  @default  null\n           */\n          \"header\": null,\n\n          /**\n           * Cloned body table\n           *  @type     node\n           *  @default  null\n           */\n          \"body\": null,\n\n          /**\n           * Cloned footer table\n           *  @type     node\n           *  @default  null\n           */\n          \"footer\": null\n        }\n      }\n    };\n\n    if (dtSettings._oFixedColumns) {\n      throw 'FixedColumns already initialised on this table';\n    }\n    /* Attach the instance to the DataTables instance so it can be accessed easily */\n\n\n    dtSettings._oFixedColumns = this;\n    /* Let's do it */\n\n    if (!dtSettings._bInitComplete) {\n      dtSettings.oApi._fnCallbackReg(dtSettings, 'aoInitComplete', function () {\n        that._fnConstruct(init);\n      }, 'FixedColumns');\n    } else {\n      this._fnConstruct(init);\n    }\n  };\n\n  $.extend(FixedColumns.prototype, {\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Public methods\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n    /**\n     * Update the fixed columns - including headers and footers. Note that FixedColumns will\n     * automatically update the display whenever the host DataTable redraws.\n     *  @returns {void}\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      var fc = new $.fn.dataTable.fixedColumns( table );\n     *\n     *      // at some later point when the table has been manipulated....\n     *      fc.fnUpdate();\n     */\n    \"fnUpdate\": function fnUpdate() {\n      this._fnDraw(true);\n    },\n\n    /**\n     * Recalculate the resizes of the 3x3 grid that FixedColumns uses for display of the table.\n     * This is useful if you update the width of the table container. Note that FixedColumns will\n     * perform this function automatically when the window.resize event is fired.\n     *  @returns {void}\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      var fc = new $.fn.dataTable.fixedColumns( table );\n     *\n     *      // Resize the table container and then have FixedColumns adjust its layout....\n     *      $('#content').width( 1200 );\n     *      fc.fnRedrawLayout();\n     */\n    \"fnRedrawLayout\": function fnRedrawLayout() {\n      this._fnColCalc();\n\n      this._fnGridLayout();\n\n      this.fnUpdate();\n    },\n\n    /**\n     * Mark a row such that it's height should be recalculated when using 'semiauto' row\n     * height matching. This function will have no effect when 'none' or 'auto' row height\n     * matching is used.\n     *  @param   {Node} nTr TR element that should have it's height recalculated\n     *  @returns {void}\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      var fc = new $.fn.dataTable.fixedColumns( table );\n     *\n     *      // manipulate the table - mark the row as needing an update then update the table\n     *      // this allows the redraw performed by DataTables fnUpdate to recalculate the row\n     *      // height\n     *      fc.fnRecalculateHeight();\n     *      table.fnUpdate( $('#example tbody tr:eq(0)')[0], [\"insert date\", 1, 2, 3 ... ]);\n     */\n    \"fnRecalculateHeight\": function fnRecalculateHeight(nTr) {\n      delete nTr._DTTC_iHeight;\n      nTr.style.height = 'auto';\n    },\n\n    /**\n     * Set the height of a given row - provides cross browser compatibility\n     *  @param   {Node} nTarget TR element that should have it's height recalculated\n     *  @param   {int} iHeight Height in pixels to set\n     *  @returns {void}\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      var fc = new $.fn.dataTable.fixedColumns( table );\n     *\n     *      // You may want to do this after manipulating a row in the fixed column\n     *      fc.fnSetRowHeight( $('#example tbody tr:eq(0)')[0], 50 );\n     */\n    \"fnSetRowHeight\": function fnSetRowHeight(nTarget, iHeight) {\n      nTarget.style.height = iHeight + \"px\";\n    },\n\n    /**\n     * Get data index information about a row or cell in the table body.\n     * This function is functionally identical to fnGetPosition in DataTables,\n     * taking the same parameter (TH, TD or TR node) and returning exactly the\n     * the same information (data index information). THe difference between\n     * the two is that this method takes into account the fixed columns in the\n     * table, so you can pass in nodes from the master table, or the cloned\n     * tables and get the index position for the data in the main table.\n     *  @param {node} node TR, TH or TD element to get the information about\n     *  @returns {int} If nNode is given as a TR, then a single index is \n     *    returned, or if given as a cell, an array of [row index, column index\n     *    (visible), column index (all)] is given.\n     */\n    \"fnGetPosition\": function fnGetPosition(node) {\n      var idx;\n      var inst = this.s.dt.oInstance;\n\n      if (!$(node).parents('.DTFC_Cloned').length) {\n        // Not in a cloned table\n        return inst.fnGetPosition(node);\n      } else {\n        // Its in the cloned table, so need to look up position\n        if (node.nodeName.toLowerCase() === 'tr') {\n          idx = $(node).index();\n          return inst.fnGetPosition($('tr', this.s.dt.nTBody)[idx]);\n        } else {\n          var colIdx = $(node).index();\n          idx = $(node.parentNode).index();\n          var row = inst.fnGetPosition($('tr', this.s.dt.nTBody)[idx]);\n          return [row, colIdx, inst.oApi._fnVisibleToColumnIndex(this.s.dt, colIdx)];\n        }\n      }\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Private methods (they are of course public in JS, but recommended as private)\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n    /**\n     * Initialisation for FixedColumns\n     *  @param   {Object} oInit User settings for initialisation\n     *  @returns {void}\n     *  @private\n     */\n    \"_fnConstruct\": function _fnConstruct(oInit) {\n      var i,\n          iLen,\n          iWidth,\n          that = this;\n      /* Sanity checking */\n\n      if (typeof this.s.dt.oInstance.fnVersionCheck != 'function' || this.s.dt.oInstance.fnVersionCheck('1.8.0') !== true) {\n        alert(\"FixedColumns \" + FixedColumns.VERSION + \" required DataTables 1.8.0 or later. \" + \"Please upgrade your DataTables installation\");\n        return;\n      }\n\n      if (this.s.dt.oScroll.sX === \"\") {\n        this.s.dt.oInstance.oApi._fnLog(this.s.dt, 1, \"FixedColumns is not needed (no \" + \"x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for \" + \"column fixing when scrolling is not enabled\");\n\n        return;\n      }\n      /* Apply the settings from the user / defaults */\n\n\n      this.s = $.extend(true, this.s, FixedColumns.defaults, oInit);\n      /* Set up the DOM as we need it and cache nodes */\n\n      var classes = this.s.dt.oClasses;\n      this.dom.grid.dt = $(this.s.dt.nTable).parents('div.' + classes.sScrollWrapper)[0];\n      this.dom.scroller = $('div.' + classes.sScrollBody, this.dom.grid.dt)[0];\n      /* Set up the DOM that we want for the fixed column layout grid */\n\n      this._fnColCalc();\n\n      this._fnGridSetup();\n      /* Event handlers */\n\n\n      var mouseController; // When the body is scrolled - scroll the left and right columns\n\n      $(this.dom.scroller).on('mouseover.DTFC touchstart.DTFC', function () {\n        mouseController = 'main';\n      }).on('scroll.DTFC', function (e) {\n        if (!mouseController && e.originalEvent) {\n          mouseController = 'main';\n        }\n\n        if (mouseController === 'main') {\n          if (that.s.iLeftColumns > 0) {\n            that.dom.grid.left.liner.scrollTop = that.dom.scroller.scrollTop;\n          }\n\n          if (that.s.iRightColumns > 0) {\n            that.dom.grid.right.liner.scrollTop = that.dom.scroller.scrollTop;\n          }\n        }\n      });\n      var wheelType = 'onwheel' in document.createElement('div') ? 'wheel.DTFC' : 'mousewheel.DTFC';\n\n      if (that.s.iLeftColumns > 0) {\n        // When scrolling the left column, scroll the body and right column\n        $(that.dom.grid.left.liner).on('mouseover.DTFC touchstart.DTFC', function () {\n          mouseController = 'left';\n        }).on('scroll.DTFC', function (e) {\n          if (!mouseController && e.originalEvent) {\n            mouseController = 'left';\n          }\n\n          if (mouseController === 'left') {\n            that.dom.scroller.scrollTop = that.dom.grid.left.liner.scrollTop;\n\n            if (that.s.iRightColumns > 0) {\n              that.dom.grid.right.liner.scrollTop = that.dom.grid.left.liner.scrollTop;\n            }\n          }\n        }).on(wheelType, function (e) {\n          // Pass horizontal scrolling through\n          var xDelta = e.type === 'wheel' ? -e.originalEvent.deltaX : e.originalEvent.wheelDeltaX;\n          that.dom.scroller.scrollLeft -= xDelta;\n        });\n      }\n\n      if (that.s.iRightColumns > 0) {\n        // When scrolling the right column, scroll the body and the left column\n        $(that.dom.grid.right.liner).on('mouseover.DTFC touchstart.DTFC', function () {\n          mouseController = 'right';\n        }).on('scroll.DTFC', function (e) {\n          if (!mouseController && e.originalEvent) {\n            mouseController = 'right';\n          }\n\n          if (mouseController === 'right') {\n            that.dom.scroller.scrollTop = that.dom.grid.right.liner.scrollTop;\n\n            if (that.s.iLeftColumns > 0) {\n              that.dom.grid.left.liner.scrollTop = that.dom.grid.right.liner.scrollTop;\n            }\n          }\n        }).on(wheelType, function (e) {\n          // Pass horizontal scrolling through\n          var xDelta = e.type === 'wheel' ? -e.originalEvent.deltaX : e.originalEvent.wheelDeltaX;\n          that.dom.scroller.scrollLeft -= xDelta;\n        });\n      }\n\n      $(window).on('resize.DTFC', function () {\n        that._fnGridLayout.call(that);\n      });\n      var bFirstDraw = true;\n      var jqTable = $(this.s.dt.nTable);\n      jqTable.on('draw.dt.DTFC', function () {\n        that._fnDraw.call(that, bFirstDraw);\n\n        bFirstDraw = false;\n      }).on('column-sizing.dt.DTFC', function () {\n        that._fnColCalc();\n\n        that._fnGridLayout(that);\n      }).on('column-visibility.dt.DTFC', function (e, settings, column, vis, recalc) {\n        if (recalc === undefined || recalc) {\n          that._fnColCalc();\n\n          that._fnGridLayout(that);\n\n          that._fnDraw(true);\n        }\n      }).on('destroy.dt.DTFC', function () {\n        jqTable.off('column-sizing.dt.DTFC column-visibility.dt.DTFC destroy.dt.DTFC draw.dt.DTFC');\n        $(that.dom.scroller).off('mouseover.DTFC touchstart.DTFC scroll.DTFC');\n        $(window).off('resize.DTFC');\n        $(that.dom.grid.left.liner).off('mouseover.DTFC touchstart.DTFC scroll.DTFC ' + wheelType);\n        $(that.dom.grid.left.wrapper).remove();\n        $(that.dom.grid.right.liner).off('mouseover.DTFC touchstart.DTFC scroll.DTFC ' + wheelType);\n        $(that.dom.grid.right.wrapper).remove();\n      });\n      /* Get things right to start with - note that due to adjusting the columns, there must be\n       * another redraw of the main table. It doesn't need to be a full redraw however.\n       */\n\n      this._fnGridLayout();\n\n      this.s.dt.oInstance.fnDraw(false);\n    },\n\n    /**\n     * Calculate the column widths for the grid layout\n     *  @returns {void}\n     *  @private\n     */\n    \"_fnColCalc\": function _fnColCalc() {\n      var that = this;\n      var iLeftWidth = 0;\n      var iRightWidth = 0;\n      this.s.aiInnerWidths = [];\n      this.s.aiOuterWidths = [];\n      $.each(this.s.dt.aoColumns, function (i, col) {\n        var th = $(col.nTh);\n        var border;\n\n        if (!th.filter(':visible').length) {\n          that.s.aiInnerWidths.push(0);\n          that.s.aiOuterWidths.push(0);\n        } else {\n          // Inner width is used to assign widths to cells\n          // Outer width is used to calculate the container\n          var iWidth = th.outerWidth(); // When working with the left most-cell, need to add on the\n          // table's border to the outerWidth, since we need to take\n          // account of it, but it isn't in any cell\n\n          if (that.s.aiOuterWidths.length === 0) {\n            border = $(that.s.dt.nTable).css('border-left-width');\n            iWidth += typeof border === 'string' ? 1 : parseInt(border, 10);\n          } // Likewise with the final column on the right\n\n\n          if (that.s.aiOuterWidths.length === that.s.dt.aoColumns.length - 1) {\n            border = $(that.s.dt.nTable).css('border-right-width');\n            iWidth += typeof border === 'string' ? 1 : parseInt(border, 10);\n          }\n\n          that.s.aiOuterWidths.push(iWidth);\n          that.s.aiInnerWidths.push(th.width());\n\n          if (i < that.s.iLeftColumns) {\n            iLeftWidth += iWidth;\n          }\n\n          if (that.s.iTableColumns - that.s.iRightColumns <= i) {\n            iRightWidth += iWidth;\n          }\n        }\n      });\n      this.s.iLeftWidth = iLeftWidth;\n      this.s.iRightWidth = iRightWidth;\n    },\n\n    /**\n     * Set up the DOM for the fixed column. The way the layout works is to create a 1x3 grid\n     * for the left column, the DataTable (for which we just reuse the scrolling element DataTable\n     * puts into the DOM) and the right column. In each of he two fixed column elements there is a\n     * grouping wrapper element and then a head, body and footer wrapper. In each of these we then\n     * place the cloned header, body or footer tables. This effectively gives as 3x3 grid structure.\n     *  @returns {void}\n     *  @private\n     */\n    \"_fnGridSetup\": function _fnGridSetup() {\n      var that = this;\n\n      var oOverflow = this._fnDTOverflow();\n\n      var block;\n      this.dom.body = this.s.dt.nTable;\n      this.dom.header = this.s.dt.nTHead.parentNode;\n      this.dom.header.parentNode.parentNode.style.position = \"relative\";\n      var nSWrapper = $('<div class=\"DTFC_ScrollWrapper\" style=\"position:relative; clear:both;\">' + '<div class=\"DTFC_LeftWrapper\" style=\"position:absolute; top:0; left:0;\">' + '<div class=\"DTFC_LeftHeadWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>' + '<div class=\"DTFC_LeftBodyWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\">' + '<div class=\"DTFC_LeftBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>' + '</div>' + '<div class=\"DTFC_LeftFootWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>' + '</div>' + '<div class=\"DTFC_RightWrapper\" style=\"position:absolute; top:0; left:0;\">' + '<div class=\"DTFC_RightHeadWrapper\" style=\"position:relative; top:0; left:0;\">' + '<div class=\"DTFC_RightHeadBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>' + '</div>' + '<div class=\"DTFC_RightBodyWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\">' + '<div class=\"DTFC_RightBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>' + '</div>' + '<div class=\"DTFC_RightFootWrapper\" style=\"position:relative; top:0; left:0;\">' + '<div class=\"DTFC_RightFootBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>' + '</div>' + '</div>' + '</div>')[0];\n      var nLeft = nSWrapper.childNodes[0];\n      var nRight = nSWrapper.childNodes[1];\n      this.dom.grid.dt.parentNode.insertBefore(nSWrapper, this.dom.grid.dt);\n      nSWrapper.appendChild(this.dom.grid.dt);\n      this.dom.grid.wrapper = nSWrapper;\n\n      if (this.s.iLeftColumns > 0) {\n        this.dom.grid.left.wrapper = nLeft;\n        this.dom.grid.left.head = nLeft.childNodes[0];\n        this.dom.grid.left.body = nLeft.childNodes[1];\n        this.dom.grid.left.liner = $('div.DTFC_LeftBodyLiner', nSWrapper)[0];\n        nSWrapper.appendChild(nLeft);\n      }\n\n      if (this.s.iRightColumns > 0) {\n        this.dom.grid.right.wrapper = nRight;\n        this.dom.grid.right.head = nRight.childNodes[0];\n        this.dom.grid.right.body = nRight.childNodes[1];\n        this.dom.grid.right.liner = $('div.DTFC_RightBodyLiner', nSWrapper)[0];\n        block = $('div.DTFC_RightHeadBlocker', nSWrapper)[0];\n        block.style.width = oOverflow.bar + \"px\";\n        block.style.right = -oOverflow.bar + \"px\";\n        this.dom.grid.right.headBlock = block;\n        block = $('div.DTFC_RightFootBlocker', nSWrapper)[0];\n        block.style.width = oOverflow.bar + \"px\";\n        block.style.right = -oOverflow.bar + \"px\";\n        this.dom.grid.right.footBlock = block;\n        nSWrapper.appendChild(nRight);\n      }\n\n      if (this.s.dt.nTFoot) {\n        this.dom.footer = this.s.dt.nTFoot.parentNode;\n\n        if (this.s.iLeftColumns > 0) {\n          this.dom.grid.left.foot = nLeft.childNodes[2];\n        }\n\n        if (this.s.iRightColumns > 0) {\n          this.dom.grid.right.foot = nRight.childNodes[2];\n        }\n      }\n    },\n\n    /**\n     * Style and position the grid used for the FixedColumns layout\n     *  @returns {void}\n     *  @private\n     */\n    \"_fnGridLayout\": function _fnGridLayout() {\n      var oGrid = this.dom.grid;\n      var iWidth = $(oGrid.wrapper).width();\n      var iBodyHeight = $(this.s.dt.nTable.parentNode).outerHeight();\n      var iFullHeight = $(this.s.dt.nTable.parentNode.parentNode).outerHeight();\n\n      var oOverflow = this._fnDTOverflow();\n\n      var iLeftWidth = this.s.iLeftWidth,\n          iRightWidth = this.s.iRightWidth,\n          iRight;\n\n      var scrollbarAdjust = function scrollbarAdjust(node, width) {\n        if (!oOverflow.bar) {\n          // If there is no scrollbar (Macs) we need to hide the auto scrollbar\n          node.style.width = width + 20 + \"px\";\n          node.style.paddingRight = \"20px\";\n          node.style.boxSizing = \"border-box\";\n        } else {\n          // Otherwise just overflow by the scrollbar\n          node.style.width = width + oOverflow.bar + \"px\";\n        }\n      }; // When x scrolling - don't paint the fixed columns over the x scrollbar\n\n\n      if (oOverflow.x) {\n        iBodyHeight -= oOverflow.bar;\n      }\n\n      oGrid.wrapper.style.height = iFullHeight + \"px\";\n\n      if (this.s.iLeftColumns > 0) {\n        oGrid.left.wrapper.style.width = iLeftWidth + \"px\";\n        oGrid.left.wrapper.style.height = \"1px\";\n        oGrid.left.body.style.height = iBodyHeight + \"px\";\n\n        if (oGrid.left.foot) {\n          oGrid.left.foot.style.top = (oOverflow.x ? oOverflow.bar : 0) + \"px\"; // shift footer for scrollbar\n        }\n\n        scrollbarAdjust(oGrid.left.liner, iLeftWidth);\n        oGrid.left.liner.style.height = iBodyHeight + \"px\";\n      }\n\n      if (this.s.iRightColumns > 0) {\n        iRight = iWidth - iRightWidth;\n\n        if (oOverflow.y) {\n          iRight -= oOverflow.bar;\n        }\n\n        oGrid.right.wrapper.style.width = iRightWidth + \"px\";\n        oGrid.right.wrapper.style.left = iRight + \"px\";\n        oGrid.right.wrapper.style.height = \"1px\";\n        oGrid.right.body.style.height = iBodyHeight + \"px\";\n\n        if (oGrid.right.foot) {\n          oGrid.right.foot.style.top = (oOverflow.x ? oOverflow.bar : 0) + \"px\";\n        }\n\n        scrollbarAdjust(oGrid.right.liner, iRightWidth);\n        oGrid.right.liner.style.height = iBodyHeight + \"px\";\n        oGrid.right.headBlock.style.display = oOverflow.y ? 'block' : 'none';\n        oGrid.right.footBlock.style.display = oOverflow.y ? 'block' : 'none';\n      }\n    },\n\n    /**\n     * Get information about the DataTable's scrolling state - specifically if the table is scrolling\n     * on either the x or y axis, and also the scrollbar width.\n     *  @returns {object} Information about the DataTables scrolling state with the properties:\n     *    'x', 'y' and 'bar'\n     *  @private\n     */\n    \"_fnDTOverflow\": function _fnDTOverflow() {\n      var nTable = this.s.dt.nTable;\n      var nTableScrollBody = nTable.parentNode;\n      var out = {\n        \"x\": false,\n        \"y\": false,\n        \"bar\": this.s.dt.oScroll.iBarWidth\n      };\n\n      if (nTable.offsetWidth > nTableScrollBody.clientWidth) {\n        out.x = true;\n      }\n\n      if (nTable.offsetHeight > nTableScrollBody.clientHeight) {\n        out.y = true;\n      }\n\n      return out;\n    },\n\n    /**\n     * Clone and position the fixed columns\n     *  @returns {void}\n     *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n     *  @private\n     */\n    \"_fnDraw\": function _fnDraw(bAll) {\n      this._fnGridLayout();\n\n      this._fnCloneLeft(bAll);\n\n      this._fnCloneRight(bAll);\n      /* Draw callback function */\n\n\n      if (this.s.fnDrawCallback !== null) {\n        this.s.fnDrawCallback.call(this, this.dom.clone.left, this.dom.clone.right);\n      }\n      /* Event triggering */\n\n\n      $(this).trigger('draw.dtfc', {\n        \"leftClone\": this.dom.clone.left,\n        \"rightClone\": this.dom.clone.right\n      });\n    },\n\n    /**\n     * Clone the right columns\n     *  @returns {void}\n     *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n     *  @private\n     */\n    \"_fnCloneRight\": function _fnCloneRight(bAll) {\n      if (this.s.iRightColumns <= 0) {\n        return;\n      }\n\n      var that = this,\n          i,\n          jq,\n          aiColumns = [];\n\n      for (i = this.s.iTableColumns - this.s.iRightColumns; i < this.s.iTableColumns; i++) {\n        if (this.s.dt.aoColumns[i].bVisible) {\n          aiColumns.push(i);\n        }\n      }\n\n      this._fnClone(this.dom.clone.right, this.dom.grid.right, aiColumns, bAll);\n    },\n\n    /**\n     * Clone the left columns\n     *  @returns {void}\n     *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n     *  @private\n     */\n    \"_fnCloneLeft\": function _fnCloneLeft(bAll) {\n      if (this.s.iLeftColumns <= 0) {\n        return;\n      }\n\n      var that = this,\n          i,\n          jq,\n          aiColumns = [];\n\n      for (i = 0; i < this.s.iLeftColumns; i++) {\n        if (this.s.dt.aoColumns[i].bVisible) {\n          aiColumns.push(i);\n        }\n      }\n\n      this._fnClone(this.dom.clone.left, this.dom.grid.left, aiColumns, bAll);\n    },\n\n    /**\n     * Make a copy of the layout object for a header or footer element from DataTables. Note that\n     * this method will clone the nodes in the layout object.\n     *  @returns {Array} Copy of the layout array\n     *  @param   {Object} aoOriginal Layout array from DataTables (aoHeader or aoFooter)\n     *  @param   {Object} aiColumns Columns to copy\n     *  @param   {boolean} events Copy cell events or not\n     *  @private\n     */\n    \"_fnCopyLayout\": function _fnCopyLayout(aoOriginal, aiColumns, events) {\n      var aReturn = [];\n      var aClones = [];\n      var aCloned = [];\n\n      for (var i = 0, iLen = aoOriginal.length; i < iLen; i++) {\n        var aRow = [];\n        aRow.nTr = $(aoOriginal[i].nTr).clone(events, false)[0];\n\n        for (var j = 0, jLen = this.s.iTableColumns; j < jLen; j++) {\n          if ($.inArray(j, aiColumns) === -1) {\n            continue;\n          }\n\n          var iCloned = $.inArray(aoOriginal[i][j].cell, aCloned);\n\n          if (iCloned === -1) {\n            var nClone = $(aoOriginal[i][j].cell).clone(events, false)[0];\n            aClones.push(nClone);\n            aCloned.push(aoOriginal[i][j].cell);\n            aRow.push({\n              \"cell\": nClone,\n              \"unique\": aoOriginal[i][j].unique\n            });\n          } else {\n            aRow.push({\n              \"cell\": aClones[iCloned],\n              \"unique\": aoOriginal[i][j].unique\n            });\n          }\n        }\n\n        aReturn.push(aRow);\n      }\n\n      return aReturn;\n    },\n\n    /**\n     * Clone the DataTable nodes and place them in the DOM (sized correctly)\n     *  @returns {void}\n     *  @param   {Object} oClone Object containing the header, footer and body cloned DOM elements\n     *  @param   {Object} oGrid Grid object containing the display grid elements for the cloned\n     *                    column (left or right)\n     *  @param   {Array} aiColumns Column indexes which should be operated on from the DataTable\n     *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n     *  @private\n     */\n    \"_fnClone\": function _fnClone(oClone, oGrid, aiColumns, bAll) {\n      var that = this,\n          i,\n          iLen,\n          j,\n          jLen,\n          jq,\n          nTarget,\n          iColumn,\n          nClone,\n          iIndex,\n          aoCloneLayout,\n          jqCloneThead,\n          aoFixedHeader,\n          dt = this.s.dt;\n      /*\n       * Header\n       */\n\n      if (bAll) {\n        $(oClone.header).remove();\n        oClone.header = $(this.dom.header).clone(true, false)[0];\n        oClone.header.className += \" DTFC_Cloned\";\n        oClone.header.style.width = \"100%\";\n        oGrid.head.appendChild(oClone.header);\n        /* Copy the DataTables layout cache for the header for our floating column */\n\n        aoCloneLayout = this._fnCopyLayout(dt.aoHeader, aiColumns, true);\n        jqCloneThead = $('>thead', oClone.header);\n        jqCloneThead.empty();\n        /* Add the created cloned TR elements to the table */\n\n        for (i = 0, iLen = aoCloneLayout.length; i < iLen; i++) {\n          jqCloneThead[0].appendChild(aoCloneLayout[i].nTr);\n        }\n        /* Use the handy _fnDrawHead function in DataTables to do the rowspan/colspan\n         * calculations for us\n         */\n\n\n        dt.oApi._fnDrawHead(dt, aoCloneLayout, true);\n      } else {\n        /* To ensure that we copy cell classes exactly, regardless of colspan, multiple rows\n         * etc, we make a copy of the header from the DataTable again, but don't insert the\n         * cloned cells, just copy the classes across. To get the matching layout for the\n         * fixed component, we use the DataTables _fnDetectHeader method, allowing 1:1 mapping\n         */\n        aoCloneLayout = this._fnCopyLayout(dt.aoHeader, aiColumns, false);\n        aoFixedHeader = [];\n\n        dt.oApi._fnDetectHeader(aoFixedHeader, $('>thead', oClone.header)[0]);\n\n        for (i = 0, iLen = aoCloneLayout.length; i < iLen; i++) {\n          for (j = 0, jLen = aoCloneLayout[i].length; j < jLen; j++) {\n            aoFixedHeader[i][j].cell.className = aoCloneLayout[i][j].cell.className; // If jQuery UI theming is used we need to copy those elements as well\n\n            $('span.DataTables_sort_icon', aoFixedHeader[i][j].cell).each(function () {\n              this.className = $('span.DataTables_sort_icon', aoCloneLayout[i][j].cell)[0].className;\n            });\n          }\n        }\n      }\n\n      this._fnEqualiseHeights('thead', this.dom.header, oClone.header);\n      /*\n       * Body\n       */\n\n\n      if (this.s.sHeightMatch == 'auto') {\n        /* Remove any heights which have been applied already and let the browser figure it out */\n        $('>tbody>tr', that.dom.body).css('height', 'auto');\n      }\n\n      if (oClone.body !== null) {\n        $(oClone.body).remove();\n        oClone.body = null;\n      }\n\n      oClone.body = $(this.dom.body).clone(true)[0];\n      oClone.body.className += \" DTFC_Cloned\";\n      oClone.body.style.paddingBottom = dt.oScroll.iBarWidth + \"px\";\n      oClone.body.style.marginBottom = dt.oScroll.iBarWidth * 2 + \"px\";\n      /* For IE */\n\n      if (oClone.body.getAttribute('id') !== null) {\n        oClone.body.removeAttribute('id');\n      }\n\n      $('>thead>tr', oClone.body).empty();\n      $('>tfoot', oClone.body).remove();\n      var nBody = $('tbody', oClone.body)[0];\n      $(nBody).empty();\n\n      if (dt.aiDisplay.length > 0) {\n        /* Copy the DataTables' header elements to force the column width in exactly the\n         * same way that DataTables does it - have the header element, apply the width and\n         * colapse it down\n         */\n        var nInnerThead = $('>thead>tr', oClone.body)[0];\n\n        for (iIndex = 0; iIndex < aiColumns.length; iIndex++) {\n          iColumn = aiColumns[iIndex];\n          nClone = $(dt.aoColumns[iColumn].nTh).clone(true)[0];\n          nClone.innerHTML = \"\";\n          var oStyle = nClone.style;\n          oStyle.paddingTop = \"0\";\n          oStyle.paddingBottom = \"0\";\n          oStyle.borderTopWidth = \"0\";\n          oStyle.borderBottomWidth = \"0\";\n          oStyle.height = 0;\n          oStyle.width = that.s.aiInnerWidths[iColumn] + \"px\";\n          nInnerThead.appendChild(nClone);\n        }\n        /* Add in the tbody elements, cloning form the master table */\n\n\n        $('>tbody>tr', that.dom.body).each(function (z) {\n          var n = this.cloneNode(false);\n          n.removeAttribute('id');\n          var i = that.s.dt.oFeatures.bServerSide === false ? that.s.dt.aiDisplay[that.s.dt._iDisplayStart + z] : z;\n          var aTds = that.s.dt.aoData[i].anCells || $(this).children('td, th');\n\n          for (iIndex = 0; iIndex < aiColumns.length; iIndex++) {\n            iColumn = aiColumns[iIndex];\n\n            if (aTds.length > 0) {\n              nClone = $(aTds[iColumn]).clone(true, true)[0];\n              n.appendChild(nClone);\n            }\n          }\n\n          nBody.appendChild(n);\n        });\n      } else {\n        $('>tbody>tr', that.dom.body).each(function (z) {\n          nClone = this.cloneNode(true);\n          nClone.className += ' DTFC_NoData';\n          $('td', nClone).html('');\n          nBody.appendChild(nClone);\n        });\n      }\n\n      oClone.body.style.width = \"100%\";\n      oClone.body.style.margin = \"0\";\n      oClone.body.style.padding = \"0\"; // Interop with Scroller - need to use a height forcing element in the\n      // scrolling area in the same way that Scroller does in the body scroll.\n\n      if (dt.oScroller !== undefined) {\n        var scrollerForcer = dt.oScroller.dom.force;\n\n        if (!oGrid.forcer) {\n          oGrid.forcer = scrollerForcer.cloneNode(true);\n          oGrid.liner.appendChild(oGrid.forcer);\n        } else {\n          oGrid.forcer.style.height = scrollerForcer.style.height;\n        }\n      }\n\n      oGrid.liner.appendChild(oClone.body);\n\n      this._fnEqualiseHeights('tbody', that.dom.body, oClone.body);\n      /*\n       * Footer\n       */\n\n\n      if (dt.nTFoot !== null) {\n        if (bAll) {\n          if (oClone.footer !== null) {\n            oClone.footer.parentNode.removeChild(oClone.footer);\n          }\n\n          oClone.footer = $(this.dom.footer).clone(true, true)[0];\n          oClone.footer.className += \" DTFC_Cloned\";\n          oClone.footer.style.width = \"100%\";\n          oGrid.foot.appendChild(oClone.footer);\n          /* Copy the footer just like we do for the header */\n\n          aoCloneLayout = this._fnCopyLayout(dt.aoFooter, aiColumns, true);\n          var jqCloneTfoot = $('>tfoot', oClone.footer);\n          jqCloneTfoot.empty();\n\n          for (i = 0, iLen = aoCloneLayout.length; i < iLen; i++) {\n            jqCloneTfoot[0].appendChild(aoCloneLayout[i].nTr);\n          }\n\n          dt.oApi._fnDrawHead(dt, aoCloneLayout, true);\n        } else {\n          aoCloneLayout = this._fnCopyLayout(dt.aoFooter, aiColumns, false);\n          var aoCurrFooter = [];\n\n          dt.oApi._fnDetectHeader(aoCurrFooter, $('>tfoot', oClone.footer)[0]);\n\n          for (i = 0, iLen = aoCloneLayout.length; i < iLen; i++) {\n            for (j = 0, jLen = aoCloneLayout[i].length; j < jLen; j++) {\n              aoCurrFooter[i][j].cell.className = aoCloneLayout[i][j].cell.className;\n            }\n          }\n        }\n\n        this._fnEqualiseHeights('tfoot', this.dom.footer, oClone.footer);\n      }\n      /* Equalise the column widths between the header footer and body - body get's priority */\n\n\n      var anUnique = dt.oApi._fnGetUniqueThs(dt, $('>thead', oClone.header)[0]);\n\n      $(anUnique).each(function (i) {\n        iColumn = aiColumns[i];\n        this.style.width = that.s.aiInnerWidths[iColumn] + \"px\";\n      });\n\n      if (that.s.dt.nTFoot !== null) {\n        anUnique = dt.oApi._fnGetUniqueThs(dt, $('>tfoot', oClone.footer)[0]);\n        $(anUnique).each(function (i) {\n          iColumn = aiColumns[i];\n          this.style.width = that.s.aiInnerWidths[iColumn] + \"px\";\n        });\n      }\n    },\n\n    /**\n     * From a given table node (THEAD etc), get a list of TR direct child elements\n     *  @param   {Node} nIn Table element to search for TR elements (THEAD, TBODY or TFOOT element)\n     *  @returns {Array} List of TR elements found\n     *  @private\n     */\n    \"_fnGetTrNodes\": function _fnGetTrNodes(nIn) {\n      var aOut = [];\n\n      for (var i = 0, iLen = nIn.childNodes.length; i < iLen; i++) {\n        if (nIn.childNodes[i].nodeName.toUpperCase() == \"TR\") {\n          aOut.push(nIn.childNodes[i]);\n        }\n      }\n\n      return aOut;\n    },\n\n    /**\n     * Equalise the heights of the rows in a given table node in a cross browser way\n     *  @returns {void}\n     *  @param   {String} nodeName Node type - thead, tbody or tfoot\n     *  @param   {Node} original Original node to take the heights from\n     *  @param   {Node} clone Copy the heights to\n     *  @private\n     */\n    \"_fnEqualiseHeights\": function _fnEqualiseHeights(nodeName, original, clone) {\n      if (this.s.sHeightMatch == 'none' && nodeName !== 'thead' && nodeName !== 'tfoot') {\n        return;\n      }\n\n      var that = this,\n          i,\n          iLen,\n          iHeight,\n          iHeight2,\n          iHeightOriginal,\n          iHeightClone,\n          rootOriginal = original.getElementsByTagName(nodeName)[0],\n          rootClone = clone.getElementsByTagName(nodeName)[0],\n          jqBoxHack = $('>' + nodeName + '>tr:eq(0)', original).children(':first'),\n          iBoxHack = jqBoxHack.outerHeight() - jqBoxHack.height(),\n          anOriginal = this._fnGetTrNodes(rootOriginal),\n          anClone = this._fnGetTrNodes(rootClone),\n          heights = [];\n\n      for (i = 0, iLen = anClone.length; i < iLen; i++) {\n        iHeightOriginal = anOriginal[i].offsetHeight;\n        iHeightClone = anClone[i].offsetHeight;\n        iHeight = iHeightClone > iHeightOriginal ? iHeightClone : iHeightOriginal;\n\n        if (this.s.sHeightMatch == 'semiauto') {\n          anOriginal[i]._DTTC_iHeight = iHeight;\n        }\n\n        heights.push(iHeight);\n      }\n\n      for (i = 0, iLen = anClone.length; i < iLen; i++) {\n        anClone[i].style.height = heights[i] + \"px\";\n        anOriginal[i].style.height = heights[i] + \"px\";\n      }\n    }\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Statics\n   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n  /**\n   * FixedColumns default settings for initialisation\n   *  @name FixedColumns.defaults\n   *  @namespace\n   *  @static\n   */\n\n  FixedColumns.defaults =\n  /** @lends FixedColumns.defaults */\n  {\n    /**\n     * Number of left hand columns to fix in position\n     *  @type     int\n     *  @default  1\n     *  @static\n     *  @example\n     *      var  = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      new $.fn.dataTable.fixedColumns( table, {\n     *          \"leftColumns\": 2\n     *      } );\n     */\n    \"iLeftColumns\": 1,\n\n    /**\n     * Number of right hand columns to fix in position\n     *  @type     int\n     *  @default  0\n     *  @static\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      new $.fn.dataTable.fixedColumns( table, {\n     *          \"rightColumns\": 1\n     *      } );\n     */\n    \"iRightColumns\": 0,\n\n    /**\n     * Draw callback function which is called when FixedColumns has redrawn the fixed assets\n     *  @type     function(object, object):void\n     *  @default  null\n     *  @static\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      new $.fn.dataTable.fixedColumns( table, {\n     *          \"drawCallback\": function () {\n     *\t            alert( \"FixedColumns redraw\" );\n     *\t        }\n     *      } );\n     */\n    \"fnDrawCallback\": null,\n\n    /**\n     * Height matching algorthim to use. This can be \"none\" which will result in no height\n     * matching being applied by FixedColumns (height matching could be forced by CSS in this\n     * case), \"semiauto\" whereby the height calculation will be performed once, and the result\n     * cached to be used again (fnRecalculateHeight can be used to force recalculation), or\n     * \"auto\" when height matching is performed on every draw (slowest but must accurate)\n     *  @type     string\n     *  @default  semiauto\n     *  @static\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      new $.fn.dataTable.fixedColumns( table, {\n     *          \"heightMatch\": \"auto\"\n     *      } );\n     */\n    \"sHeightMatch\": \"semiauto\"\n  };\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Constants\n   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n  /**\n   * FixedColumns version\n   *  @name      FixedColumns.version\n   *  @type      String\n   *  @default   See code\n   *  @static\n   */\n\n  FixedColumns.version = \"3.2.0\";\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables API integration\n   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n  DataTable.Api.register('fixedColumns()', function () {\n    return this;\n  });\n  DataTable.Api.register('fixedColumns().update()', function () {\n    return this.iterator('table', function (ctx) {\n      if (ctx._oFixedColumns) {\n        ctx._oFixedColumns.fnUpdate();\n      }\n    });\n  });\n  DataTable.Api.register('fixedColumns().relayout()', function () {\n    return this.iterator('table', function (ctx) {\n      if (ctx._oFixedColumns) {\n        ctx._oFixedColumns.fnRedrawLayout();\n      }\n    });\n  });\n  DataTable.Api.register('rows().recalcHeight()', function () {\n    return this.iterator('row', function (ctx, idx) {\n      if (ctx._oFixedColumns) {\n        ctx._oFixedColumns.fnRecalculateHeight(this.row(idx).node());\n      }\n    });\n  });\n  DataTable.Api.register('fixedColumns().rowIndex()', function (row) {\n    row = $(row);\n    return row.parents('.DTFC_Cloned').length ? this.rows({\n      page: 'current'\n    }).indexes()[row.index()] : this.row(row).index();\n  });\n  DataTable.Api.register('fixedColumns().cellIndex()', function (cell) {\n    cell = $(cell);\n\n    if (cell.parents('.DTFC_Cloned').length) {\n      var rowClonedIdx = cell.parent().index();\n      var rowIdx = this.rows({\n        page: 'current'\n      }).indexes()[rowClonedIdx];\n      var columnIdx;\n\n      if (cell.parents('.DTFC_LeftWrapper').length) {\n        columnIdx = cell.index();\n      } else {\n        var columns = this.columns().flatten().length;\n        columnIdx = columns - this.context[0]._oFixedColumns.s.iRightColumns + cell.index();\n      }\n\n      return {\n        row: rowIdx,\n        column: this.column.index('toData', columnIdx),\n        columnVisible: columnIdx\n      };\n    } else {\n      return this.cell(cell).index();\n    }\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Initialisation\n   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n  // Attach a listener to the document which listens for DataTables initialisation\n  // events so we can automatically initialise\n\n  $(document).on('init.dt.fixedColumns', function (e, settings) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    var init = settings.oInit.fixedColumns;\n    var defaults = DataTable.defaults.fixedColumns;\n\n    if (init || defaults) {\n      var opts = $.extend({}, init, defaults);\n\n      if (init !== false) {\n        new FixedColumns(settings, opts);\n      }\n    }\n  }); // Make FixedColumns accessible from the DataTables instance\n\n  $.fn.dataTable.FixedColumns = FixedColumns;\n  $.fn.DataTable.FixedColumns = FixedColumns;\n  return FixedColumns;\n});","map":{"version":3,"sources":["/Users/david/Winner-Stock/app/javascript/dataTables/dataTables.fixedColumns.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","FixedColumns","dt","init","that","alert","camelToHungarian","defaults","dtSettings","Api","settings","s","aoColumns","length","dom","_oFixedColumns","_bInitComplete","oApi","_fnCallbackReg","_fnConstruct","extend","prototype","_fnDraw","_fnColCalc","_fnGridLayout","fnUpdate","nTr","_DTTC_iHeight","style","height","nTarget","iHeight","node","idx","inst","oInstance","parents","fnGetPosition","nodeName","toLowerCase","index","nTBody","colIdx","parentNode","row","_fnVisibleToColumnIndex","oInit","i","iLen","iWidth","fnVersionCheck","VERSION","oScroll","sX","_fnLog","classes","oClasses","grid","nTable","sScrollWrapper","scroller","sScrollBody","_fnGridSetup","mouseController","on","e","originalEvent","iLeftColumns","left","liner","scrollTop","iRightColumns","right","wheelType","createElement","xDelta","type","deltaX","wheelDeltaX","scrollLeft","call","bFirstDraw","jqTable","column","vis","recalc","off","wrapper","remove","fnDraw","iLeftWidth","iRightWidth","aiInnerWidths","aiOuterWidths","each","col","th","nTh","border","filter","push","outerWidth","css","parseInt","width","iTableColumns","oOverflow","_fnDTOverflow","block","body","header","nTHead","position","nSWrapper","nLeft","childNodes","nRight","insertBefore","appendChild","head","bar","headBlock","footBlock","nTFoot","footer","foot","oGrid","iBodyHeight","outerHeight","iFullHeight","iRight","scrollbarAdjust","paddingRight","boxSizing","x","top","y","display","nTableScrollBody","out","iBarWidth","offsetWidth","clientWidth","offsetHeight","clientHeight","bAll","_fnCloneLeft","_fnCloneRight","fnDrawCallback","clone","trigger","jq","aiColumns","bVisible","_fnClone","aoOriginal","events","aReturn","aClones","aCloned","aRow","j","jLen","inArray","iCloned","cell","nClone","unique","oClone","iColumn","iIndex","aoCloneLayout","jqCloneThead","aoFixedHeader","className","_fnCopyLayout","aoHeader","empty","_fnDrawHead","_fnDetectHeader","_fnEqualiseHeights","sHeightMatch","paddingBottom","marginBottom","getAttribute","removeAttribute","nBody","aiDisplay","nInnerThead","innerHTML","oStyle","paddingTop","borderTopWidth","borderBottomWidth","z","n","cloneNode","oFeatures","bServerSide","_iDisplayStart","aTds","aoData","anCells","children","html","margin","padding","oScroller","scrollerForcer","force","forcer","removeChild","aoFooter","jqCloneTfoot","aoCurrFooter","anUnique","_fnGetUniqueThs","nIn","aOut","toUpperCase","original","iHeight2","iHeightOriginal","iHeightClone","rootOriginal","getElementsByTagName","rootClone","jqBoxHack","iBoxHack","anOriginal","_fnGetTrNodes","anClone","heights","version","register","iterator","ctx","fnRedrawLayout","fnRecalculateHeight","rows","page","indexes","rowClonedIdx","parent","rowIdx","columnIdx","columns","flatten","context","columnVisible","namespace","fixedColumns","opts"],"mappings":"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","sourcesContent":["/*! FixedColumns 3.2.0\n * Â©2010-2014 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     FixedColumns\n * @description Freeze columns in place on a scrolling DataTable\n * @version     3.2.0\n * @file        dataTables.fixedColumns.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2010-2014 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n/**\n * When making use of DataTables' x-axis scrolling feature, you may wish to\n * fix the left most column in place. This plug-in for DataTables provides\n * exactly this option (note for non-scrolling tables, please use the\n * FixedHeader plug-in, which can fix headers, footers and columns). Key\n * features include:\n *\n * * Freezes the left or right most columns to the side of the table\n * * Option to freeze two or more columns\n * * Full integration with DataTables' scrolling options\n * * Speed - FixedColumns is fast in its operation\n *\n *  @class\n *  @constructor\n *  @global\n *  @param {object} dt DataTables instance. With DataTables 1.10 this can also\n *    be a jQuery collection, a jQuery selector, DataTables API instance or\n *    settings object.\n *  @param {object} [init={}] Configuration object for FixedColumns. Options are\n *    defined by {@link FixedColumns.defaults}\n *\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.8.0+\n *\n *  @example\n *      var table = $('#example').dataTable( {\n *        \"scrollX\": \"100%\"\n *      } );\n *      new $.fn.dataTable.fixedColumns( table );\n */\nvar FixedColumns = function ( dt, init ) {\n\tvar that = this;\n\n\t/* Sanity check - you just know it will happen */\n\tif ( ! ( this instanceof FixedColumns ) ) {\n\t\talert( \"FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.\" );\n\t\treturn;\n\t}\n\n\tif ( init === undefined || init === true ) {\n\t\tinit = {};\n\t}\n\n\t// Use the DataTables Hungarian notation mapping method, if it exists to\n\t// provide forwards compatibility for camel case variables\n\tvar camelToHungarian = $.fn.dataTable.camelToHungarian;\n\tif ( camelToHungarian ) {\n\t\tcamelToHungarian( FixedColumns.defaults, FixedColumns.defaults, true );\n\t\tcamelToHungarian( FixedColumns.defaults, init );\n\t}\n\n\t// v1.10 allows the settings object to be got form a number of sources\n\tvar dtSettings = new $.fn.dataTable.Api( dt ).settings()[0];\n\n\t/**\n\t * Settings object which contains customisable information for FixedColumns instance\n\t * @namespace\n\t * @extends FixedColumns.defaults\n\t * @private\n\t */\n\tthis.s = {\n\t\t/**\n\t\t * DataTables settings objects\n\t\t *  @type     object\n\t\t *  @default  Obtained from DataTables instance\n\t\t */\n\t\t\"dt\": dtSettings,\n\n\t\t/**\n\t\t * Number of columns in the DataTable - stored for quick access\n\t\t *  @type     int\n\t\t *  @default  Obtained from DataTables instance\n\t\t */\n\t\t\"iTableColumns\": dtSettings.aoColumns.length,\n\n\t\t/**\n\t\t * Original outer widths of the columns as rendered by DataTables - used to calculate\n\t\t * the FixedColumns grid bounding box\n\t\t *  @type     array.<int>\n\t\t *  @default  []\n\t\t */\n\t\t\"aiOuterWidths\": [],\n\n\t\t/**\n\t\t * Original inner widths of the columns as rendered by DataTables - used to apply widths\n\t\t * to the columns\n\t\t *  @type     array.<int>\n\t\t *  @default  []\n\t\t */\n\t\t\"aiInnerWidths\": []\n\t};\n\n\n\t/**\n\t * DOM elements used by the class instance\n\t * @namespace\n\t * @private\n\t *\n\t */\n\tthis.dom = {\n\t\t/**\n\t\t * DataTables scrolling element\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"scroller\": null,\n\n\t\t/**\n\t\t * DataTables header table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"header\": null,\n\n\t\t/**\n\t\t * DataTables body table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"body\": null,\n\n\t\t/**\n\t\t * DataTables footer table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"footer\": null,\n\n\t\t/**\n\t\t * Display grid elements\n\t\t * @namespace\n\t\t */\n\t\t\"grid\": {\n\t\t\t/**\n\t\t\t * Grid wrapper. This is the container element for the 3x3 grid\n\t\t\t *  @type     node\n\t\t\t *  @default  null\n\t\t\t */\n\t\t\t\"wrapper\": null,\n\n\t\t\t/**\n\t\t\t * DataTables scrolling element. This element is the DataTables\n\t\t\t * component in the display grid (making up the main table - i.e.\n\t\t\t * not the fixed columns).\n\t\t\t *  @type     node\n\t\t\t *  @default  null\n\t\t\t */\n\t\t\t\"dt\": null,\n\n\t\t\t/**\n\t\t\t * Left fixed column grid components\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"left\": {\n\t\t\t\t\"wrapper\": null,\n\t\t\t\t\"head\": null,\n\t\t\t\t\"body\": null,\n\t\t\t\t\"foot\": null\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Right fixed column grid components\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"right\": {\n\t\t\t\t\"wrapper\": null,\n\t\t\t\t\"head\": null,\n\t\t\t\t\"body\": null,\n\t\t\t\t\"foot\": null\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Cloned table nodes\n\t\t * @namespace\n\t\t */\n\t\t\"clone\": {\n\t\t\t/**\n\t\t\t * Left column cloned table nodes\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"left\": {\n\t\t\t\t/**\n\t\t\t\t * Cloned header table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"header\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned body table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"body\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned footer table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"footer\": null\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Right column cloned table nodes\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"right\": {\n\t\t\t\t/**\n\t\t\t\t * Cloned header table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"header\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned body table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"body\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned footer table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"footer\": null\n\t\t\t}\n\t\t}\n\t};\n\n\tif ( dtSettings._oFixedColumns ) {\n\t\tthrow 'FixedColumns already initialised on this table';\n\t}\n\n\t/* Attach the instance to the DataTables instance so it can be accessed easily */\n\tdtSettings._oFixedColumns = this;\n\n\t/* Let's do it */\n\tif ( ! dtSettings._bInitComplete )\n\t{\n\t\tdtSettings.oApi._fnCallbackReg( dtSettings, 'aoInitComplete', function () {\n\t\t\tthat._fnConstruct( init );\n\t\t}, 'FixedColumns' );\n\t}\n\telse\n\t{\n\t\tthis._fnConstruct( init );\n\t}\n};\n\n\n\n$.extend( FixedColumns.prototype , {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\t/**\n\t * Update the fixed columns - including headers and footers. Note that FixedColumns will\n\t * automatically update the display whenever the host DataTable redraws.\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // at some later point when the table has been manipulated....\n\t *      fc.fnUpdate();\n\t */\n\t\"fnUpdate\": function ()\n\t{\n\t\tthis._fnDraw( true );\n\t},\n\n\n\t/**\n\t * Recalculate the resizes of the 3x3 grid that FixedColumns uses for display of the table.\n\t * This is useful if you update the width of the table container. Note that FixedColumns will\n\t * perform this function automatically when the window.resize event is fired.\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // Resize the table container and then have FixedColumns adjust its layout....\n\t *      $('#content').width( 1200 );\n\t *      fc.fnRedrawLayout();\n\t */\n\t\"fnRedrawLayout\": function ()\n\t{\n\t\tthis._fnColCalc();\n\t\tthis._fnGridLayout();\n\t\tthis.fnUpdate();\n\t},\n\n\n\t/**\n\t * Mark a row such that it's height should be recalculated when using 'semiauto' row\n\t * height matching. This function will have no effect when 'none' or 'auto' row height\n\t * matching is used.\n\t *  @param   {Node} nTr TR element that should have it's height recalculated\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // manipulate the table - mark the row as needing an update then update the table\n\t *      // this allows the redraw performed by DataTables fnUpdate to recalculate the row\n\t *      // height\n\t *      fc.fnRecalculateHeight();\n\t *      table.fnUpdate( $('#example tbody tr:eq(0)')[0], [\"insert date\", 1, 2, 3 ... ]);\n\t */\n\t\"fnRecalculateHeight\": function ( nTr )\n\t{\n\t\tdelete nTr._DTTC_iHeight;\n\t\tnTr.style.height = 'auto';\n\t},\n\n\n\t/**\n\t * Set the height of a given row - provides cross browser compatibility\n\t *  @param   {Node} nTarget TR element that should have it's height recalculated\n\t *  @param   {int} iHeight Height in pixels to set\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // You may want to do this after manipulating a row in the fixed column\n\t *      fc.fnSetRowHeight( $('#example tbody tr:eq(0)')[0], 50 );\n\t */\n\t\"fnSetRowHeight\": function ( nTarget, iHeight )\n\t{\n\t\tnTarget.style.height = iHeight+\"px\";\n\t},\n\n\n\t/**\n\t * Get data index information about a row or cell in the table body.\n\t * This function is functionally identical to fnGetPosition in DataTables,\n\t * taking the same parameter (TH, TD or TR node) and returning exactly the\n\t * the same information (data index information). THe difference between\n\t * the two is that this method takes into account the fixed columns in the\n\t * table, so you can pass in nodes from the master table, or the cloned\n\t * tables and get the index position for the data in the main table.\n\t *  @param {node} node TR, TH or TD element to get the information about\n\t *  @returns {int} If nNode is given as a TR, then a single index is \n\t *    returned, or if given as a cell, an array of [row index, column index\n\t *    (visible), column index (all)] is given.\n\t */\n\t\"fnGetPosition\": function ( node )\n\t{\n\t\tvar idx;\n\t\tvar inst = this.s.dt.oInstance;\n\n\t\tif ( ! $(node).parents('.DTFC_Cloned').length )\n\t\t{\n\t\t\t// Not in a cloned table\n\t\t\treturn inst.fnGetPosition( node );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Its in the cloned table, so need to look up position\n\t\t\tif ( node.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\tidx = $(node).index();\n\t\t\t\treturn inst.fnGetPosition( $('tr', this.s.dt.nTBody)[ idx ] );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar colIdx = $(node).index();\n\t\t\t\tidx = $(node.parentNode).index();\n\t\t\t\tvar row = inst.fnGetPosition( $('tr', this.s.dt.nTBody)[ idx ] );\n\n\t\t\t\treturn [\n\t\t\t\t\trow,\n\t\t\t\t\tcolIdx,\n\t\t\t\t\tinst.oApi._fnVisibleToColumnIndex( this.s.dt, colIdx )\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t},\n\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods (they are of course public in JS, but recommended as private)\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\t/**\n\t * Initialisation for FixedColumns\n\t *  @param   {Object} oInit User settings for initialisation\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnConstruct\": function ( oInit )\n\t{\n\t\tvar i, iLen, iWidth,\n\t\t\tthat = this;\n\n\t\t/* Sanity checking */\n\t\tif ( typeof this.s.dt.oInstance.fnVersionCheck != 'function' ||\n\t\t     this.s.dt.oInstance.fnVersionCheck( '1.8.0' ) !== true )\n\t\t{\n\t\t\talert( \"FixedColumns \"+FixedColumns.VERSION+\" required DataTables 1.8.0 or later. \"+\n\t\t\t\t\"Please upgrade your DataTables installation\" );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.s.dt.oScroll.sX === \"\" )\n\t\t{\n\t\t\tthis.s.dt.oInstance.oApi._fnLog( this.s.dt, 1, \"FixedColumns is not needed (no \"+\n\t\t\t\t\"x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for \"+\n\t\t\t\t\"column fixing when scrolling is not enabled\" );\n\t\t\treturn;\n\t\t}\n\n\t\t/* Apply the settings from the user / defaults */\n\t\tthis.s = $.extend( true, this.s, FixedColumns.defaults, oInit );\n\n\t\t/* Set up the DOM as we need it and cache nodes */\n\t\tvar classes = this.s.dt.oClasses;\n\t\tthis.dom.grid.dt = $(this.s.dt.nTable).parents('div.'+classes.sScrollWrapper)[0];\n\t\tthis.dom.scroller = $('div.'+classes.sScrollBody, this.dom.grid.dt )[0];\n\n\t\t/* Set up the DOM that we want for the fixed column layout grid */\n\t\tthis._fnColCalc();\n\t\tthis._fnGridSetup();\n\n\t\t/* Event handlers */\n\t\tvar mouseController;\n\n\t\t// When the body is scrolled - scroll the left and right columns\n\t\t$(this.dom.scroller)\n\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\tmouseController = 'main';\n\t\t\t} )\n\t\t\t.on( 'scroll.DTFC', function (e) {\n\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\tmouseController = 'main';\n\t\t\t\t}\n\n\t\t\t\tif ( mouseController === 'main' ) {\n\t\t\t\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t\t\t\tthat.dom.grid.left.liner.scrollTop = that.dom.scroller.scrollTop;\n\t\t\t\t\t}\n\t\t\t\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t\t\t\tthat.dom.grid.right.liner.scrollTop = that.dom.scroller.scrollTop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\tvar wheelType = 'onwheel' in document.createElement('div') ?\n\t\t\t'wheel.DTFC' :\n\t\t\t'mousewheel.DTFC';\n\n\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t// When scrolling the left column, scroll the body and right column\n\t\t\t$(that.dom.grid.left.liner)\n\t\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\t\tmouseController = 'left';\n\t\t\t\t} )\n\t\t\t\t.on( 'scroll.DTFC', function ( e ) {\n\t\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\t\tmouseController = 'left';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( mouseController === 'left' ) {\n\t\t\t\t\t\tthat.dom.scroller.scrollTop = that.dom.grid.left.liner.scrollTop;\n\t\t\t\t\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t\t\t\t\tthat.dom.grid.right.liner.scrollTop = that.dom.grid.left.liner.scrollTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( wheelType, function(e) {\n\t\t\t\t\t// Pass horizontal scrolling through\n\t\t\t\t\tvar xDelta = e.type === 'wheel' ?\n\t\t\t\t\t\t-e.originalEvent.deltaX :\n\t\t\t\t\t\te.originalEvent.wheelDeltaX;\n\t\t\t\t\tthat.dom.scroller.scrollLeft -= xDelta;\n\t\t\t\t} );\n\t\t}\n\n\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t// When scrolling the right column, scroll the body and the left column\n\t\t\t$(that.dom.grid.right.liner)\n\t\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\t\tmouseController = 'right';\n\t\t\t\t} )\n\t\t\t\t.on( 'scroll.DTFC', function ( e ) {\n\t\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\t\tmouseController = 'right';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( mouseController === 'right' ) {\n\t\t\t\t\t\tthat.dom.scroller.scrollTop = that.dom.grid.right.liner.scrollTop;\n\t\t\t\t\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t\t\t\t\tthat.dom.grid.left.liner.scrollTop = that.dom.grid.right.liner.scrollTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( wheelType, function(e) {\n\t\t\t\t\t// Pass horizontal scrolling through\n\t\t\t\t\tvar xDelta = e.type === 'wheel' ?\n\t\t\t\t\t\t-e.originalEvent.deltaX :\n\t\t\t\t\t\te.originalEvent.wheelDeltaX;\n\t\t\t\t\tthat.dom.scroller.scrollLeft -= xDelta;\n\t\t\t\t} );\n\t\t}\n\n\t\t$(window).on( 'resize.DTFC', function () {\n\t\t\tthat._fnGridLayout.call( that );\n\t\t} );\n\n\t\tvar bFirstDraw = true;\n\t\tvar jqTable = $(this.s.dt.nTable);\n\n\t\tjqTable\n\t\t\t.on( 'draw.dt.DTFC', function () {\n\t\t\t\tthat._fnDraw.call( that, bFirstDraw );\n\t\t\t\tbFirstDraw = false;\n\t\t\t} )\n\t\t\t.on( 'column-sizing.dt.DTFC', function () {\n\t\t\t\tthat._fnColCalc();\n\t\t\t\tthat._fnGridLayout( that );\n\t\t\t} )\n\t\t\t.on( 'column-visibility.dt.DTFC', function ( e, settings, column, vis, recalc ) {\n\t\t\t\tif ( recalc === undefined || recalc ) {\n\t\t\t\t\tthat._fnColCalc();\n\t\t\t\t\tthat._fnGridLayout( that );\n\t\t\t\t\tthat._fnDraw( true );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'destroy.dt.DTFC', function () {\n\t\t\t\tjqTable.off( 'column-sizing.dt.DTFC column-visibility.dt.DTFC destroy.dt.DTFC draw.dt.DTFC' );\n\n\t\t\t\t$(that.dom.scroller).off( 'mouseover.DTFC touchstart.DTFC scroll.DTFC' );\n\t\t\t\t$(window).off( 'resize.DTFC' );\n\n\t\t\t\t$(that.dom.grid.left.liner).off( 'mouseover.DTFC touchstart.DTFC scroll.DTFC '+wheelType );\n\t\t\t\t$(that.dom.grid.left.wrapper).remove();\n\n\t\t\t\t$(that.dom.grid.right.liner).off( 'mouseover.DTFC touchstart.DTFC scroll.DTFC '+wheelType );\n\t\t\t\t$(that.dom.grid.right.wrapper).remove();\n\t\t\t} );\n\n\t\t/* Get things right to start with - note that due to adjusting the columns, there must be\n\t\t * another redraw of the main table. It doesn't need to be a full redraw however.\n\t\t */\n\t\tthis._fnGridLayout();\n\t\tthis.s.dt.oInstance.fnDraw(false);\n\t},\n\n\n\t/**\n\t * Calculate the column widths for the grid layout\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnColCalc\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar iLeftWidth = 0;\n\t\tvar iRightWidth = 0;\n\n\t\tthis.s.aiInnerWidths = [];\n\t\tthis.s.aiOuterWidths = [];\n\n\t\t$.each( this.s.dt.aoColumns, function (i, col) {\n\t\t\tvar th = $(col.nTh);\n\t\t\tvar border;\n\n\t\t\tif ( ! th.filter(':visible').length ) {\n\t\t\t\tthat.s.aiInnerWidths.push( 0 );\n\t\t\t\tthat.s.aiOuterWidths.push( 0 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Inner width is used to assign widths to cells\n\t\t\t\t// Outer width is used to calculate the container\n\t\t\t\tvar iWidth = th.outerWidth();\n\n\t\t\t\t// When working with the left most-cell, need to add on the\n\t\t\t\t// table's border to the outerWidth, since we need to take\n\t\t\t\t// account of it, but it isn't in any cell\n\t\t\t\tif ( that.s.aiOuterWidths.length === 0 ) {\n\t\t\t\t\tborder = $(that.s.dt.nTable).css('border-left-width');\n\t\t\t\t\tiWidth += typeof border === 'string' ? 1 : parseInt( border, 10 );\n\t\t\t\t}\n\n\t\t\t\t// Likewise with the final column on the right\n\t\t\t\tif ( that.s.aiOuterWidths.length === that.s.dt.aoColumns.length-1 ) {\n\t\t\t\t\tborder = $(that.s.dt.nTable).css('border-right-width');\n\t\t\t\t\tiWidth += typeof border === 'string' ? 1 : parseInt( border, 10 );\n\t\t\t\t}\n\n\t\t\t\tthat.s.aiOuterWidths.push( iWidth );\n\t\t\t\tthat.s.aiInnerWidths.push( th.width() );\n\n\t\t\t\tif ( i < that.s.iLeftColumns )\n\t\t\t\t{\n\t\t\t\t\tiLeftWidth += iWidth;\n\t\t\t\t}\n\n\t\t\t\tif ( that.s.iTableColumns-that.s.iRightColumns <= i )\n\t\t\t\t{\n\t\t\t\t\tiRightWidth += iWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis.s.iLeftWidth = iLeftWidth;\n\t\tthis.s.iRightWidth = iRightWidth;\n\t},\n\n\n\t/**\n\t * Set up the DOM for the fixed column. The way the layout works is to create a 1x3 grid\n\t * for the left column, the DataTable (for which we just reuse the scrolling element DataTable\n\t * puts into the DOM) and the right column. In each of he two fixed column elements there is a\n\t * grouping wrapper element and then a head, body and footer wrapper. In each of these we then\n\t * place the cloned header, body or footer tables. This effectively gives as 3x3 grid structure.\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnGridSetup\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar oOverflow = this._fnDTOverflow();\n\t\tvar block;\n\n\t\tthis.dom.body = this.s.dt.nTable;\n\t\tthis.dom.header = this.s.dt.nTHead.parentNode;\n\t\tthis.dom.header.parentNode.parentNode.style.position = \"relative\";\n\n\t\tvar nSWrapper =\n\t\t\t$('<div class=\"DTFC_ScrollWrapper\" style=\"position:relative; clear:both;\">'+\n\t\t\t\t'<div class=\"DTFC_LeftWrapper\" style=\"position:absolute; top:0; left:0;\">'+\n\t\t\t\t\t'<div class=\"DTFC_LeftHeadWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>'+\n\t\t\t\t\t'<div class=\"DTFC_LeftBodyWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_LeftBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_LeftFootWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>'+\n\t\t\t\t'</div>'+\n\t\t\t\t'<div class=\"DTFC_RightWrapper\" style=\"position:absolute; top:0; left:0;\">'+\n\t\t\t\t\t'<div class=\"DTFC_RightHeadWrapper\" style=\"position:relative; top:0; left:0;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightHeadBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_RightBodyWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_RightFootWrapper\" style=\"position:relative; top:0; left:0;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightFootBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t'</div>'+\n\t\t\t'</div>')[0];\n\t\tvar nLeft = nSWrapper.childNodes[0];\n\t\tvar nRight = nSWrapper.childNodes[1];\n\n\t\tthis.dom.grid.dt.parentNode.insertBefore( nSWrapper, this.dom.grid.dt );\n\t\tnSWrapper.appendChild( this.dom.grid.dt );\n\n\t\tthis.dom.grid.wrapper = nSWrapper;\n\n\t\tif ( this.s.iLeftColumns > 0 )\n\t\t{\n\t\t\tthis.dom.grid.left.wrapper = nLeft;\n\t\t\tthis.dom.grid.left.head = nLeft.childNodes[0];\n\t\t\tthis.dom.grid.left.body = nLeft.childNodes[1];\n\t\t\tthis.dom.grid.left.liner = $('div.DTFC_LeftBodyLiner', nSWrapper)[0];\n\n\t\t\tnSWrapper.appendChild( nLeft );\n\t\t}\n\n\t\tif ( this.s.iRightColumns > 0 )\n\t\t{\n\t\t\tthis.dom.grid.right.wrapper = nRight;\n\t\t\tthis.dom.grid.right.head = nRight.childNodes[0];\n\t\t\tthis.dom.grid.right.body = nRight.childNodes[1];\n\t\t\tthis.dom.grid.right.liner = $('div.DTFC_RightBodyLiner', nSWrapper)[0];\n\n\t\t\tblock = $('div.DTFC_RightHeadBlocker', nSWrapper)[0];\n\t\t\tblock.style.width = oOverflow.bar+\"px\";\n\t\t\tblock.style.right = -oOverflow.bar+\"px\";\n\t\t\tthis.dom.grid.right.headBlock = block;\n\n\t\t\tblock = $('div.DTFC_RightFootBlocker', nSWrapper)[0];\n\t\t\tblock.style.width = oOverflow.bar+\"px\";\n\t\t\tblock.style.right = -oOverflow.bar+\"px\";\n\t\t\tthis.dom.grid.right.footBlock = block;\n\n\t\t\tnSWrapper.appendChild( nRight );\n\t\t}\n\n\t\tif ( this.s.dt.nTFoot )\n\t\t{\n\t\t\tthis.dom.footer = this.s.dt.nTFoot.parentNode;\n\t\t\tif ( this.s.iLeftColumns > 0 )\n\t\t\t{\n\t\t\t\tthis.dom.grid.left.foot = nLeft.childNodes[2];\n\t\t\t}\n\t\t\tif ( this.s.iRightColumns > 0 )\n\t\t\t{\n\t\t\t\tthis.dom.grid.right.foot = nRight.childNodes[2];\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Style and position the grid used for the FixedColumns layout\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnGridLayout\": function ()\n\t{\n\t\tvar oGrid = this.dom.grid;\n\t\tvar iWidth = $(oGrid.wrapper).width();\n\t\tvar iBodyHeight = $(this.s.dt.nTable.parentNode).outerHeight();\n\t\tvar iFullHeight = $(this.s.dt.nTable.parentNode.parentNode).outerHeight();\n\t\tvar oOverflow = this._fnDTOverflow();\n\t\tvar\n\t\t\tiLeftWidth = this.s.iLeftWidth,\n\t\t\tiRightWidth = this.s.iRightWidth,\n\t\t\tiRight;\n\t\tvar scrollbarAdjust = function ( node, width ) {\n\t\t\tif ( ! oOverflow.bar ) {\n\t\t\t\t// If there is no scrollbar (Macs) we need to hide the auto scrollbar\n\t\t\t\tnode.style.width = (width+20)+\"px\";\n\t\t\t\tnode.style.paddingRight = \"20px\";\n\t\t\t\tnode.style.boxSizing = \"border-box\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise just overflow by the scrollbar\n\t\t\t\tnode.style.width = (width+oOverflow.bar)+\"px\";\n\t\t\t}\n\t\t};\n\n\t\t// When x scrolling - don't paint the fixed columns over the x scrollbar\n\t\tif ( oOverflow.x )\n\t\t{\n\t\t\tiBodyHeight -= oOverflow.bar;\n\t\t}\n\n\t\toGrid.wrapper.style.height = iFullHeight+\"px\";\n\n\t\tif ( this.s.iLeftColumns > 0 )\n\t\t{\n\t\t\toGrid.left.wrapper.style.width = iLeftWidth+\"px\";\n\t\t\toGrid.left.wrapper.style.height = \"1px\";\n\t\t\toGrid.left.body.style.height = iBodyHeight+\"px\";\n\t\t\tif ( oGrid.left.foot ) {\n\t\t\t\toGrid.left.foot.style.top = (oOverflow.x ? oOverflow.bar : 0)+\"px\"; // shift footer for scrollbar\n\t\t\t}\n\n\t\t\tscrollbarAdjust( oGrid.left.liner, iLeftWidth );\n\t\t\toGrid.left.liner.style.height = iBodyHeight+\"px\";\n\t\t}\n\n\t\tif ( this.s.iRightColumns > 0 )\n\t\t{\n\t\t\tiRight = iWidth - iRightWidth;\n\t\t\tif ( oOverflow.y )\n\t\t\t{\n\t\t\t\tiRight -= oOverflow.bar;\n\t\t\t}\n\n\t\t\toGrid.right.wrapper.style.width = iRightWidth+\"px\";\n\t\t\toGrid.right.wrapper.style.left = iRight+\"px\";\n\t\t\toGrid.right.wrapper.style.height = \"1px\";\n\t\t\toGrid.right.body.style.height = iBodyHeight+\"px\";\n\t\t\tif ( oGrid.right.foot ) {\n\t\t\t\toGrid.right.foot.style.top = (oOverflow.x ? oOverflow.bar : 0)+\"px\";\n\t\t\t}\n\n\t\t\tscrollbarAdjust( oGrid.right.liner, iRightWidth );\n\t\t\toGrid.right.liner.style.height = iBodyHeight+\"px\";\n\n\t\t\toGrid.right.headBlock.style.display = oOverflow.y ? 'block' : 'none';\n\t\t\toGrid.right.footBlock.style.display = oOverflow.y ? 'block' : 'none';\n\t\t}\n\t},\n\n\n\t/**\n\t * Get information about the DataTable's scrolling state - specifically if the table is scrolling\n\t * on either the x or y axis, and also the scrollbar width.\n\t *  @returns {object} Information about the DataTables scrolling state with the properties:\n\t *    'x', 'y' and 'bar'\n\t *  @private\n\t */\n\t\"_fnDTOverflow\": function ()\n\t{\n\t\tvar nTable = this.s.dt.nTable;\n\t\tvar nTableScrollBody = nTable.parentNode;\n\t\tvar out = {\n\t\t\t\"x\": false,\n\t\t\t\"y\": false,\n\t\t\t\"bar\": this.s.dt.oScroll.iBarWidth\n\t\t};\n\n\t\tif ( nTable.offsetWidth > nTableScrollBody.clientWidth )\n\t\t{\n\t\t\tout.x = true;\n\t\t}\n\n\t\tif ( nTable.offsetHeight > nTableScrollBody.clientHeight )\n\t\t{\n\t\t\tout.y = true;\n\t\t}\n\n\t\treturn out;\n\t},\n\n\n\t/**\n\t * Clone and position the fixed columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnDraw\": function ( bAll )\n\t{\n\t\tthis._fnGridLayout();\n\t\tthis._fnCloneLeft( bAll );\n\t\tthis._fnCloneRight( bAll );\n\n\t\t/* Draw callback function */\n\t\tif ( this.s.fnDrawCallback !== null )\n\t\t{\n\t\t\tthis.s.fnDrawCallback.call( this, this.dom.clone.left, this.dom.clone.right );\n\t\t}\n\n\t\t/* Event triggering */\n\t\t$(this).trigger( 'draw.dtfc', {\n\t\t\t\"leftClone\": this.dom.clone.left,\n\t\t\t\"rightClone\": this.dom.clone.right\n\t\t} );\n\t},\n\n\n\t/**\n\t * Clone the right columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnCloneRight\": function ( bAll )\n\t{\n\t\tif ( this.s.iRightColumns <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, jq,\n\t\t\taiColumns = [];\n\n\t\tfor ( i=this.s.iTableColumns-this.s.iRightColumns ; i<this.s.iTableColumns ; i++ ) {\n\t\t\tif ( this.s.dt.aoColumns[i].bVisible ) {\n\t\t\t\taiColumns.push( i );\n\t\t\t}\n\t\t}\n\n\t\tthis._fnClone( this.dom.clone.right, this.dom.grid.right, aiColumns, bAll );\n\t},\n\n\n\t/**\n\t * Clone the left columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnCloneLeft\": function ( bAll )\n\t{\n\t\tif ( this.s.iLeftColumns <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, jq,\n\t\t\taiColumns = [];\n\n\t\tfor ( i=0 ; i<this.s.iLeftColumns ; i++ ) {\n\t\t\tif ( this.s.dt.aoColumns[i].bVisible ) {\n\t\t\t\taiColumns.push( i );\n\t\t\t}\n\t\t}\n\n\t\tthis._fnClone( this.dom.clone.left, this.dom.grid.left, aiColumns, bAll );\n\t},\n\n\n\t/**\n\t * Make a copy of the layout object for a header or footer element from DataTables. Note that\n\t * this method will clone the nodes in the layout object.\n\t *  @returns {Array} Copy of the layout array\n\t *  @param   {Object} aoOriginal Layout array from DataTables (aoHeader or aoFooter)\n\t *  @param   {Object} aiColumns Columns to copy\n\t *  @param   {boolean} events Copy cell events or not\n\t *  @private\n\t */\n\t\"_fnCopyLayout\": function ( aoOriginal, aiColumns, events )\n\t{\n\t\tvar aReturn = [];\n\t\tvar aClones = [];\n\t\tvar aCloned = [];\n\n\t\tfor ( var i=0, iLen=aoOriginal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar aRow = [];\n\t\t\taRow.nTr = $(aoOriginal[i].nTr).clone(events, false)[0];\n\n\t\t\tfor ( var j=0, jLen=this.s.iTableColumns ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( $.inArray( j, aiColumns ) === -1 )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar iCloned = $.inArray( aoOriginal[i][j].cell, aCloned );\n\t\t\t\tif ( iCloned === -1 )\n\t\t\t\t{\n\t\t\t\t\tvar nClone = $(aoOriginal[i][j].cell).clone(events, false)[0];\n\t\t\t\t\taClones.push( nClone );\n\t\t\t\t\taCloned.push( aoOriginal[i][j].cell );\n\n\t\t\t\t\taRow.push( {\n\t\t\t\t\t\t\"cell\": nClone,\n\t\t\t\t\t\t\"unique\": aoOriginal[i][j].unique\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\taRow.push( {\n\t\t\t\t\t\t\"cell\": aClones[ iCloned ],\n\t\t\t\t\t\t\"unique\": aoOriginal[i][j].unique\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taReturn.push( aRow );\n\t\t}\n\n\t\treturn aReturn;\n\t},\n\n\n\t/**\n\t * Clone the DataTable nodes and place them in the DOM (sized correctly)\n\t *  @returns {void}\n\t *  @param   {Object} oClone Object containing the header, footer and body cloned DOM elements\n\t *  @param   {Object} oGrid Grid object containing the display grid elements for the cloned\n\t *                    column (left or right)\n\t *  @param   {Array} aiColumns Column indexes which should be operated on from the DataTable\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnClone\": function ( oClone, oGrid, aiColumns, bAll )\n\t{\n\t\tvar that = this,\n\t\t\ti, iLen, j, jLen, jq, nTarget, iColumn, nClone, iIndex, aoCloneLayout,\n\t\t\tjqCloneThead, aoFixedHeader,\n\t\t\tdt = this.s.dt;\n\n\t\t/*\n\t\t * Header\n\t\t */\n\t\tif ( bAll )\n\t\t{\n\t\t\t$(oClone.header).remove();\n\n\t\t\toClone.header = $(this.dom.header).clone(true, false)[0];\n\t\t\toClone.header.className += \" DTFC_Cloned\";\n\t\t\toClone.header.style.width = \"100%\";\n\t\t\toGrid.head.appendChild( oClone.header );\n\n\t\t\t/* Copy the DataTables layout cache for the header for our floating column */\n\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoHeader, aiColumns, true );\n\t\t\tjqCloneThead = $('>thead', oClone.header);\n\t\t\tjqCloneThead.empty();\n\n\t\t\t/* Add the created cloned TR elements to the table */\n\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tjqCloneThead[0].appendChild( aoCloneLayout[i].nTr );\n\t\t\t}\n\n\t\t\t/* Use the handy _fnDrawHead function in DataTables to do the rowspan/colspan\n\t\t\t * calculations for us\n\t\t\t */\n\t\t\tdt.oApi._fnDrawHead( dt, aoCloneLayout, true );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* To ensure that we copy cell classes exactly, regardless of colspan, multiple rows\n\t\t\t * etc, we make a copy of the header from the DataTable again, but don't insert the\n\t\t\t * cloned cells, just copy the classes across. To get the matching layout for the\n\t\t\t * fixed component, we use the DataTables _fnDetectHeader method, allowing 1:1 mapping\n\t\t\t */\n\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoHeader, aiColumns, false );\n\t\t\taoFixedHeader=[];\n\n\t\t\tdt.oApi._fnDetectHeader( aoFixedHeader, $('>thead', oClone.header)[0] );\n\n\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfor ( j=0, jLen=aoCloneLayout[i].length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\taoFixedHeader[i][j].cell.className = aoCloneLayout[i][j].cell.className;\n\n\t\t\t\t\t// If jQuery UI theming is used we need to copy those elements as well\n\t\t\t\t\t$('span.DataTables_sort_icon', aoFixedHeader[i][j].cell).each( function () {\n\t\t\t\t\t\tthis.className = $('span.DataTables_sort_icon', aoCloneLayout[i][j].cell)[0].className;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._fnEqualiseHeights( 'thead', this.dom.header, oClone.header );\n\n\t\t/*\n\t\t * Body\n\t\t */\n\t\tif ( this.s.sHeightMatch == 'auto' )\n\t\t{\n\t\t\t/* Remove any heights which have been applied already and let the browser figure it out */\n\t\t\t$('>tbody>tr', that.dom.body).css('height', 'auto');\n\t\t}\n\n\t\tif ( oClone.body !== null )\n\t\t{\n\t\t\t$(oClone.body).remove();\n\t\t\toClone.body = null;\n\t\t}\n\n\t\toClone.body = $(this.dom.body).clone(true)[0];\n\t\toClone.body.className += \" DTFC_Cloned\";\n\t\toClone.body.style.paddingBottom = dt.oScroll.iBarWidth+\"px\";\n\t\toClone.body.style.marginBottom = (dt.oScroll.iBarWidth*2)+\"px\"; /* For IE */\n\t\tif ( oClone.body.getAttribute('id') !== null )\n\t\t{\n\t\t\toClone.body.removeAttribute('id');\n\t\t}\n\n\t\t$('>thead>tr', oClone.body).empty();\n\t\t$('>tfoot', oClone.body).remove();\n\n\t\tvar nBody = $('tbody', oClone.body)[0];\n\t\t$(nBody).empty();\n\t\tif ( dt.aiDisplay.length > 0 )\n\t\t{\n\t\t\t/* Copy the DataTables' header elements to force the column width in exactly the\n\t\t\t * same way that DataTables does it - have the header element, apply the width and\n\t\t\t * colapse it down\n\t\t\t */\n\t\t\tvar nInnerThead = $('>thead>tr', oClone.body)[0];\n\t\t\tfor ( iIndex=0 ; iIndex<aiColumns.length ; iIndex++ )\n\t\t\t{\n\t\t\t\tiColumn = aiColumns[iIndex];\n\n\t\t\t\tnClone = $(dt.aoColumns[iColumn].nTh).clone(true)[0];\n\t\t\t\tnClone.innerHTML = \"\";\n\n\t\t\t\tvar oStyle = nClone.style;\n\t\t\t\toStyle.paddingTop = \"0\";\n\t\t\t\toStyle.paddingBottom = \"0\";\n\t\t\t\toStyle.borderTopWidth = \"0\";\n\t\t\t\toStyle.borderBottomWidth = \"0\";\n\t\t\t\toStyle.height = 0;\n\t\t\t\toStyle.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\n\t\t\t\tnInnerThead.appendChild( nClone );\n\t\t\t}\n\n\t\t\t/* Add in the tbody elements, cloning form the master table */\n\t\t\t$('>tbody>tr', that.dom.body).each( function (z) {\n\t\t\t\tvar n = this.cloneNode(false);\n\t\t\t\tn.removeAttribute('id');\n\t\t\t\tvar i = that.s.dt.oFeatures.bServerSide===false ?\n\t\t\t\t\tthat.s.dt.aiDisplay[ that.s.dt._iDisplayStart+z ] : z;\n\t\t\t\tvar aTds = that.s.dt.aoData[ i ].anCells || $(this).children('td, th');\n\n\t\t\t\tfor ( iIndex=0 ; iIndex<aiColumns.length ; iIndex++ )\n\t\t\t\t{\n\t\t\t\t\tiColumn = aiColumns[iIndex];\n\n\t\t\t\t\tif ( aTds.length > 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tnClone = $( aTds[iColumn] ).clone(true, true)[0];\n\t\t\t\t\t\tn.appendChild( nClone );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnBody.appendChild( n );\n\t\t\t} );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$('>tbody>tr', that.dom.body).each( function (z) {\n\t\t\t\tnClone = this.cloneNode(true);\n\t\t\t\tnClone.className += ' DTFC_NoData';\n\t\t\t\t$('td', nClone).html('');\n\t\t\t\tnBody.appendChild( nClone );\n\t\t\t} );\n\t\t}\n\n\t\toClone.body.style.width = \"100%\";\n\t\toClone.body.style.margin = \"0\";\n\t\toClone.body.style.padding = \"0\";\n\n\t\t// Interop with Scroller - need to use a height forcing element in the\n\t\t// scrolling area in the same way that Scroller does in the body scroll.\n\t\tif ( dt.oScroller !== undefined )\n\t\t{\n\t\t\tvar scrollerForcer = dt.oScroller.dom.force;\n\n\t\t\tif ( ! oGrid.forcer ) {\n\t\t\t\toGrid.forcer = scrollerForcer.cloneNode( true );\n\t\t\t\toGrid.liner.appendChild( oGrid.forcer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\toGrid.forcer.style.height = scrollerForcer.style.height;\n\t\t\t}\n\t\t}\n\n\t\toGrid.liner.appendChild( oClone.body );\n\n\t\tthis._fnEqualiseHeights( 'tbody', that.dom.body, oClone.body );\n\n\t\t/*\n\t\t * Footer\n\t\t */\n\t\tif ( dt.nTFoot !== null )\n\t\t{\n\t\t\tif ( bAll )\n\t\t\t{\n\t\t\t\tif ( oClone.footer !== null )\n\t\t\t\t{\n\t\t\t\t\toClone.footer.parentNode.removeChild( oClone.footer );\n\t\t\t\t}\n\t\t\t\toClone.footer = $(this.dom.footer).clone(true, true)[0];\n\t\t\t\toClone.footer.className += \" DTFC_Cloned\";\n\t\t\t\toClone.footer.style.width = \"100%\";\n\t\t\t\toGrid.foot.appendChild( oClone.footer );\n\n\t\t\t\t/* Copy the footer just like we do for the header */\n\t\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoFooter, aiColumns, true );\n\t\t\t\tvar jqCloneTfoot = $('>tfoot', oClone.footer);\n\t\t\t\tjqCloneTfoot.empty();\n\n\t\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tjqCloneTfoot[0].appendChild( aoCloneLayout[i].nTr );\n\t\t\t\t}\n\t\t\t\tdt.oApi._fnDrawHead( dt, aoCloneLayout, true );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoFooter, aiColumns, false );\n\t\t\t\tvar aoCurrFooter=[];\n\n\t\t\t\tdt.oApi._fnDetectHeader( aoCurrFooter, $('>tfoot', oClone.footer)[0] );\n\n\t\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tfor ( j=0, jLen=aoCloneLayout[i].length ; j<jLen ; j++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taoCurrFooter[i][j].cell.className = aoCloneLayout[i][j].cell.className;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._fnEqualiseHeights( 'tfoot', this.dom.footer, oClone.footer );\n\t\t}\n\n\t\t/* Equalise the column widths between the header footer and body - body get's priority */\n\t\tvar anUnique = dt.oApi._fnGetUniqueThs( dt, $('>thead', oClone.header)[0] );\n\t\t$(anUnique).each( function (i) {\n\t\t\tiColumn = aiColumns[i];\n\t\t\tthis.style.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\t\t} );\n\n\t\tif ( that.s.dt.nTFoot !== null )\n\t\t{\n\t\t\tanUnique = dt.oApi._fnGetUniqueThs( dt, $('>tfoot', oClone.footer)[0] );\n\t\t\t$(anUnique).each( function (i) {\n\t\t\t\tiColumn = aiColumns[i];\n\t\t\t\tthis.style.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * From a given table node (THEAD etc), get a list of TR direct child elements\n\t *  @param   {Node} nIn Table element to search for TR elements (THEAD, TBODY or TFOOT element)\n\t *  @returns {Array} List of TR elements found\n\t *  @private\n\t */\n\t\"_fnGetTrNodes\": function ( nIn )\n\t{\n\t\tvar aOut = [];\n\t\tfor ( var i=0, iLen=nIn.childNodes.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( nIn.childNodes[i].nodeName.toUpperCase() == \"TR\" )\n\t\t\t{\n\t\t\t\taOut.push( nIn.childNodes[i] );\n\t\t\t}\n\t\t}\n\t\treturn aOut;\n\t},\n\n\n\t/**\n\t * Equalise the heights of the rows in a given table node in a cross browser way\n\t *  @returns {void}\n\t *  @param   {String} nodeName Node type - thead, tbody or tfoot\n\t *  @param   {Node} original Original node to take the heights from\n\t *  @param   {Node} clone Copy the heights to\n\t *  @private\n\t */\n\t\"_fnEqualiseHeights\": function ( nodeName, original, clone )\n\t{\n\t\tif ( this.s.sHeightMatch == 'none' && nodeName !== 'thead' && nodeName !== 'tfoot' )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, iLen, iHeight, iHeight2, iHeightOriginal, iHeightClone,\n\t\t\trootOriginal = original.getElementsByTagName(nodeName)[0],\n\t\t\trootClone    = clone.getElementsByTagName(nodeName)[0],\n\t\t\tjqBoxHack    = $('>'+nodeName+'>tr:eq(0)', original).children(':first'),\n\t\t\tiBoxHack     = jqBoxHack.outerHeight() - jqBoxHack.height(),\n\t\t\tanOriginal   = this._fnGetTrNodes( rootOriginal ),\n\t\t\tanClone      = this._fnGetTrNodes( rootClone ),\n\t\t\theights      = [];\n\n\t\tfor ( i=0, iLen=anClone.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tiHeightOriginal = anOriginal[i].offsetHeight;\n\t\t\tiHeightClone = anClone[i].offsetHeight;\n\t\t\tiHeight = iHeightClone > iHeightOriginal ? iHeightClone : iHeightOriginal;\n\n\t\t\tif ( this.s.sHeightMatch == 'semiauto' )\n\t\t\t{\n\t\t\t\tanOriginal[i]._DTTC_iHeight = iHeight;\n\t\t\t}\n\n\t\t\theights.push( iHeight );\n\t\t}\n\n\t\tfor ( i=0, iLen=anClone.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tanClone[i].style.height = heights[i]+\"px\";\n\t\t\tanOriginal[i].style.height = heights[i]+\"px\";\n\t\t}\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/**\n * FixedColumns default settings for initialisation\n *  @name FixedColumns.defaults\n *  @namespace\n *  @static\n */\nFixedColumns.defaults = /** @lends FixedColumns.defaults */{\n\t/**\n\t * Number of left hand columns to fix in position\n\t *  @type     int\n\t *  @default  1\n\t *  @static\n\t *  @example\n\t *      var  = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"leftColumns\": 2\n\t *      } );\n\t */\n\t\"iLeftColumns\": 1,\n\n\t/**\n\t * Number of right hand columns to fix in position\n\t *  @type     int\n\t *  @default  0\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"rightColumns\": 1\n\t *      } );\n\t */\n\t\"iRightColumns\": 0,\n\n\t/**\n\t * Draw callback function which is called when FixedColumns has redrawn the fixed assets\n\t *  @type     function(object, object):void\n\t *  @default  null\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"drawCallback\": function () {\n\t *\t            alert( \"FixedColumns redraw\" );\n\t *\t        }\n\t *      } );\n\t */\n\t\"fnDrawCallback\": null,\n\n\t/**\n\t * Height matching algorthim to use. This can be \"none\" which will result in no height\n\t * matching being applied by FixedColumns (height matching could be forced by CSS in this\n\t * case), \"semiauto\" whereby the height calculation will be performed once, and the result\n\t * cached to be used again (fnRecalculateHeight can be used to force recalculation), or\n\t * \"auto\" when height matching is performed on every draw (slowest but must accurate)\n\t *  @type     string\n\t *  @default  semiauto\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"heightMatch\": \"auto\"\n\t *      } );\n\t */\n\t\"sHeightMatch\": \"semiauto\"\n};\n\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Constants\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/**\n * FixedColumns version\n *  @name      FixedColumns.version\n *  @type      String\n *  @default   See code\n *  @static\n */\nFixedColumns.version = \"3.2.0\";\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API integration\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nDataTable.Api.register( 'fixedColumns()', function () {\n\treturn this;\n} );\n\nDataTable.Api.register( 'fixedColumns().update()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnUpdate();\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'fixedColumns().relayout()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnRedrawLayout();\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'rows().recalcHeight()', function () {\n\treturn this.iterator( 'row', function ( ctx, idx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnRecalculateHeight( this.row(idx).node() );\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'fixedColumns().rowIndex()', function ( row ) {\n\trow = $(row);\n\n\treturn row.parents('.DTFC_Cloned').length ?\n\t\tthis.rows( { page: 'current' } ).indexes()[ row.index() ] :\n\t\tthis.row( row ).index();\n} );\n\nDataTable.Api.register( 'fixedColumns().cellIndex()', function ( cell ) {\n\tcell = $(cell);\n\n\tif ( cell.parents('.DTFC_Cloned').length ) {\n\t\tvar rowClonedIdx = cell.parent().index();\n\t\tvar rowIdx = this.rows( { page: 'current' } ).indexes()[ rowClonedIdx ];\n\t\tvar columnIdx;\n\n\t\tif ( cell.parents('.DTFC_LeftWrapper').length ) {\n\t\t\tcolumnIdx = cell.index();\n\t\t}\n\t\telse {\n\t\t\tvar columns = this.columns().flatten().length;\n\t\t\tcolumnIdx = columns - this.context[0]._oFixedColumns.s.iRightColumns + cell.index();\n\t\t}\n\n\t\treturn {\n\t\t\trow: rowIdx,\n\t\t\tcolumn: this.column.index( 'toData', columnIdx ),\n\t\t\tcolumnVisible: columnIdx\n\t\t};\n\t}\n\telse {\n\t\treturn this.cell( cell ).index();\n\t}\n} );\n\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'init.dt.fixedColumns', function (e, settings) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar init = settings.oInit.fixedColumns;\n\tvar defaults = DataTable.defaults.fixedColumns;\n\n\tif ( init || defaults ) {\n\t\tvar opts = $.extend( {}, init, defaults );\n\n\t\tif ( init !== false ) {\n\t\t\tnew FixedColumns( settings, opts );\n\t\t}\n\t}\n} );\n\n\n\n// Make FixedColumns accessible from the DataTables instance\n$.fn.dataTable.FixedColumns = FixedColumns;\n$.fn.DataTable.FixedColumns = FixedColumns;\n\nreturn FixedColumns;\n}));"]},"metadata":{},"sourceType":"module"}