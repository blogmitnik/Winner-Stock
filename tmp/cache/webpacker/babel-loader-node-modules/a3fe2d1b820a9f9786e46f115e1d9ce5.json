{"ast":null,"code":"/*! Buttons for DataTables 1.2.2\n * Â©2016 SpryMedia Ltd - datatables.net/license\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable; // Used for namespacing events added to the document by each instance, so they\n  // can be removed on destroy\n\n  var _instCounter = 0; // Button namespacing counter for namespacing events on individual buttons\n\n  var _buttonCounter = 0;\n  var _dtButtons = DataTable.ext.buttons;\n  /**\n   * [Buttons description]\n   * @param {[type]}\n   * @param {[type]}\n   */\n\n  var Buttons = function Buttons(dt, config) {\n    // Allow a boolean true for defaults\n    if (config === true) {\n      config = {};\n    } // For easy configuration of buttons an array can be given\n\n\n    if ($.isArray(config)) {\n      config = {\n        buttons: config\n      };\n    }\n\n    this.c = $.extend(true, {}, Buttons.defaults, config); // Don't want a deep copy for the buttons\n\n    if (config.buttons) {\n      this.c.buttons = config.buttons;\n    }\n\n    this.s = {\n      dt: new DataTable.Api(dt),\n      buttons: [],\n      listenKeys: '',\n      namespace: 'dtb' + _instCounter++\n    };\n    this.dom = {\n      container: $('<' + this.c.dom.container.tag + '/>').addClass(this.c.dom.container.className)\n    };\n\n    this._constructor();\n  };\n\n  $.extend(Buttons.prototype, {\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Public methods\n     */\n\n    /**\n     * Get the action of a button\n     * @param  {int|string} Button index\n     * @return {function}\n     */\n\n    /**\n    * Set the action of a button\n    * @param  {node} node Button element\n    * @param  {function} action Function to set\n    * @return {Buttons} Self for chaining\n    */\n    action: function action(node, _action) {\n      var button = this._nodeToButton(node);\n\n      if (_action === undefined) {\n        return button.conf.action;\n      }\n\n      button.conf.action = _action;\n      return this;\n    },\n\n    /**\n     * Add an active class to the button to make to look active or get current\n     * active state.\n     * @param  {node} node Button element\n     * @param  {boolean} [flag] Enable / disable flag\n     * @return {Buttons} Self for chaining or boolean for getter\n     */\n    active: function active(node, flag) {\n      var button = this._nodeToButton(node);\n\n      var klass = this.c.dom.button.active;\n      var jqNode = $(button.node);\n\n      if (flag === undefined) {\n        return jqNode.hasClass(klass);\n      }\n\n      jqNode.toggleClass(klass, flag === undefined ? true : flag);\n      return this;\n    },\n\n    /**\n     * Add a new button\n     * @param {object} config Button configuration object, base string name or function\n     * @param {int|string} [idx] Button index for where to insert the button\n     * @return {Buttons} Self for chaining\n     */\n    add: function add(config, idx) {\n      var buttons = this.s.buttons;\n\n      if (typeof idx === 'string') {\n        var split = idx.split('-');\n        var base = this.s;\n\n        for (var i = 0, ien = split.length - 1; i < ien; i++) {\n          base = base.buttons[split[i] * 1];\n        }\n\n        buttons = base.buttons;\n        idx = split[split.length - 1] * 1;\n      }\n\n      this._expandButton(buttons, config, false, idx);\n\n      this._draw();\n\n      return this;\n    },\n\n    /**\n     * Get the container node for the buttons\n     * @return {jQuery} Buttons node\n     */\n    container: function container() {\n      return this.dom.container;\n    },\n\n    /**\n     * Disable a button\n     * @param  {node} node Button node\n     * @return {Buttons} Self for chaining\n     */\n    disable: function disable(node) {\n      var button = this._nodeToButton(node);\n\n      $(button.node).addClass(this.c.dom.button.disabled);\n      return this;\n    },\n\n    /**\n     * Destroy the instance, cleaning up event handlers and removing DOM\n     * elements\n     * @return {Buttons} Self for chaining\n     */\n    destroy: function destroy() {\n      // Key event listener\n      $('body').off('keyup.' + this.s.namespace); // Individual button destroy (so they can remove their own events if\n      // needed). Take a copy as the array is modified by `remove`\n\n      var buttons = this.s.buttons.slice();\n      var i, ien;\n\n      for (i = 0, ien = buttons.length; i < ien; i++) {\n        this.remove(buttons[i].node);\n      } // Container\n\n\n      this.dom.container.remove(); // Remove from the settings object collection\n\n      var buttonInsts = this.s.dt.settings()[0];\n\n      for (i = 0, ien = buttonInsts.length; i < ien; i++) {\n        if (buttonInsts.inst === this) {\n          buttonInsts.splice(i, 1);\n          break;\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Enable / disable a button\n     * @param  {node} node Button node\n     * @param  {boolean} [flag=true] Enable / disable flag\n     * @return {Buttons} Self for chaining\n     */\n    enable: function enable(node, flag) {\n      if (flag === false) {\n        return this.disable(node);\n      }\n\n      var button = this._nodeToButton(node);\n\n      $(button.node).removeClass(this.c.dom.button.disabled);\n      return this;\n    },\n\n    /**\n     * Get the instance name for the button set selector\n     * @return {string} Instance name\n     */\n    name: function name() {\n      return this.c.name;\n    },\n\n    /**\n     * Get a button's node\n     * @param  {node} node Button node\n     * @return {jQuery} Button element\n     */\n    node: function node(_node) {\n      var button = this._nodeToButton(_node);\n\n      return $(button.node);\n    },\n\n    /**\n     * Remove a button.\n     * @param  {node} node Button node\n     * @return {Buttons} Self for chaining\n     */\n    remove: function remove(node) {\n      var button = this._nodeToButton(node);\n\n      var host = this._nodeToHost(node);\n\n      var dt = this.s.dt; // Remove any child buttons first\n\n      if (button.buttons.length) {\n        for (var i = button.buttons.length - 1; i >= 0; i--) {\n          this.remove(button.buttons[i].node);\n        }\n      } // Allow the button to remove event handlers, etc\n\n\n      if (button.conf.destroy) {\n        button.conf.destroy.call(dt.button(node), dt, $(node), button.conf);\n      }\n\n      this._removeKey(button.conf);\n\n      $(button.node).remove();\n      var idx = $.inArray(button, host);\n      host.splice(idx, 1);\n      return this;\n    },\n\n    /**\n     * Get the text for a button\n     * @param  {int|string} node Button index\n     * @return {string} Button text\n     */\n\n    /**\n    * Set the text for a button\n    * @param  {int|string|function} node Button index\n    * @param  {string} label Text\n    * @return {Buttons} Self for chaining\n    */\n    text: function text(node, label) {\n      var button = this._nodeToButton(node);\n\n      var buttonLiner = this.c.dom.collection.buttonLiner;\n      var linerTag = button.inCollection && buttonLiner && buttonLiner.tag ? buttonLiner.tag : this.c.dom.buttonLiner.tag;\n      var dt = this.s.dt;\n      var jqNode = $(button.node);\n\n      var text = function text(opt) {\n        return typeof opt === 'function' ? opt(dt, jqNode, button.conf) : opt;\n      };\n\n      if (label === undefined) {\n        return text(button.conf.text);\n      }\n\n      button.conf.text = label;\n\n      if (linerTag) {\n        jqNode.children(linerTag).html(text(label));\n      } else {\n        jqNode.html(text(label));\n      }\n\n      return this;\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Constructor\n     */\n\n    /**\n     * Buttons constructor\n     * @private\n     */\n    _constructor: function _constructor() {\n      var that = this;\n      var dt = this.s.dt;\n      var dtSettings = dt.settings()[0];\n      var buttons = this.c.buttons;\n\n      if (!dtSettings._buttons) {\n        dtSettings._buttons = [];\n      }\n\n      dtSettings._buttons.push({\n        inst: this,\n        name: this.c.name\n      });\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        this.add(buttons[i]);\n      }\n\n      dt.on('destroy', function () {\n        that.destroy();\n      }); // Global key event binding to listen for button keys\n\n      $('body').on('keyup.' + this.s.namespace, function (e) {\n        if (!document.activeElement || document.activeElement === document.body) {\n          // SUse a string of characters for fast lookup of if we need to\n          // handle this\n          var character = String.fromCharCode(e.keyCode).toLowerCase();\n\n          if (that.s.listenKeys.toLowerCase().indexOf(character) !== -1) {\n            that._keypress(character, e);\n          }\n        }\n      });\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Private methods\n     */\n\n    /**\n     * Add a new button to the key press listener\n     * @param {object} conf Resolved button configuration object\n     * @private\n     */\n    _addKey: function _addKey(conf) {\n      if (conf.key) {\n        this.s.listenKeys += $.isPlainObject(conf.key) ? conf.key.key : conf.key;\n      }\n    },\n\n    /**\n     * Insert the buttons into the container. Call without parameters!\n     * @param  {node} [container] Recursive only - Insert point\n     * @param  {array} [buttons] Recursive only - Buttons array\n     * @private\n     */\n    _draw: function _draw(container, buttons) {\n      if (!container) {\n        container = this.dom.container;\n        buttons = this.s.buttons;\n      }\n\n      container.children().detach();\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        container.append(buttons[i].inserter);\n\n        if (buttons[i].buttons && buttons[i].buttons.length) {\n          this._draw(buttons[i].collection, buttons[i].buttons);\n        }\n      }\n    },\n\n    /**\n     * Create buttons from an array of buttons\n     * @param  {array} attachTo Buttons array to attach to\n     * @param  {object} button Button definition\n     * @param  {boolean} inCollection true if the button is in a collection\n     * @private\n     */\n    _expandButton: function _expandButton(attachTo, button, inCollection, attachPoint) {\n      var dt = this.s.dt;\n      var buttonCounter = 0;\n      var buttons = !$.isArray(button) ? [button] : button;\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        var conf = this._resolveExtends(buttons[i]);\n\n        if (!conf) {\n          continue;\n        } // If the configuration is an array, then expand the buttons at this\n        // point\n\n\n        if ($.isArray(conf)) {\n          this._expandButton(attachTo, conf, inCollection, attachPoint);\n\n          continue;\n        }\n\n        var built = this._buildButton(conf, inCollection);\n\n        if (!built) {\n          continue;\n        }\n\n        if (attachPoint !== undefined) {\n          attachTo.splice(attachPoint, 0, built);\n          attachPoint++;\n        } else {\n          attachTo.push(built);\n        }\n\n        if (built.conf.buttons) {\n          var collectionDom = this.c.dom.collection;\n          built.collection = $('<' + collectionDom.tag + '/>').addClass(collectionDom.className);\n          built.conf._collection = built.collection;\n\n          this._expandButton(built.buttons, built.conf.buttons, true, attachPoint);\n        } // init call is made here, rather than buildButton as it needs to\n        // be selectable, and for that it needs to be in the buttons array\n\n\n        if (conf.init) {\n          conf.init.call(dt.button(built.node), dt, $(built.node), conf);\n        }\n\n        buttonCounter++;\n      }\n    },\n\n    /**\n     * Create an individual button\n     * @param  {object} config            Resolved button configuration\n     * @param  {boolean} inCollection `true` if a collection button\n     * @return {jQuery} Created button node (jQuery)\n     * @private\n     */\n    _buildButton: function _buildButton(config, inCollection) {\n      var buttonDom = this.c.dom.button;\n      var linerDom = this.c.dom.buttonLiner;\n      var collectionDom = this.c.dom.collection;\n      var dt = this.s.dt;\n\n      var text = function text(opt) {\n        return typeof opt === 'function' ? opt(dt, button, config) : opt;\n      };\n\n      if (inCollection && collectionDom.button) {\n        buttonDom = collectionDom.button;\n      }\n\n      if (inCollection && collectionDom.buttonLiner) {\n        linerDom = collectionDom.buttonLiner;\n      } // Make sure that the button is available based on whatever requirements\n      // it has. For example, Flash buttons require Flash\n\n\n      if (config.available && !config.available(dt, config)) {\n        return false;\n      }\n\n      var action = function action(e, dt, button, config) {\n        config.action.call(dt.button(button), e, dt, button, config);\n        $(dt.table().node()).triggerHandler('buttons-action.dt', [dt.button(button), dt, button, config]);\n      };\n\n      var button = $('<' + buttonDom.tag + '/>').addClass(buttonDom.className).attr('tabindex', this.s.dt.settings()[0].iTabIndex).attr('aria-controls', this.s.dt.table().node().id).on('click.dtb', function (e) {\n        e.preventDefault();\n\n        if (!button.hasClass(buttonDom.disabled) && config.action) {\n          action(e, dt, button, config);\n        }\n\n        button.blur();\n      }).on('keyup.dtb', function (e) {\n        if (e.keyCode === 13) {\n          if (!button.hasClass(buttonDom.disabled) && config.action) {\n            action(e, dt, button, config);\n          }\n        }\n      }); // Make `a` tags act like a link\n\n      if (buttonDom.tag.toLowerCase() === 'a') {\n        button.attr('href', '#');\n      }\n\n      if (linerDom.tag) {\n        var liner = $('<' + linerDom.tag + '/>').html(text(config.text)).addClass(linerDom.className);\n\n        if (linerDom.tag.toLowerCase() === 'a') {\n          liner.attr('href', '#');\n        }\n\n        button.append(liner);\n      } else {\n        button.html(text(config.text));\n      }\n\n      if (config.enabled === false) {\n        button.addClass(buttonDom.disabled);\n      }\n\n      if (config.className) {\n        button.addClass(config.className);\n      }\n\n      if (config.titleAttr) {\n        button.attr('title', config.titleAttr);\n      }\n\n      if (!config.namespace) {\n        config.namespace = '.dt-button-' + _buttonCounter++;\n      }\n\n      var buttonContainer = this.c.dom.buttonContainer;\n      var inserter;\n\n      if (buttonContainer && buttonContainer.tag) {\n        inserter = $('<' + buttonContainer.tag + '/>').addClass(buttonContainer.className).append(button);\n      } else {\n        inserter = button;\n      }\n\n      this._addKey(config);\n\n      return {\n        conf: config,\n        node: button.get(0),\n        inserter: inserter,\n        buttons: [],\n        inCollection: inCollection,\n        collection: null\n      };\n    },\n\n    /**\n     * Get the button object from a node (recursive)\n     * @param  {node} node Button node\n     * @param  {array} [buttons] Button array, uses base if not defined\n     * @return {object} Button object\n     * @private\n     */\n    _nodeToButton: function _nodeToButton(node, buttons) {\n      if (!buttons) {\n        buttons = this.s.buttons;\n      }\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        if (buttons[i].node === node) {\n          return buttons[i];\n        }\n\n        if (buttons[i].buttons.length) {\n          var ret = this._nodeToButton(node, buttons[i].buttons);\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n\n    /**\n     * Get container array for a button from a button node (recursive)\n     * @param  {node} node Button node\n     * @param  {array} [buttons] Button array, uses base if not defined\n     * @return {array} Button's host array\n     * @private\n     */\n    _nodeToHost: function _nodeToHost(node, buttons) {\n      if (!buttons) {\n        buttons = this.s.buttons;\n      }\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        if (buttons[i].node === node) {\n          return buttons;\n        }\n\n        if (buttons[i].buttons.length) {\n          var ret = this._nodeToHost(node, buttons[i].buttons);\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n\n    /**\n     * Handle a key press - determine if any button's key configured matches\n     * what was typed and trigger the action if so.\n     * @param  {string} character The character pressed\n     * @param  {object} e Key event that triggered this call\n     * @private\n     */\n    _keypress: function _keypress(character, e) {\n      var run = function run(conf, node) {\n        if (!conf.key) {\n          return;\n        }\n\n        if (conf.key === character) {\n          $(node).click();\n        } else if ($.isPlainObject(conf.key)) {\n          if (conf.key.key !== character) {\n            return;\n          }\n\n          if (conf.key.shiftKey && !e.shiftKey) {\n            return;\n          }\n\n          if (conf.key.altKey && !e.altKey) {\n            return;\n          }\n\n          if (conf.key.ctrlKey && !e.ctrlKey) {\n            return;\n          }\n\n          if (conf.key.metaKey && !e.metaKey) {\n            return;\n          } // Made it this far - it is good\n\n\n          $(node).click();\n        }\n      };\n\n      var recurse = function recurse(a) {\n        for (var i = 0, ien = a.length; i < ien; i++) {\n          run(a[i].conf, a[i].node);\n\n          if (a[i].buttons.length) {\n            recurse(a[i].buttons);\n          }\n        }\n      };\n\n      recurse(this.s.buttons);\n    },\n\n    /**\n     * Remove a key from the key listener for this instance (to be used when a\n     * button is removed)\n     * @param  {object} conf Button configuration\n     * @private\n     */\n    _removeKey: function _removeKey(conf) {\n      if (conf.key) {\n        var character = $.isPlainObject(conf.key) ? conf.key.key : conf.key; // Remove only one character, as multiple buttons could have the\n        // same listening key\n\n        var a = this.s.listenKeys.split('');\n        var idx = $.inArray(character, a);\n        a.splice(idx, 1);\n        this.s.listenKeys = a.join('');\n      }\n    },\n\n    /**\n     * Resolve a button configuration\n     * @param  {string|function|object} conf Button config to resolve\n     * @return {object} Button configuration\n     * @private\n     */\n    _resolveExtends: function _resolveExtends(conf) {\n      var dt = this.s.dt;\n      var i, ien;\n\n      var toConfObject = function toConfObject(base) {\n        var loop = 0; // Loop until we have resolved to a button configuration, or an\n        // array of button configurations (which will be iterated\n        // separately)\n\n        while (!$.isPlainObject(base) && !$.isArray(base)) {\n          if (base === undefined) {\n            return;\n          }\n\n          if (typeof base === 'function') {\n            base = base(dt, conf);\n\n            if (!base) {\n              return false;\n            }\n          } else if (typeof base === 'string') {\n            if (!_dtButtons[base]) {\n              throw 'Unknown button type: ' + base;\n            }\n\n            base = _dtButtons[base];\n          }\n\n          loop++;\n\n          if (loop > 30) {\n            // Protect against misconfiguration killing the browser\n            throw 'Buttons: Too many iterations';\n          }\n        }\n\n        return $.isArray(base) ? base : $.extend({}, base);\n      };\n\n      conf = toConfObject(conf);\n\n      while (conf && conf.extend) {\n        // Use `toConfObject` in case the button definition being extended\n        // is itself a string or a function\n        if (!_dtButtons[conf.extend]) {\n          throw 'Cannot extend unknown button type: ' + conf.extend;\n        }\n\n        var objArray = toConfObject(_dtButtons[conf.extend]);\n\n        if ($.isArray(objArray)) {\n          return objArray;\n        } else if (!objArray) {\n          // This is a little brutal as it might be possible to have a\n          // valid button without the extend, but if there is no extend\n          // then the host button would be acting in an undefined state\n          return false;\n        } // Stash the current class name\n\n\n        var originalClassName = objArray.className;\n        conf = $.extend({}, objArray, conf); // The extend will have overwritten the original class name if the\n        // `conf` object also assigned a class, but we want to concatenate\n        // them so they are list that is combined from all extended buttons\n\n        if (originalClassName && conf.className !== originalClassName) {\n          conf.className = originalClassName + ' ' + conf.className;\n        } // Buttons to be added to a collection  -gives the ability to define\n        // if buttons should be added to the start or end of a collection\n\n\n        var postfixButtons = conf.postfixButtons;\n\n        if (postfixButtons) {\n          if (!conf.buttons) {\n            conf.buttons = [];\n          }\n\n          for (i = 0, ien = postfixButtons.length; i < ien; i++) {\n            conf.buttons.push(postfixButtons[i]);\n          }\n\n          conf.postfixButtons = null;\n        }\n\n        var prefixButtons = conf.prefixButtons;\n\n        if (prefixButtons) {\n          if (!conf.buttons) {\n            conf.buttons = [];\n          }\n\n          for (i = 0, ien = prefixButtons.length; i < ien; i++) {\n            conf.buttons.splice(i, 0, prefixButtons[i]);\n          }\n\n          conf.prefixButtons = null;\n        } // Although we want the `conf` object to overwrite almost all of\n        // the properties of the object being extended, the `extend`\n        // property should come from the object being extended\n\n\n        conf.extend = objArray.extend;\n      }\n\n      return conf;\n    }\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Statics\n   */\n\n  /**\n   * Show / hide a background layer behind a collection\n   * @param  {boolean} Flag to indicate if the background should be shown or\n   *   hidden \n   * @param  {string} Class to assign to the background\n   * @static\n   */\n\n  Buttons.background = function (show, className, fade) {\n    if (fade === undefined) {\n      fade = 400;\n    }\n\n    if (show) {\n      $('<div/>').addClass(className).css('display', 'none').appendTo('body').fadeIn(fade);\n    } else {\n      $('body > div.' + className).fadeOut(fade, function () {\n        $(this).removeClass(className).remove();\n      });\n    }\n  };\n  /**\n   * Instance selector - select Buttons instances based on an instance selector\n   * value from the buttons assigned to a DataTable. This is only useful if\n   * multiple instances are attached to a DataTable.\n   * @param  {string|int|array} Instance selector - see `instance-selector`\n   *   documentation on the DataTables site\n   * @param  {array} Button instance array that was attached to the DataTables\n   *   settings object\n   * @return {array} Buttons instances\n   * @static\n   */\n\n\n  Buttons.instanceSelector = function (group, buttons) {\n    if (!group) {\n      return $.map(buttons, function (v) {\n        return v.inst;\n      });\n    }\n\n    var ret = [];\n    var names = $.map(buttons, function (v) {\n      return v.name;\n    }); // Flatten the group selector into an array of single options\n\n    var process = function process(input) {\n      if ($.isArray(input)) {\n        for (var i = 0, ien = input.length; i < ien; i++) {\n          process(input[i]);\n        }\n\n        return;\n      }\n\n      if (typeof input === 'string') {\n        if (input.indexOf(',') !== -1) {\n          // String selector, list of names\n          process(input.split(','));\n        } else {\n          // String selector individual name\n          var idx = $.inArray($.trim(input), names);\n\n          if (idx !== -1) {\n            ret.push(buttons[idx].inst);\n          }\n        }\n      } else if (typeof input === 'number') {\n        // Index selector\n        ret.push(buttons[input].inst);\n      }\n    };\n\n    process(group);\n    return ret;\n  };\n  /**\n   * Button selector - select one or more buttons from a selector input so some\n   * operation can be performed on them.\n   * @param  {array} Button instances array that the selector should operate on\n   * @param  {string|int|node|jQuery|array} Button selector - see\n   *   `button-selector` documentation on the DataTables site\n   * @return {array} Array of objects containing `inst` and `idx` properties of\n   *   the selected buttons so you know which instance each button belongs to.\n   * @static\n   */\n\n\n  Buttons.buttonSelector = function (insts, selector) {\n    var ret = [];\n\n    var nodeBuilder = function nodeBuilder(a, buttons, baseIdx) {\n      var button;\n      var idx;\n\n      for (var i = 0, ien = buttons.length; i < ien; i++) {\n        button = buttons[i];\n\n        if (button) {\n          idx = baseIdx !== undefined ? baseIdx + i : i + '';\n          a.push({\n            node: button.node,\n            name: button.conf.name,\n            idx: idx\n          });\n\n          if (button.buttons) {\n            nodeBuilder(a, button.buttons, idx + '-');\n          }\n        }\n      }\n    };\n\n    var run = function run(selector, inst) {\n      var i, ien;\n      var buttons = [];\n      nodeBuilder(buttons, inst.s.buttons);\n      var nodes = $.map(buttons, function (v) {\n        return v.node;\n      });\n\n      if ($.isArray(selector) || selector instanceof $) {\n        for (i = 0, ien = selector.length; i < ien; i++) {\n          run(selector[i], inst);\n        }\n\n        return;\n      }\n\n      if (selector === null || selector === undefined || selector === '*') {\n        // Select all\n        for (i = 0, ien = buttons.length; i < ien; i++) {\n          ret.push({\n            inst: inst,\n            node: buttons[i].node\n          });\n        }\n      } else if (typeof selector === 'number') {\n        // Main button index selector\n        ret.push({\n          inst: inst,\n          node: inst.s.buttons[selector].node\n        });\n      } else if (typeof selector === 'string') {\n        if (selector.indexOf(',') !== -1) {\n          // Split\n          var a = selector.split(',');\n\n          for (i = 0, ien = a.length; i < ien; i++) {\n            run($.trim(a[i]), inst);\n          }\n        } else if (selector.match(/^\\d+(\\-\\d+)*$/)) {\n          // Sub-button index selector\n          var indexes = $.map(buttons, function (v) {\n            return v.idx;\n          });\n          ret.push({\n            inst: inst,\n            node: buttons[$.inArray(selector, indexes)].node\n          });\n        } else if (selector.indexOf(':name') !== -1) {\n          // Button name selector\n          var name = selector.replace(':name', '');\n\n          for (i = 0, ien = buttons.length; i < ien; i++) {\n            if (buttons[i].name === name) {\n              ret.push({\n                inst: inst,\n                node: buttons[i].node\n              });\n            }\n          }\n        } else {\n          // jQuery selector on the nodes\n          $(nodes).filter(selector).each(function () {\n            ret.push({\n              inst: inst,\n              node: this\n            });\n          });\n        }\n      } else if (typeof selector === 'object' && selector.nodeName) {\n        // Node selector\n        var idx = $.inArray(selector, nodes);\n\n        if (idx !== -1) {\n          ret.push({\n            inst: inst,\n            node: nodes[idx]\n          });\n        }\n      }\n    };\n\n    for (var i = 0, ien = insts.length; i < ien; i++) {\n      var inst = insts[i];\n      run(selector, inst);\n    }\n\n    return ret;\n  };\n  /**\n   * Buttons defaults. For full documentation, please refer to the docs/option\n   * directory or the DataTables site.\n   * @type {Object}\n   * @static\n   */\n\n\n  Buttons.defaults = {\n    buttons: ['copy', 'excel', 'csv', 'pdf', 'print'],\n    name: 'main',\n    tabIndex: 0,\n    dom: {\n      container: {\n        tag: 'div',\n        className: 'dt-buttons'\n      },\n      collection: {\n        tag: 'div',\n        className: 'dt-button-collection'\n      },\n      button: {\n        tag: 'a',\n        className: 'dt-button',\n        active: 'active',\n        disabled: 'disabled'\n      },\n      buttonLiner: {\n        tag: 'span',\n        className: ''\n      }\n    }\n  };\n  /**\n   * Version information\n   * @type {string}\n   * @static\n   */\n\n  Buttons.version = '1.2.2';\n  $.extend(_dtButtons, {\n    collection: {\n      text: function text(dt) {\n        return dt.i18n('buttons.collection', 'Collection');\n      },\n      className: 'buttons-collection',\n      action: function action(e, dt, button, config) {\n        var host = button;\n        var hostOffset = host.offset();\n        var tableContainer = $(dt.table().container());\n        var multiLevel = false; // Remove any old collection\n\n        if ($('div.dt-button-background').length) {\n          multiLevel = $('div.dt-button-collection').offset();\n          $('body').trigger('click.dtb-collection');\n        }\n\n        config._collection.addClass(config.collectionLayout).css('display', 'none').appendTo('body').fadeIn(config.fade);\n\n        var position = config._collection.css('position');\n\n        if (multiLevel && position === 'absolute') {\n          config._collection.css({\n            top: multiLevel.top + 5,\n            // magic numbers for a little offset\n            left: multiLevel.left + 5\n          });\n        } else if (position === 'absolute') {\n          config._collection.css({\n            top: hostOffset.top + host.outerHeight(),\n            left: hostOffset.left\n          });\n\n          var listRight = hostOffset.left + config._collection.outerWidth();\n\n          var tableRight = tableContainer.offset().left + tableContainer.width();\n\n          if (listRight > tableRight) {\n            config._collection.css('left', hostOffset.left - (listRight - tableRight));\n          }\n        } else {\n          // Fix position - centre on screen\n          var top = config._collection.height() / 2;\n\n          if (top > $(window).height() / 2) {\n            top = $(window).height() / 2;\n          }\n\n          config._collection.css('marginTop', top * -1);\n        }\n\n        if (config.background) {\n          Buttons.background(true, config.backgroundClassName, config.fade);\n        } // Need to break the 'thread' for the collection button being\n        // activated by a click - it would also trigger this event\n\n\n        setTimeout(function () {\n          // This is bonkers, but if we don't have a click listener on the\n          // background element, iOS Safari will ignore the body click\n          // listener below. An empty function here is all that is\n          // required to make it work...\n          $('div.dt-button-background').on('click.dtb-collection', function () {});\n          $('body').on('click.dtb-collection', function (e) {\n            // andSelf is deprecated in jQ1.8, but we want 1.7 compat\n            var back = $.fn.addBack ? 'addBack' : 'andSelf';\n\n            if (!$(e.target).parents()[back]().filter(config._collection).length) {\n              config._collection.fadeOut(config.fade, function () {\n                config._collection.detach();\n              });\n\n              $('div.dt-button-background').off('click.dtb-collection');\n              Buttons.background(false, config.backgroundClassName, config.fade);\n              $('body').off('click.dtb-collection');\n              dt.off('buttons-action.b-internal');\n            }\n          });\n        }, 10);\n\n        if (config.autoClose) {\n          dt.on('buttons-action.b-internal', function () {\n            $('div.dt-button-background').click();\n          });\n        }\n      },\n      background: true,\n      collectionLayout: '',\n      backgroundClassName: 'dt-button-background',\n      autoClose: false,\n      fade: 400\n    },\n    copy: function copy(dt, conf) {\n      if (_dtButtons.copyHtml5) {\n        return 'copyHtml5';\n      }\n\n      if (_dtButtons.copyFlash && _dtButtons.copyFlash.available(dt, conf)) {\n        return 'copyFlash';\n      }\n    },\n    csv: function csv(dt, conf) {\n      // Common option that will use the HTML5 or Flash export buttons\n      if (_dtButtons.csvHtml5 && _dtButtons.csvHtml5.available(dt, conf)) {\n        return 'csvHtml5';\n      }\n\n      if (_dtButtons.csvFlash && _dtButtons.csvFlash.available(dt, conf)) {\n        return 'csvFlash';\n      }\n    },\n    excel: function excel(dt, conf) {\n      // Common option that will use the HTML5 or Flash export buttons\n      if (_dtButtons.excelHtml5 && _dtButtons.excelHtml5.available(dt, conf)) {\n        return 'excelHtml5';\n      }\n\n      if (_dtButtons.excelFlash && _dtButtons.excelFlash.available(dt, conf)) {\n        return 'excelFlash';\n      }\n    },\n    pdf: function pdf(dt, conf) {\n      // Common option that will use the HTML5 or Flash export buttons\n      if (_dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available(dt, conf)) {\n        return 'pdfHtml5';\n      }\n\n      if (_dtButtons.pdfFlash && _dtButtons.pdfFlash.available(dt, conf)) {\n        return 'pdfFlash';\n      }\n    },\n    pageLength: function pageLength(dt) {\n      var lengthMenu = dt.settings()[0].aLengthMenu;\n      var vals = $.isArray(lengthMenu[0]) ? lengthMenu[0] : lengthMenu;\n      var lang = $.isArray(lengthMenu[0]) ? lengthMenu[1] : lengthMenu;\n\n      var text = function text(dt) {\n        return dt.i18n('buttons.pageLength', {\n          \"-1\": 'Show all rows',\n          _: 'Show %d rows'\n        }, dt.page.len());\n      };\n\n      return {\n        extend: 'collection',\n        text: text,\n        className: 'buttons-page-length',\n        autoClose: true,\n        buttons: $.map(vals, function (val, i) {\n          return {\n            text: lang[i],\n            action: function action(e, dt) {\n              dt.page.len(val).draw();\n            },\n            init: function init(dt, node, conf) {\n              var that = this;\n\n              var fn = function fn() {\n                that.active(dt.page.len() === val);\n              };\n\n              dt.on('length.dt' + conf.namespace, fn);\n              fn();\n            },\n            destroy: function destroy(dt, node, conf) {\n              dt.off('length.dt' + conf.namespace);\n            }\n          };\n        }),\n        init: function init(dt, node, conf) {\n          var that = this;\n          dt.on('length.dt' + conf.namespace, function () {\n            that.text(text(dt));\n          });\n        },\n        destroy: function destroy(dt, node, conf) {\n          dt.off('length.dt' + conf.namespace);\n        }\n      };\n    }\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables API\n   *\n   * For complete documentation, please refer to the docs/api directory or the\n   * DataTables site\n   */\n  // Buttons group and individual button selector\n\n  DataTable.Api.register('buttons()', function (group, selector) {\n    // Argument shifting\n    if (selector === undefined) {\n      selector = group;\n      group = undefined;\n    }\n\n    this.selector.buttonGroup = group;\n    var res = this.iterator(true, 'table', function (ctx) {\n      if (ctx._buttons) {\n        return Buttons.buttonSelector(Buttons.instanceSelector(group, ctx._buttons), selector);\n      }\n    }, true);\n    res._groupSelector = group;\n    return res;\n  }); // Individual button selector\n\n  DataTable.Api.register('button()', function (group, selector) {\n    // just run buttons() and truncate\n    var buttons = this.buttons(group, selector);\n\n    if (buttons.length > 1) {\n      buttons.splice(1, buttons.length);\n    }\n\n    return buttons;\n  }); // Active buttons\n\n  DataTable.Api.registerPlural('buttons().active()', 'button().active()', function (flag) {\n    if (flag === undefined) {\n      return this.map(function (set) {\n        return set.inst.active(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.active(set.node, flag);\n    });\n  }); // Get / set button action\n\n  DataTable.Api.registerPlural('buttons().action()', 'button().action()', function (action) {\n    if (action === undefined) {\n      return this.map(function (set) {\n        return set.inst.action(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.action(set.node, action);\n    });\n  }); // Enable / disable buttons\n\n  DataTable.Api.register(['buttons().enable()', 'button().enable()'], function (flag) {\n    return this.each(function (set) {\n      set.inst.enable(set.node, flag);\n    });\n  }); // Disable buttons\n\n  DataTable.Api.register(['buttons().disable()', 'button().disable()'], function () {\n    return this.each(function (set) {\n      set.inst.disable(set.node);\n    });\n  }); // Get button nodes\n\n  DataTable.Api.registerPlural('buttons().nodes()', 'button().node()', function () {\n    var jq = $(); // jQuery will automatically reduce duplicates to a single entry\n\n    $(this.each(function (set) {\n      jq = jq.add(set.inst.node(set.node));\n    }));\n    return jq;\n  }); // Get / set button text (i.e. the button labels)\n\n  DataTable.Api.registerPlural('buttons().text()', 'button().text()', function (label) {\n    if (label === undefined) {\n      return this.map(function (set) {\n        return set.inst.text(set.node);\n      });\n    }\n\n    return this.each(function (set) {\n      set.inst.text(set.node, label);\n    });\n  }); // Trigger a button's action\n\n  DataTable.Api.registerPlural('buttons().trigger()', 'button().trigger()', function () {\n    return this.each(function (set) {\n      set.inst.node(set.node).trigger('click');\n    });\n  }); // Get the container elements\n\n  DataTable.Api.registerPlural('buttons().containers()', 'buttons().container()', function () {\n    var jq = $();\n    var groupSelector = this._groupSelector; // We need to use the group selector directly, since if there are no buttons\n    // the result set will be empty\n\n    this.iterator(true, 'table', function (ctx) {\n      if (ctx._buttons) {\n        var insts = Buttons.instanceSelector(groupSelector, ctx._buttons);\n\n        for (var i = 0, ien = insts.length; i < ien; i++) {\n          jq = jq.add(insts[i].container());\n        }\n      }\n    });\n    return jq;\n  }); // Add a new button\n\n  DataTable.Api.register('button().add()', function (idx, conf) {\n    var ctx = this.context; // Don't use `this` as it could be empty - select the instances directly\n\n    if (ctx.length) {\n      var inst = Buttons.instanceSelector(this._groupSelector, ctx[0]._buttons);\n\n      if (inst.length) {\n        inst[0].add(conf, idx);\n      }\n    }\n\n    return this.button(this._groupSelector, idx);\n  }); // Destroy the button sets selected\n\n  DataTable.Api.register('buttons().destroy()', function () {\n    this.pluck('inst').unique().each(function (inst) {\n      inst.destroy();\n    });\n    return this;\n  }); // Remove a button\n\n  DataTable.Api.registerPlural('buttons().remove()', 'buttons().remove()', function () {\n    this.each(function (set) {\n      set.inst.remove(set.node);\n    });\n    return this;\n  }); // Information box that can be used by buttons\n\n  var _infoTimer;\n\n  DataTable.Api.register('buttons.info()', function (title, message, time) {\n    var that = this;\n\n    if (title === false) {\n      $('#datatables_buttons_info').fadeOut(function () {\n        $(this).remove();\n      });\n      clearTimeout(_infoTimer);\n      _infoTimer = null;\n      return this;\n    }\n\n    if (_infoTimer) {\n      clearTimeout(_infoTimer);\n    }\n\n    if ($('#datatables_buttons_info').length) {\n      $('#datatables_buttons_info').remove();\n    }\n\n    title = title ? '<h2>' + title + '</h2>' : '';\n    $('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>').html(title).append($('<div/>')[typeof message === 'string' ? 'html' : 'append'](message)).css('display', 'none').appendTo('body').fadeIn();\n\n    if (time !== undefined && time !== 0) {\n      _infoTimer = setTimeout(function () {\n        that.buttons.info(false);\n      }, time);\n    }\n\n    return this;\n  }); // Get data from the table for export - this is common to a number of plug-in\n  // buttons so it is included in the Buttons core library\n\n  DataTable.Api.register('buttons.exportData()', function (options) {\n    if (this.context.length) {\n      return _exportData(new DataTable.Api(this.context[0]), options);\n    }\n  });\n  var _exportTextarea = $('<textarea/>')[0];\n\n  var _exportData = function _exportData(dt, inOpts) {\n    var config = $.extend(true, {}, {\n      rows: null,\n      columns: '',\n      modifier: {\n        search: 'applied',\n        order: 'applied'\n      },\n      orthogonal: 'display',\n      stripHtml: true,\n      stripNewlines: true,\n      decodeEntities: true,\n      trim: true,\n      format: {\n        header: function header(d) {\n          return strip(d);\n        },\n        footer: function footer(d) {\n          return strip(d);\n        },\n        body: function body(d) {\n          return strip(d);\n        }\n      }\n    }, inOpts);\n\n    var strip = function strip(str) {\n      if (typeof str !== 'string') {\n        return str;\n      }\n\n      if (config.stripHtml) {\n        str = str.replace(/<[^>]*>/g, '');\n      }\n\n      if (config.trim) {\n        str = str.replace(/^\\s+|\\s+$/g, '');\n      }\n\n      if (config.stripNewlines) {\n        str = str.replace(/\\n/g, ' ');\n      }\n\n      if (config.decodeEntities) {\n        _exportTextarea.innerHTML = str;\n        str = _exportTextarea.value;\n      }\n\n      return str;\n    };\n\n    var header = dt.columns(config.columns).indexes().map(function (idx) {\n      var el = dt.column(idx).header();\n      return config.format.header(el.innerHTML, idx, el);\n    }).toArray();\n    var footer = dt.table().footer() ? dt.columns(config.columns).indexes().map(function (idx) {\n      var el = dt.column(idx).footer();\n      return config.format.footer(el ? el.innerHTML : '', idx, el);\n    }).toArray() : null;\n    var selectedCells = dt.cells(config.rows, config.columns, config.modifier);\n    var cells = selectedCells.render(config.orthogonal).toArray();\n    var cellNodes = selectedCells.nodes().toArray();\n    var columns = header.length;\n    var rows = columns > 0 ? cells.length / columns : 0;\n    var body = new Array(rows);\n    var cellCounter = 0;\n\n    for (var i = 0, ien = rows; i < ien; i++) {\n      var row = new Array(columns);\n\n      for (var j = 0; j < columns; j++) {\n        row[j] = config.format.body(cells[cellCounter], i, j, cellNodes[cellCounter]);\n        cellCounter++;\n      }\n\n      body[i] = row;\n    }\n\n    return {\n      header: header,\n      footer: footer,\n      body: body\n    };\n  };\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables interface\n   */\n  // Attach to DataTables objects for global access\n\n\n  $.fn.dataTable.Buttons = Buttons;\n  $.fn.DataTable.Buttons = Buttons; // DataTables creation - check if the buttons have been defined for this table,\n  // they will have been if the `B` option was used in `dom`, otherwise we should\n  // create the buttons instance here so they can be inserted into the document\n  // using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n  // be removed in future.\n\n  $(document).on('init.dt plugin-init.dt', function (e, settings) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    var opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n    if (opts && !settings._buttons) {\n      new Buttons(settings, opts).container();\n    }\n  }); // DataTables `dom` feature option\n\n  DataTable.ext.feature.push({\n    fnInit: function fnInit(settings) {\n      var api = new DataTable.Api(settings);\n      var opts = api.init().buttons || DataTable.defaults.buttons;\n      return new Buttons(api, opts).container();\n    },\n    cFeature: \"B\"\n  });\n  return Buttons;\n});","map":{"version":3,"sources":["/Users/david/Winner-Stock/app/javascript/packs/custom/dataTables/buttons/dataTables.buttons.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","_instCounter","_buttonCounter","_dtButtons","ext","buttons","Buttons","dt","config","isArray","c","extend","defaults","s","Api","listenKeys","namespace","dom","container","tag","addClass","className","_constructor","prototype","action","node","button","_nodeToButton","conf","active","flag","klass","jqNode","hasClass","toggleClass","add","idx","split","base","i","ien","length","_expandButton","_draw","disable","disabled","destroy","off","slice","remove","buttonInsts","settings","inst","splice","enable","removeClass","name","host","_nodeToHost","call","_removeKey","inArray","text","label","buttonLiner","collection","linerTag","inCollection","opt","children","html","that","dtSettings","_buttons","push","on","e","activeElement","body","character","String","fromCharCode","keyCode","toLowerCase","indexOf","_keypress","_addKey","key","isPlainObject","detach","append","inserter","attachTo","attachPoint","buttonCounter","_resolveExtends","built","_buildButton","collectionDom","_collection","init","buttonDom","linerDom","available","table","triggerHandler","attr","iTabIndex","id","preventDefault","blur","liner","enabled","titleAttr","buttonContainer","get","ret","run","click","shiftKey","altKey","ctrlKey","metaKey","recurse","a","join","toConfObject","loop","objArray","originalClassName","postfixButtons","prefixButtons","background","show","fade","css","appendTo","fadeIn","fadeOut","instanceSelector","group","map","v","names","process","input","trim","buttonSelector","insts","selector","nodeBuilder","baseIdx","nodes","match","indexes","replace","filter","each","nodeName","tabIndex","version","i18n","hostOffset","offset","tableContainer","multiLevel","trigger","collectionLayout","position","top","left","outerHeight","listRight","outerWidth","tableRight","width","height","backgroundClassName","setTimeout","back","addBack","target","parents","autoClose","copy","copyHtml5","copyFlash","csv","csvHtml5","csvFlash","excel","excelHtml5","excelFlash","pdf","pdfHtml5","pdfFlash","pageLength","lengthMenu","aLengthMenu","vals","lang","_","page","len","val","draw","register","buttonGroup","res","iterator","ctx","_groupSelector","registerPlural","set","jq","groupSelector","context","pluck","unique","_infoTimer","title","message","time","clearTimeout","info","options","_exportData","_exportTextarea","inOpts","rows","columns","modifier","search","order","orthogonal","stripHtml","stripNewlines","decodeEntities","format","header","d","strip","footer","str","innerHTML","value","el","column","toArray","selectedCells","cells","render","cellNodes","Array","cellCounter","row","j","opts","oInit","feature","fnInit","api","cFeature"],"mappings":"AAAA;;;AAIC,WAAUA,OAAV,EAAmB;AACnB,MAAK,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA5C,EAAkD;AACjD;AACAD,IAAAA,MAAM,CAAE,CAAC,QAAD,EAAW,gBAAX,CAAF,EAAgC,UAAWE,CAAX,EAAe;AACpD,aAAOH,OAAO,CAAEG,CAAF,EAAKC,MAAL,EAAaC,QAAb,CAAd;AACA,KAFK,CAAN;AAGA,GALD,MAMK,IAAK,OAAOC,OAAP,KAAmB,QAAxB,EAAmC;AACvC;AACAC,IAAAA,MAAM,CAACD,OAAP,GAAiB,UAAUE,IAAV,EAAgBL,CAAhB,EAAmB;AACnC,UAAK,CAAEK,IAAP,EAAc;AACbA,QAAAA,IAAI,GAAGJ,MAAP;AACA;;AAED,UAAK,CAAED,CAAF,IAAO,CAAEA,CAAC,CAACM,EAAF,CAAKC,SAAnB,EAA+B;AAC9BP,QAAAA,CAAC,GAAGQ,OAAO,CAAC,gBAAD,CAAP,CAA0BH,IAA1B,EAAgCL,CAAhC,EAAmCA,CAAvC;AACA;;AAED,aAAOH,OAAO,CAAEG,CAAF,EAAKK,IAAL,EAAWA,IAAI,CAACH,QAAhB,CAAd;AACA,KAVD;AAWA,GAbI,MAcA;AACJ;AACAL,IAAAA,OAAO,CAAEY,MAAF,EAAUR,MAAV,EAAkBC,QAAlB,CAAP;AACA;AACD,CAzBA,EAyBC,UAAUF,CAAV,EAAaC,MAAb,EAAqBC,QAArB,EAA+BQ,SAA/B,EAA2C;AAC7C;;AACA,MAAIC,SAAS,GAAGX,CAAC,CAACM,EAAF,CAAKC,SAArB,CAF6C,CAK7C;AACA;;AACA,MAAIK,YAAY,GAAG,CAAnB,CAP6C,CAS7C;;AACA,MAAIC,cAAc,GAAG,CAArB;AAEA,MAAIC,UAAU,GAAGH,SAAS,CAACI,GAAV,CAAcC,OAA/B;AAEA;;;;;;AAKA,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAAUC,EAAV,EAAcC,MAAd,EACd;AACC;AACA,QAAKA,MAAM,KAAK,IAAhB,EAAuB;AACtBA,MAAAA,MAAM,GAAG,EAAT;AACA,KAJF,CAMC;;;AACA,QAAKnB,CAAC,CAACoB,OAAF,CAAWD,MAAX,CAAL,EAA2B;AAC1BA,MAAAA,MAAM,GAAG;AAAEH,QAAAA,OAAO,EAAEG;AAAX,OAAT;AACA;;AAED,SAAKE,CAAL,GAASrB,CAAC,CAACsB,MAAF,CAAU,IAAV,EAAgB,EAAhB,EAAoBL,OAAO,CAACM,QAA5B,EAAsCJ,MAAtC,CAAT,CAXD,CAaC;;AACA,QAAKA,MAAM,CAACH,OAAZ,EAAsB;AACrB,WAAKK,CAAL,CAAOL,OAAP,GAAiBG,MAAM,CAACH,OAAxB;AACA;;AAED,SAAKQ,CAAL,GAAS;AACRN,MAAAA,EAAE,EAAE,IAAIP,SAAS,CAACc,GAAd,CAAmBP,EAAnB,CADI;AAERF,MAAAA,OAAO,EAAE,EAFD;AAGRU,MAAAA,UAAU,EAAE,EAHJ;AAIRC,MAAAA,SAAS,EAAE,QAAOf,YAAY;AAJtB,KAAT;AAOA,SAAKgB,GAAL,GAAW;AACVC,MAAAA,SAAS,EAAE7B,CAAC,CAAC,MAAI,KAAKqB,CAAL,CAAOO,GAAP,CAAWC,SAAX,CAAqBC,GAAzB,GAA6B,IAA9B,CAAD,CACTC,QADS,CACC,KAAKV,CAAL,CAAOO,GAAP,CAAWC,SAAX,CAAqBG,SADtB;AADD,KAAX;;AAKA,SAAKC,YAAL;AACA,GAhCD;;AAmCAjC,EAAAA,CAAC,CAACsB,MAAF,CAAUL,OAAO,CAACiB,SAAlB,EAA6B;AAC5B;;;;AAIA;;;;;;AAIG;;;;;;AAMHC,IAAAA,MAAM,EAAE,gBAAWC,IAAX,EAAiBD,OAAjB,EACR;AACC,UAAIE,MAAM,GAAG,KAAKC,aAAL,CAAoBF,IAApB,CAAb;;AAEA,UAAKD,OAAM,KAAKzB,SAAhB,EAA4B;AAC3B,eAAO2B,MAAM,CAACE,IAAP,CAAYJ,MAAnB;AACA;;AAEDE,MAAAA,MAAM,CAACE,IAAP,CAAYJ,MAAZ,GAAqBA,OAArB;AAEA,aAAO,IAAP;AACA,KA1B2B;;AA4B5B;;;;;;;AAOAK,IAAAA,MAAM,EAAE,gBAAWJ,IAAX,EAAiBK,IAAjB,EAAwB;AAC/B,UAAIJ,MAAM,GAAG,KAAKC,aAAL,CAAoBF,IAApB,CAAb;;AACA,UAAIM,KAAK,GAAG,KAAKrB,CAAL,CAAOO,GAAP,CAAWS,MAAX,CAAkBG,MAA9B;AACA,UAAIG,MAAM,GAAG3C,CAAC,CAACqC,MAAM,CAACD,IAAR,CAAd;;AAEA,UAAKK,IAAI,KAAK/B,SAAd,EAA0B;AACzB,eAAOiC,MAAM,CAACC,QAAP,CAAiBF,KAAjB,CAAP;AACA;;AAEDC,MAAAA,MAAM,CAACE,WAAP,CAAoBH,KAApB,EAA2BD,IAAI,KAAK/B,SAAT,GAAqB,IAArB,GAA4B+B,IAAvD;AAEA,aAAO,IAAP;AACA,KA/C2B;;AAiD5B;;;;;;AAMAK,IAAAA,GAAG,EAAE,aAAW3B,MAAX,EAAmB4B,GAAnB,EACL;AACC,UAAI/B,OAAO,GAAG,KAAKQ,CAAL,CAAOR,OAArB;;AAEA,UAAK,OAAO+B,GAAP,KAAe,QAApB,EAA+B;AAC9B,YAAIC,KAAK,GAAGD,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAZ;AACA,YAAIC,IAAI,GAAG,KAAKzB,CAAhB;;AAEA,aAAM,IAAI0B,CAAC,GAAC,CAAN,EAASC,GAAG,GAACH,KAAK,CAACI,MAAN,GAAa,CAAhC,EAAoCF,CAAC,GAACC,GAAtC,EAA4CD,CAAC,EAA7C,EAAkD;AACjDD,UAAAA,IAAI,GAAGA,IAAI,CAACjC,OAAL,CAAcgC,KAAK,CAACE,CAAD,CAAL,GAAS,CAAvB,CAAP;AACA;;AAEDlC,QAAAA,OAAO,GAAGiC,IAAI,CAACjC,OAAf;AACA+B,QAAAA,GAAG,GAAGC,KAAK,CAAEA,KAAK,CAACI,MAAN,GAAa,CAAf,CAAL,GAAwB,CAA9B;AACA;;AAED,WAAKC,aAAL,CAAoBrC,OAApB,EAA6BG,MAA7B,EAAqC,KAArC,EAA4C4B,GAA5C;;AACA,WAAKO,KAAL;;AAEA,aAAO,IAAP;AACA,KA3E2B;;AA6E5B;;;;AAIAzB,IAAAA,SAAS,EAAE,qBACX;AACC,aAAO,KAAKD,GAAL,CAASC,SAAhB;AACA,KApF2B;;AAsF5B;;;;;AAKA0B,IAAAA,OAAO,EAAE,iBAAWnB,IAAX,EAAkB;AAC1B,UAAIC,MAAM,GAAG,KAAKC,aAAL,CAAoBF,IAApB,CAAb;;AAEApC,MAAAA,CAAC,CAACqC,MAAM,CAACD,IAAR,CAAD,CAAeL,QAAf,CAAyB,KAAKV,CAAL,CAAOO,GAAP,CAAWS,MAAX,CAAkBmB,QAA3C;AAEA,aAAO,IAAP;AACA,KAjG2B;;AAmG5B;;;;;AAKAC,IAAAA,OAAO,EAAE,mBACT;AACC;AACAzD,MAAAA,CAAC,CAAC,MAAD,CAAD,CAAU0D,GAAV,CAAe,WAAS,KAAKlC,CAAL,CAAOG,SAA/B,EAFD,CAIC;AACA;;AACA,UAAIX,OAAO,GAAG,KAAKQ,CAAL,CAAOR,OAAP,CAAe2C,KAAf,EAAd;AACA,UAAIT,CAAJ,EAAOC,GAAP;;AAEA,WAAMD,CAAC,GAAC,CAAF,EAAKC,GAAG,GAACnC,OAAO,CAACoC,MAAvB,EAAgCF,CAAC,GAACC,GAAlC,EAAwCD,CAAC,EAAzC,EAA8C;AAC7C,aAAKU,MAAL,CAAa5C,OAAO,CAACkC,CAAD,CAAP,CAAWd,IAAxB;AACA,OAXF,CAaC;;;AACA,WAAKR,GAAL,CAASC,SAAT,CAAmB+B,MAAnB,GAdD,CAgBC;;AACA,UAAIC,WAAW,GAAG,KAAKrC,CAAL,CAAON,EAAP,CAAU4C,QAAV,GAAqB,CAArB,CAAlB;;AAEA,WAAMZ,CAAC,GAAC,CAAF,EAAKC,GAAG,GAACU,WAAW,CAACT,MAA3B,EAAoCF,CAAC,GAACC,GAAtC,EAA4CD,CAAC,EAA7C,EAAkD;AACjD,YAAKW,WAAW,CAACE,IAAZ,KAAqB,IAA1B,EAAiC;AAChCF,UAAAA,WAAW,CAACG,MAAZ,CAAoBd,CAApB,EAAuB,CAAvB;AACA;AACA;AACD;;AAED,aAAO,IAAP;AACA,KApI2B;;AAsI5B;;;;;;AAMAe,IAAAA,MAAM,EAAE,gBAAW7B,IAAX,EAAiBK,IAAjB,EACR;AACC,UAAKA,IAAI,KAAK,KAAd,EAAsB;AACrB,eAAO,KAAKc,OAAL,CAAcnB,IAAd,CAAP;AACA;;AAED,UAAIC,MAAM,GAAG,KAAKC,aAAL,CAAoBF,IAApB,CAAb;;AACApC,MAAAA,CAAC,CAACqC,MAAM,CAACD,IAAR,CAAD,CAAe8B,WAAf,CAA4B,KAAK7C,CAAL,CAAOO,GAAP,CAAWS,MAAX,CAAkBmB,QAA9C;AAEA,aAAO,IAAP;AACA,KAtJ2B;;AAwJ5B;;;;AAIAW,IAAAA,IAAI,EAAE,gBACN;AACC,aAAO,KAAK9C,CAAL,CAAO8C,IAAd;AACA,KA/J2B;;AAiK5B;;;;;AAKA/B,IAAAA,IAAI,EAAE,cAAWA,KAAX,EACN;AACC,UAAIC,MAAM,GAAG,KAAKC,aAAL,CAAoBF,KAApB,CAAb;;AACA,aAAOpC,CAAC,CAACqC,MAAM,CAACD,IAAR,CAAR;AACA,KA1K2B;;AA4K5B;;;;;AAKAwB,IAAAA,MAAM,EAAE,gBAAWxB,IAAX,EACR;AACC,UAAIC,MAAM,GAAG,KAAKC,aAAL,CAAoBF,IAApB,CAAb;;AACA,UAAIgC,IAAI,GAAG,KAAKC,WAAL,CAAkBjC,IAAlB,CAAX;;AACA,UAAIlB,EAAE,GAAG,KAAKM,CAAL,CAAON,EAAhB,CAHD,CAKC;;AACA,UAAKmB,MAAM,CAACrB,OAAP,CAAeoC,MAApB,EAA6B;AAC5B,aAAM,IAAIF,CAAC,GAACb,MAAM,CAACrB,OAAP,CAAeoC,MAAf,GAAsB,CAAlC,EAAsCF,CAAC,IAAE,CAAzC,EAA6CA,CAAC,EAA9C,EAAmD;AAClD,eAAKU,MAAL,CAAavB,MAAM,CAACrB,OAAP,CAAekC,CAAf,EAAkBd,IAA/B;AACA;AACD,OAVF,CAYC;;;AACA,UAAKC,MAAM,CAACE,IAAP,CAAYkB,OAAjB,EAA2B;AAC1BpB,QAAAA,MAAM,CAACE,IAAP,CAAYkB,OAAZ,CAAoBa,IAApB,CAA0BpD,EAAE,CAACmB,MAAH,CAAUD,IAAV,CAA1B,EAA2ClB,EAA3C,EAA+ClB,CAAC,CAACoC,IAAD,CAAhD,EAAwDC,MAAM,CAACE,IAA/D;AACA;;AAED,WAAKgC,UAAL,CAAiBlC,MAAM,CAACE,IAAxB;;AAEAvC,MAAAA,CAAC,CAACqC,MAAM,CAACD,IAAR,CAAD,CAAewB,MAAf;AAEA,UAAIb,GAAG,GAAG/C,CAAC,CAACwE,OAAF,CAAWnC,MAAX,EAAmB+B,IAAnB,CAAV;AACAA,MAAAA,IAAI,CAACJ,MAAL,CAAajB,GAAb,EAAkB,CAAlB;AAEA,aAAO,IAAP;AACA,KA3M2B;;AA6M5B;;;;;;AAIG;;;;;;AAMH0B,IAAAA,IAAI,EAAE,cAAWrC,IAAX,EAAiBsC,KAAjB,EACN;AACC,UAAIrC,MAAM,GAAG,KAAKC,aAAL,CAAoBF,IAApB,CAAb;;AACA,UAAIuC,WAAW,GAAG,KAAKtD,CAAL,CAAOO,GAAP,CAAWgD,UAAX,CAAsBD,WAAxC;AACA,UAAIE,QAAQ,GAAGxC,MAAM,CAACyC,YAAP,IAAuBH,WAAvB,IAAsCA,WAAW,CAAC7C,GAAlD,GACd6C,WAAW,CAAC7C,GADE,GAEd,KAAKT,CAAL,CAAOO,GAAP,CAAW+C,WAAX,CAAuB7C,GAFxB;AAGA,UAAIZ,EAAE,GAAG,KAAKM,CAAL,CAAON,EAAhB;AACA,UAAIyB,MAAM,GAAG3C,CAAC,CAACqC,MAAM,CAACD,IAAR,CAAd;;AACA,UAAIqC,IAAI,GAAG,SAAPA,IAAO,CAAWM,GAAX,EAAiB;AAC3B,eAAO,OAAOA,GAAP,KAAe,UAAf,GACNA,GAAG,CAAE7D,EAAF,EAAMyB,MAAN,EAAcN,MAAM,CAACE,IAArB,CADG,GAENwC,GAFD;AAGA,OAJD;;AAMA,UAAKL,KAAK,KAAKhE,SAAf,EAA2B;AAC1B,eAAO+D,IAAI,CAAEpC,MAAM,CAACE,IAAP,CAAYkC,IAAd,CAAX;AACA;;AAEDpC,MAAAA,MAAM,CAACE,IAAP,CAAYkC,IAAZ,GAAmBC,KAAnB;;AAEA,UAAKG,QAAL,EAAgB;AACflC,QAAAA,MAAM,CAACqC,QAAP,CAAiBH,QAAjB,EAA4BI,IAA5B,CAAkCR,IAAI,CAACC,KAAD,CAAtC;AACA,OAFD,MAGK;AACJ/B,QAAAA,MAAM,CAACsC,IAAP,CAAaR,IAAI,CAACC,KAAD,CAAjB;AACA;;AAED,aAAO,IAAP;AACA,KApP2B;;AAuP5B;;;;AAIA;;;;AAIAzC,IAAAA,YAAY,EAAE,wBACd;AACC,UAAIiD,IAAI,GAAG,IAAX;AACA,UAAIhE,EAAE,GAAG,KAAKM,CAAL,CAAON,EAAhB;AACA,UAAIiE,UAAU,GAAGjE,EAAE,CAAC4C,QAAH,GAAc,CAAd,CAAjB;AACA,UAAI9C,OAAO,GAAI,KAAKK,CAAL,CAAOL,OAAtB;;AAEA,UAAK,CAAEmE,UAAU,CAACC,QAAlB,EAA6B;AAC5BD,QAAAA,UAAU,CAACC,QAAX,GAAsB,EAAtB;AACA;;AAEDD,MAAAA,UAAU,CAACC,QAAX,CAAoBC,IAApB,CAA0B;AACzBtB,QAAAA,IAAI,EAAE,IADmB;AAEzBI,QAAAA,IAAI,EAAE,KAAK9C,CAAL,CAAO8C;AAFY,OAA1B;;AAKA,WAAM,IAAIjB,CAAC,GAAC,CAAN,EAASC,GAAG,GAACnC,OAAO,CAACoC,MAA3B,EAAoCF,CAAC,GAACC,GAAtC,EAA4CD,CAAC,EAA7C,EAAkD;AACjD,aAAKJ,GAAL,CAAU9B,OAAO,CAACkC,CAAD,CAAjB;AACA;;AAEDhC,MAAAA,EAAE,CAACoE,EAAH,CAAO,SAAP,EAAkB,YAAY;AAC7BJ,QAAAA,IAAI,CAACzB,OAAL;AACA,OAFD,EAnBD,CAuBC;;AACAzD,MAAAA,CAAC,CAAC,MAAD,CAAD,CAAUsF,EAAV,CAAc,WAAS,KAAK9D,CAAL,CAAOG,SAA9B,EAAyC,UAAW4D,CAAX,EAAe;AACvD,YAAK,CAAErF,QAAQ,CAACsF,aAAX,IAA4BtF,QAAQ,CAACsF,aAAT,KAA2BtF,QAAQ,CAACuF,IAArE,EAA4E;AAC3E;AACA;AACA,cAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBL,CAAC,CAACM,OAAtB,EAA+BC,WAA/B,EAAhB;;AAEA,cAAKZ,IAAI,CAAC1D,CAAL,CAAOE,UAAP,CAAkBoE,WAAlB,GAAgCC,OAAhC,CAAyCL,SAAzC,MAAyD,CAAC,CAA/D,EAAmE;AAClER,YAAAA,IAAI,CAACc,SAAL,CAAgBN,SAAhB,EAA2BH,CAA3B;AACA;AACD;AACD,OAVD;AAWA,KAnS2B;;AAsS5B;;;;AAIA;;;;;AAKAU,IAAAA,OAAO,EAAE,iBAAW1D,IAAX,EACT;AACC,UAAKA,IAAI,CAAC2D,GAAV,EAAgB;AACf,aAAK1E,CAAL,CAAOE,UAAP,IAAqB1B,CAAC,CAACmG,aAAF,CAAiB5D,IAAI,CAAC2D,GAAtB,IACpB3D,IAAI,CAAC2D,GAAL,CAASA,GADW,GAEpB3D,IAAI,CAAC2D,GAFN;AAGA;AACD,KAtT2B;;AAwT5B;;;;;;AAMA5C,IAAAA,KAAK,EAAE,eAAWzB,SAAX,EAAsBb,OAAtB,EACP;AACC,UAAK,CAAEa,SAAP,EAAmB;AAClBA,QAAAA,SAAS,GAAG,KAAKD,GAAL,CAASC,SAArB;AACAb,QAAAA,OAAO,GAAG,KAAKQ,CAAL,CAAOR,OAAjB;AACA;;AAEDa,MAAAA,SAAS,CAACmD,QAAV,GAAqBoB,MAArB;;AAEA,WAAM,IAAIlD,CAAC,GAAC,CAAN,EAASC,GAAG,GAACnC,OAAO,CAACoC,MAA3B,EAAoCF,CAAC,GAACC,GAAtC,EAA4CD,CAAC,EAA7C,EAAkD;AACjDrB,QAAAA,SAAS,CAACwE,MAAV,CAAkBrF,OAAO,CAACkC,CAAD,CAAP,CAAWoD,QAA7B;;AAEA,YAAKtF,OAAO,CAACkC,CAAD,CAAP,CAAWlC,OAAX,IAAsBA,OAAO,CAACkC,CAAD,CAAP,CAAWlC,OAAX,CAAmBoC,MAA9C,EAAuD;AACtD,eAAKE,KAAL,CAAYtC,OAAO,CAACkC,CAAD,CAAP,CAAW0B,UAAvB,EAAmC5D,OAAO,CAACkC,CAAD,CAAP,CAAWlC,OAA9C;AACA;AACD;AACD,KA9U2B;;AAgV5B;;;;;;;AAOAqC,IAAAA,aAAa,EAAE,uBAAWkD,QAAX,EAAqBlE,MAArB,EAA6ByC,YAA7B,EAA2C0B,WAA3C,EACf;AACC,UAAItF,EAAE,GAAG,KAAKM,CAAL,CAAON,EAAhB;AACA,UAAIuF,aAAa,GAAG,CAApB;AACA,UAAIzF,OAAO,GAAG,CAAEhB,CAAC,CAACoB,OAAF,CAAWiB,MAAX,CAAF,GACb,CAAEA,MAAF,CADa,GAEbA,MAFD;;AAIA,WAAM,IAAIa,CAAC,GAAC,CAAN,EAASC,GAAG,GAACnC,OAAO,CAACoC,MAA3B,EAAoCF,CAAC,GAACC,GAAtC,EAA4CD,CAAC,EAA7C,EAAkD;AACjD,YAAIX,IAAI,GAAG,KAAKmE,eAAL,CAAsB1F,OAAO,CAACkC,CAAD,CAA7B,CAAX;;AAEA,YAAK,CAAEX,IAAP,EAAc;AACb;AACA,SALgD,CAOjD;AACA;;;AACA,YAAKvC,CAAC,CAACoB,OAAF,CAAWmB,IAAX,CAAL,EAAyB;AACxB,eAAKc,aAAL,CAAoBkD,QAApB,EAA8BhE,IAA9B,EAAoCuC,YAApC,EAAkD0B,WAAlD;;AACA;AACA;;AAED,YAAIG,KAAK,GAAG,KAAKC,YAAL,CAAmBrE,IAAnB,EAAyBuC,YAAzB,CAAZ;;AACA,YAAK,CAAE6B,KAAP,EAAe;AACd;AACA;;AAED,YAAKH,WAAW,KAAK9F,SAArB,EAAiC;AAChC6F,UAAAA,QAAQ,CAACvC,MAAT,CAAiBwC,WAAjB,EAA8B,CAA9B,EAAiCG,KAAjC;AACAH,UAAAA,WAAW;AACX,SAHD,MAIK;AACJD,UAAAA,QAAQ,CAAClB,IAAT,CAAesB,KAAf;AACA;;AAED,YAAKA,KAAK,CAACpE,IAAN,CAAWvB,OAAhB,EAA0B;AACzB,cAAI6F,aAAa,GAAG,KAAKxF,CAAL,CAAOO,GAAP,CAAWgD,UAA/B;AACA+B,UAAAA,KAAK,CAAC/B,UAAN,GAAmB5E,CAAC,CAAC,MAAI6G,aAAa,CAAC/E,GAAlB,GAAsB,IAAvB,CAAD,CACjBC,QADiB,CACP8E,aAAa,CAAC7E,SADP,CAAnB;AAEA2E,UAAAA,KAAK,CAACpE,IAAN,CAAWuE,WAAX,GAAyBH,KAAK,CAAC/B,UAA/B;;AAEA,eAAKvB,aAAL,CAAoBsD,KAAK,CAAC3F,OAA1B,EAAmC2F,KAAK,CAACpE,IAAN,CAAWvB,OAA9C,EAAuD,IAAvD,EAA6DwF,WAA7D;AACA,SAlCgD,CAoCjD;AACA;;;AACA,YAAKjE,IAAI,CAACwE,IAAV,EAAiB;AAChBxE,UAAAA,IAAI,CAACwE,IAAL,CAAUzC,IAAV,CAAgBpD,EAAE,CAACmB,MAAH,CAAWsE,KAAK,CAACvE,IAAjB,CAAhB,EAAyClB,EAAzC,EAA6ClB,CAAC,CAAC2G,KAAK,CAACvE,IAAP,CAA9C,EAA4DG,IAA5D;AACA;;AAEDkE,QAAAA,aAAa;AACb;AACD,KA3Y2B;;AA6Y5B;;;;;;;AAOAG,IAAAA,YAAY,EAAE,sBAAWzF,MAAX,EAAmB2D,YAAnB,EACd;AACC,UAAIkC,SAAS,GAAG,KAAK3F,CAAL,CAAOO,GAAP,CAAWS,MAA3B;AACA,UAAI4E,QAAQ,GAAG,KAAK5F,CAAL,CAAOO,GAAP,CAAW+C,WAA1B;AACA,UAAIkC,aAAa,GAAG,KAAKxF,CAAL,CAAOO,GAAP,CAAWgD,UAA/B;AACA,UAAI1D,EAAE,GAAG,KAAKM,CAAL,CAAON,EAAhB;;AACA,UAAIuD,IAAI,GAAG,SAAPA,IAAO,CAAWM,GAAX,EAAiB;AAC3B,eAAO,OAAOA,GAAP,KAAe,UAAf,GACNA,GAAG,CAAE7D,EAAF,EAAMmB,MAAN,EAAclB,MAAd,CADG,GAEN4D,GAFD;AAGA,OAJD;;AAMA,UAAKD,YAAY,IAAI+B,aAAa,CAACxE,MAAnC,EAA4C;AAC3C2E,QAAAA,SAAS,GAAGH,aAAa,CAACxE,MAA1B;AACA;;AAED,UAAKyC,YAAY,IAAI+B,aAAa,CAAClC,WAAnC,EAAiD;AAChDsC,QAAAA,QAAQ,GAAGJ,aAAa,CAAClC,WAAzB;AACA,OAjBF,CAmBC;AACA;;;AACA,UAAKxD,MAAM,CAAC+F,SAAP,IAAoB,CAAE/F,MAAM,CAAC+F,SAAP,CAAkBhG,EAAlB,EAAsBC,MAAtB,CAA3B,EAA4D;AAC3D,eAAO,KAAP;AACA;;AAED,UAAIgB,MAAM,GAAG,SAATA,MAAS,CAAWoD,CAAX,EAAcrE,EAAd,EAAkBmB,MAAlB,EAA0BlB,MAA1B,EAAmC;AAC/CA,QAAAA,MAAM,CAACgB,MAAP,CAAcmC,IAAd,CAAoBpD,EAAE,CAACmB,MAAH,CAAWA,MAAX,CAApB,EAAyCkD,CAAzC,EAA4CrE,EAA5C,EAAgDmB,MAAhD,EAAwDlB,MAAxD;AAEAnB,QAAAA,CAAC,CAACkB,EAAE,CAACiG,KAAH,GAAW/E,IAAX,EAAD,CAAD,CAAqBgF,cAArB,CAAqC,mBAArC,EAA0D,CACzDlG,EAAE,CAACmB,MAAH,CAAWA,MAAX,CADyD,EACpCnB,EADoC,EAChCmB,MADgC,EACxBlB,MADwB,CAA1D;AAGA,OAND;;AAQA,UAAIkB,MAAM,GAAGrC,CAAC,CAAC,MAAIgH,SAAS,CAAClF,GAAd,GAAkB,IAAnB,CAAD,CACXC,QADW,CACDiF,SAAS,CAAChF,SADT,EAEXqF,IAFW,CAEL,UAFK,EAEO,KAAK7F,CAAL,CAAON,EAAP,CAAU4C,QAAV,GAAqB,CAArB,EAAwBwD,SAF/B,EAGXD,IAHW,CAGL,eAHK,EAGY,KAAK7F,CAAL,CAAON,EAAP,CAAUiG,KAAV,GAAkB/E,IAAlB,GAAyBmF,EAHrC,EAIXjC,EAJW,CAIP,WAJO,EAIM,UAAUC,CAAV,EAAa;AAC9BA,QAAAA,CAAC,CAACiC,cAAF;;AAEA,YAAK,CAAEnF,MAAM,CAACO,QAAP,CAAiBoE,SAAS,CAACxD,QAA3B,CAAF,IAA2CrC,MAAM,CAACgB,MAAvD,EAAgE;AAC/DA,UAAAA,MAAM,CAAEoD,CAAF,EAAKrE,EAAL,EAASmB,MAAT,EAAiBlB,MAAjB,CAAN;AACA;;AAEDkB,QAAAA,MAAM,CAACoF,IAAP;AACA,OAZW,EAaXnC,EAbW,CAaP,WAbO,EAaM,UAAUC,CAAV,EAAa;AAC9B,YAAKA,CAAC,CAACM,OAAF,KAAc,EAAnB,EAAwB;AACvB,cAAK,CAAExD,MAAM,CAACO,QAAP,CAAiBoE,SAAS,CAACxD,QAA3B,CAAF,IAA2CrC,MAAM,CAACgB,MAAvD,EAAgE;AAC/DA,YAAAA,MAAM,CAAEoD,CAAF,EAAKrE,EAAL,EAASmB,MAAT,EAAiBlB,MAAjB,CAAN;AACA;AACD;AACD,OAnBW,CAAb,CAjCD,CAsDC;;AACA,UAAK6F,SAAS,CAAClF,GAAV,CAAcgE,WAAd,OAAgC,GAArC,EAA2C;AAC1CzD,QAAAA,MAAM,CAACgF,IAAP,CAAa,MAAb,EAAqB,GAArB;AACA;;AAED,UAAKJ,QAAQ,CAACnF,GAAd,EAAoB;AACnB,YAAI4F,KAAK,GAAG1H,CAAC,CAAC,MAAIiH,QAAQ,CAACnF,GAAb,GAAiB,IAAlB,CAAD,CACVmD,IADU,CACJR,IAAI,CAAEtD,MAAM,CAACsD,IAAT,CADA,EAEV1C,QAFU,CAEAkF,QAAQ,CAACjF,SAFT,CAAZ;;AAIA,YAAKiF,QAAQ,CAACnF,GAAT,CAAagE,WAAb,OAA+B,GAApC,EAA0C;AACzC4B,UAAAA,KAAK,CAACL,IAAN,CAAY,MAAZ,EAAoB,GAApB;AACA;;AAEDhF,QAAAA,MAAM,CAACgE,MAAP,CAAeqB,KAAf;AACA,OAVD,MAWK;AACJrF,QAAAA,MAAM,CAAC4C,IAAP,CAAaR,IAAI,CAAEtD,MAAM,CAACsD,IAAT,CAAjB;AACA;;AAED,UAAKtD,MAAM,CAACwG,OAAP,KAAmB,KAAxB,EAAgC;AAC/BtF,QAAAA,MAAM,CAACN,QAAP,CAAiBiF,SAAS,CAACxD,QAA3B;AACA;;AAED,UAAKrC,MAAM,CAACa,SAAZ,EAAwB;AACvBK,QAAAA,MAAM,CAACN,QAAP,CAAiBZ,MAAM,CAACa,SAAxB;AACA;;AAED,UAAKb,MAAM,CAACyG,SAAZ,EAAwB;AACvBvF,QAAAA,MAAM,CAACgF,IAAP,CAAa,OAAb,EAAsBlG,MAAM,CAACyG,SAA7B;AACA;;AAED,UAAK,CAAEzG,MAAM,CAACQ,SAAd,EAA0B;AACzBR,QAAAA,MAAM,CAACQ,SAAP,GAAmB,gBAAed,cAAc,EAAhD;AACA;;AAED,UAAIgH,eAAe,GAAG,KAAKxG,CAAL,CAAOO,GAAP,CAAWiG,eAAjC;AACA,UAAIvB,QAAJ;;AACA,UAAKuB,eAAe,IAAIA,eAAe,CAAC/F,GAAxC,EAA8C;AAC7CwE,QAAAA,QAAQ,GAAGtG,CAAC,CAAC,MAAI6H,eAAe,CAAC/F,GAApB,GAAwB,IAAzB,CAAD,CACTC,QADS,CACC8F,eAAe,CAAC7F,SADjB,EAETqE,MAFS,CAEDhE,MAFC,CAAX;AAGA,OAJD,MAKK;AACJiE,QAAAA,QAAQ,GAAGjE,MAAX;AACA;;AAED,WAAK4D,OAAL,CAAc9E,MAAd;;AAEA,aAAO;AACNoB,QAAAA,IAAI,EAAUpB,MADR;AAENiB,QAAAA,IAAI,EAAUC,MAAM,CAACyF,GAAP,CAAW,CAAX,CAFR;AAGNxB,QAAAA,QAAQ,EAAMA,QAHR;AAINtF,QAAAA,OAAO,EAAO,EAJR;AAKN8D,QAAAA,YAAY,EAAEA,YALR;AAMNF,QAAAA,UAAU,EAAI;AANR,OAAP;AAQA,KApgB2B;;AAsgB5B;;;;;;;AAOAtC,IAAAA,aAAa,EAAE,uBAAWF,IAAX,EAAiBpB,OAAjB,EACf;AACC,UAAK,CAAEA,OAAP,EAAiB;AAChBA,QAAAA,OAAO,GAAG,KAAKQ,CAAL,CAAOR,OAAjB;AACA;;AAED,WAAM,IAAIkC,CAAC,GAAC,CAAN,EAASC,GAAG,GAACnC,OAAO,CAACoC,MAA3B,EAAoCF,CAAC,GAACC,GAAtC,EAA4CD,CAAC,EAA7C,EAAkD;AACjD,YAAKlC,OAAO,CAACkC,CAAD,CAAP,CAAWd,IAAX,KAAoBA,IAAzB,EAAgC;AAC/B,iBAAOpB,OAAO,CAACkC,CAAD,CAAd;AACA;;AAED,YAAKlC,OAAO,CAACkC,CAAD,CAAP,CAAWlC,OAAX,CAAmBoC,MAAxB,EAAiC;AAChC,cAAI2E,GAAG,GAAG,KAAKzF,aAAL,CAAoBF,IAApB,EAA0BpB,OAAO,CAACkC,CAAD,CAAP,CAAWlC,OAArC,CAAV;;AAEA,cAAK+G,GAAL,EAAW;AACV,mBAAOA,GAAP;AACA;AACD;AACD;AACD,KAhiB2B;;AAkiB5B;;;;;;;AAOA1D,IAAAA,WAAW,EAAE,qBAAWjC,IAAX,EAAiBpB,OAAjB,EACb;AACC,UAAK,CAAEA,OAAP,EAAiB;AAChBA,QAAAA,OAAO,GAAG,KAAKQ,CAAL,CAAOR,OAAjB;AACA;;AAED,WAAM,IAAIkC,CAAC,GAAC,CAAN,EAASC,GAAG,GAACnC,OAAO,CAACoC,MAA3B,EAAoCF,CAAC,GAACC,GAAtC,EAA4CD,CAAC,EAA7C,EAAkD;AACjD,YAAKlC,OAAO,CAACkC,CAAD,CAAP,CAAWd,IAAX,KAAoBA,IAAzB,EAAgC;AAC/B,iBAAOpB,OAAP;AACA;;AAED,YAAKA,OAAO,CAACkC,CAAD,CAAP,CAAWlC,OAAX,CAAmBoC,MAAxB,EAAiC;AAChC,cAAI2E,GAAG,GAAG,KAAK1D,WAAL,CAAkBjC,IAAlB,EAAwBpB,OAAO,CAACkC,CAAD,CAAP,CAAWlC,OAAnC,CAAV;;AAEA,cAAK+G,GAAL,EAAW;AACV,mBAAOA,GAAP;AACA;AACD;AACD;AACD,KA5jB2B;;AA8jB5B;;;;;;;AAOA/B,IAAAA,SAAS,EAAE,mBAAWN,SAAX,EAAsBH,CAAtB,EACX;AACC,UAAIyC,GAAG,GAAG,SAANA,GAAM,CAAWzF,IAAX,EAAiBH,IAAjB,EAAwB;AACjC,YAAK,CAAEG,IAAI,CAAC2D,GAAZ,EAAkB;AACjB;AACA;;AAED,YAAK3D,IAAI,CAAC2D,GAAL,KAAaR,SAAlB,EAA8B;AAC7B1F,UAAAA,CAAC,CAACoC,IAAD,CAAD,CAAQ6F,KAAR;AACA,SAFD,MAGK,IAAKjI,CAAC,CAACmG,aAAF,CAAiB5D,IAAI,CAAC2D,GAAtB,CAAL,EAAmC;AACvC,cAAK3D,IAAI,CAAC2D,GAAL,CAASA,GAAT,KAAiBR,SAAtB,EAAkC;AACjC;AACA;;AAED,cAAKnD,IAAI,CAAC2D,GAAL,CAASgC,QAAT,IAAqB,CAAE3C,CAAC,CAAC2C,QAA9B,EAAyC;AACxC;AACA;;AAED,cAAK3F,IAAI,CAAC2D,GAAL,CAASiC,MAAT,IAAmB,CAAE5C,CAAC,CAAC4C,MAA5B,EAAqC;AACpC;AACA;;AAED,cAAK5F,IAAI,CAAC2D,GAAL,CAASkC,OAAT,IAAoB,CAAE7C,CAAC,CAAC6C,OAA7B,EAAuC;AACtC;AACA;;AAED,cAAK7F,IAAI,CAAC2D,GAAL,CAASmC,OAAT,IAAoB,CAAE9C,CAAC,CAAC8C,OAA7B,EAAuC;AACtC;AACA,WAnBsC,CAqBvC;;;AACArI,UAAAA,CAAC,CAACoC,IAAD,CAAD,CAAQ6F,KAAR;AACA;AACD,OAhCD;;AAkCA,UAAIK,OAAO,GAAG,SAAVA,OAAU,CAAWC,CAAX,EAAe;AAC5B,aAAM,IAAIrF,CAAC,GAAC,CAAN,EAASC,GAAG,GAACoF,CAAC,CAACnF,MAArB,EAA8BF,CAAC,GAACC,GAAhC,EAAsCD,CAAC,EAAvC,EAA4C;AAC3C8E,UAAAA,GAAG,CAAEO,CAAC,CAACrF,CAAD,CAAD,CAAKX,IAAP,EAAagG,CAAC,CAACrF,CAAD,CAAD,CAAKd,IAAlB,CAAH;;AAEA,cAAKmG,CAAC,CAACrF,CAAD,CAAD,CAAKlC,OAAL,CAAaoC,MAAlB,EAA2B;AAC1BkF,YAAAA,OAAO,CAAEC,CAAC,CAACrF,CAAD,CAAD,CAAKlC,OAAP,CAAP;AACA;AACD;AACD,OARD;;AAUAsH,MAAAA,OAAO,CAAE,KAAK9G,CAAL,CAAOR,OAAT,CAAP;AACA,KApnB2B;;AAsnB5B;;;;;;AAMAuD,IAAAA,UAAU,EAAE,oBAAWhC,IAAX,EACZ;AACC,UAAKA,IAAI,CAAC2D,GAAV,EAAgB;AACf,YAAIR,SAAS,GAAG1F,CAAC,CAACmG,aAAF,CAAiB5D,IAAI,CAAC2D,GAAtB,IACf3D,IAAI,CAAC2D,GAAL,CAASA,GADM,GAEf3D,IAAI,CAAC2D,GAFN,CADe,CAKf;AACA;;AACA,YAAIqC,CAAC,GAAG,KAAK/G,CAAL,CAAOE,UAAP,CAAkBsB,KAAlB,CAAwB,EAAxB,CAAR;AACA,YAAID,GAAG,GAAG/C,CAAC,CAACwE,OAAF,CAAWkB,SAAX,EAAsB6C,CAAtB,CAAV;AACAA,QAAAA,CAAC,CAACvE,MAAF,CAAUjB,GAAV,EAAe,CAAf;AACA,aAAKvB,CAAL,CAAOE,UAAP,GAAoB6G,CAAC,CAACC,IAAF,CAAO,EAAP,CAApB;AACA;AACD,KA1oB2B;;AA4oB5B;;;;;;AAMA9B,IAAAA,eAAe,EAAE,yBAAWnE,IAAX,EACjB;AACC,UAAIrB,EAAE,GAAG,KAAKM,CAAL,CAAON,EAAhB;AACA,UAAIgC,CAAJ,EAAOC,GAAP;;AACA,UAAIsF,YAAY,GAAG,SAAfA,YAAe,CAAWxF,IAAX,EAAkB;AACpC,YAAIyF,IAAI,GAAG,CAAX,CADoC,CAGpC;AACA;AACA;;AACA,eAAQ,CAAE1I,CAAC,CAACmG,aAAF,CAAgBlD,IAAhB,CAAF,IAA2B,CAAEjD,CAAC,CAACoB,OAAF,CAAU6B,IAAV,CAArC,EAAuD;AACtD,cAAKA,IAAI,KAAKvC,SAAd,EAA0B;AACzB;AACA;;AAED,cAAK,OAAOuC,IAAP,KAAgB,UAArB,EAAkC;AACjCA,YAAAA,IAAI,GAAGA,IAAI,CAAE/B,EAAF,EAAMqB,IAAN,CAAX;;AAEA,gBAAK,CAAEU,IAAP,EAAc;AACb,qBAAO,KAAP;AACA;AACD,WAND,MAOK,IAAK,OAAOA,IAAP,KAAgB,QAArB,EAAgC;AACpC,gBAAK,CAAEnC,UAAU,CAAEmC,IAAF,CAAjB,EAA4B;AAC3B,oBAAM,0BAAwBA,IAA9B;AACA;;AAEDA,YAAAA,IAAI,GAAGnC,UAAU,CAAEmC,IAAF,CAAjB;AACA;;AAEDyF,UAAAA,IAAI;;AACJ,cAAKA,IAAI,GAAG,EAAZ,EAAiB;AAChB;AACA,kBAAM,8BAAN;AACA;AACD;;AAED,eAAO1I,CAAC,CAACoB,OAAF,CAAW6B,IAAX,IACNA,IADM,GAENjD,CAAC,CAACsB,MAAF,CAAU,EAAV,EAAc2B,IAAd,CAFD;AAGA,OApCD;;AAsCAV,MAAAA,IAAI,GAAGkG,YAAY,CAAElG,IAAF,CAAnB;;AAEA,aAAQA,IAAI,IAAIA,IAAI,CAACjB,MAArB,EAA8B;AAC7B;AACA;AACA,YAAK,CAAER,UAAU,CAAEyB,IAAI,CAACjB,MAAP,CAAjB,EAAmC;AAClC,gBAAM,wCAAsCiB,IAAI,CAACjB,MAAjD;AACA;;AAED,YAAIqH,QAAQ,GAAGF,YAAY,CAAE3H,UAAU,CAAEyB,IAAI,CAACjB,MAAP,CAAZ,CAA3B;;AACA,YAAKtB,CAAC,CAACoB,OAAF,CAAWuH,QAAX,CAAL,EAA6B;AAC5B,iBAAOA,QAAP;AACA,SAFD,MAGK,IAAK,CAAEA,QAAP,EAAkB;AACtB;AACA;AACA;AACA,iBAAO,KAAP;AACA,SAhB4B,CAkB7B;;;AACA,YAAIC,iBAAiB,GAAGD,QAAQ,CAAC3G,SAAjC;AAEAO,QAAAA,IAAI,GAAGvC,CAAC,CAACsB,MAAF,CAAU,EAAV,EAAcqH,QAAd,EAAwBpG,IAAxB,CAAP,CArB6B,CAuB7B;AACA;AACA;;AACA,YAAKqG,iBAAiB,IAAIrG,IAAI,CAACP,SAAL,KAAmB4G,iBAA7C,EAAiE;AAChErG,UAAAA,IAAI,CAACP,SAAL,GAAiB4G,iBAAiB,GAAC,GAAlB,GAAsBrG,IAAI,CAACP,SAA5C;AACA,SA5B4B,CA8B7B;AACA;;;AACA,YAAI6G,cAAc,GAAGtG,IAAI,CAACsG,cAA1B;;AACA,YAAKA,cAAL,EAAsB;AACrB,cAAK,CAAEtG,IAAI,CAACvB,OAAZ,EAAsB;AACrBuB,YAAAA,IAAI,CAACvB,OAAL,GAAe,EAAf;AACA;;AAED,eAAMkC,CAAC,GAAC,CAAF,EAAKC,GAAG,GAAC0F,cAAc,CAACzF,MAA9B,EAAuCF,CAAC,GAACC,GAAzC,EAA+CD,CAAC,EAAhD,EAAqD;AACpDX,YAAAA,IAAI,CAACvB,OAAL,CAAaqE,IAAb,CAAmBwD,cAAc,CAAC3F,CAAD,CAAjC;AACA;;AAEDX,UAAAA,IAAI,CAACsG,cAAL,GAAsB,IAAtB;AACA;;AAED,YAAIC,aAAa,GAAGvG,IAAI,CAACuG,aAAzB;;AACA,YAAKA,aAAL,EAAqB;AACpB,cAAK,CAAEvG,IAAI,CAACvB,OAAZ,EAAsB;AACrBuB,YAAAA,IAAI,CAACvB,OAAL,GAAe,EAAf;AACA;;AAED,eAAMkC,CAAC,GAAC,CAAF,EAAKC,GAAG,GAAC2F,aAAa,CAAC1F,MAA7B,EAAsCF,CAAC,GAACC,GAAxC,EAA8CD,CAAC,EAA/C,EAAoD;AACnDX,YAAAA,IAAI,CAACvB,OAAL,CAAagD,MAAb,CAAqBd,CAArB,EAAwB,CAAxB,EAA2B4F,aAAa,CAAC5F,CAAD,CAAxC;AACA;;AAEDX,UAAAA,IAAI,CAACuG,aAAL,GAAqB,IAArB;AACA,SAxD4B,CA0D7B;AACA;AACA;;;AACAvG,QAAAA,IAAI,CAACjB,MAAL,GAAcqH,QAAQ,CAACrH,MAAvB;AACA;;AAED,aAAOiB,IAAP;AACA;AA/vB2B,GAA7B;AAowBA;;;;AAIA;;;;;;;;AAOAtB,EAAAA,OAAO,CAAC8H,UAAR,GAAqB,UAAWC,IAAX,EAAiBhH,SAAjB,EAA4BiH,IAA5B,EAAmC;AACvD,QAAKA,IAAI,KAAKvI,SAAd,EAA0B;AACzBuI,MAAAA,IAAI,GAAG,GAAP;AACA;;AAED,QAAKD,IAAL,EAAY;AACXhJ,MAAAA,CAAC,CAAC,QAAD,CAAD,CACE+B,QADF,CACYC,SADZ,EAEEkH,GAFF,CAEO,SAFP,EAEkB,MAFlB,EAGEC,QAHF,CAGY,MAHZ,EAIEC,MAJF,CAIUH,IAJV;AAKA,KAND,MAOK;AACJjJ,MAAAA,CAAC,CAAC,gBAAcgC,SAAf,CAAD,CACEqH,OADF,CACWJ,IADX,EACiB,YAAY;AAC3BjJ,QAAAA,CAAC,CAAC,IAAD,CAAD,CACEkE,WADF,CACelC,SADf,EAEE4B,MAFF;AAGA,OALF;AAMA;AACD,GApBD;AAsBA;;;;;;;;;;;;;AAWA3C,EAAAA,OAAO,CAACqI,gBAAR,GAA2B,UAAWC,KAAX,EAAkBvI,OAAlB,EAC3B;AACC,QAAK,CAAEuI,KAAP,EAAe;AACd,aAAOvJ,CAAC,CAACwJ,GAAF,CAAOxI,OAAP,EAAgB,UAAWyI,CAAX,EAAe;AACrC,eAAOA,CAAC,CAAC1F,IAAT;AACA,OAFM,CAAP;AAGA;;AAED,QAAIgE,GAAG,GAAG,EAAV;AACA,QAAI2B,KAAK,GAAG1J,CAAC,CAACwJ,GAAF,CAAOxI,OAAP,EAAgB,UAAWyI,CAAX,EAAe;AAC1C,aAAOA,CAAC,CAACtF,IAAT;AACA,KAFW,CAAZ,CARD,CAYC;;AACA,QAAIwF,OAAO,GAAG,SAAVA,OAAU,CAAWC,KAAX,EAAmB;AAChC,UAAK5J,CAAC,CAACoB,OAAF,CAAWwI,KAAX,CAAL,EAA0B;AACzB,aAAM,IAAI1G,CAAC,GAAC,CAAN,EAASC,GAAG,GAACyG,KAAK,CAACxG,MAAzB,EAAkCF,CAAC,GAACC,GAApC,EAA0CD,CAAC,EAA3C,EAAgD;AAC/CyG,UAAAA,OAAO,CAAEC,KAAK,CAAC1G,CAAD,CAAP,CAAP;AACA;;AACD;AACA;;AAED,UAAK,OAAO0G,KAAP,KAAiB,QAAtB,EAAiC;AAChC,YAAKA,KAAK,CAAC7D,OAAN,CAAe,GAAf,MAAyB,CAAC,CAA/B,EAAmC;AAClC;AACA4D,UAAAA,OAAO,CAAEC,KAAK,CAAC5G,KAAN,CAAY,GAAZ,CAAF,CAAP;AACA,SAHD,MAIK;AACJ;AACA,cAAID,GAAG,GAAG/C,CAAC,CAACwE,OAAF,CAAWxE,CAAC,CAAC6J,IAAF,CAAOD,KAAP,CAAX,EAA0BF,KAA1B,CAAV;;AAEA,cAAK3G,GAAG,KAAK,CAAC,CAAd,EAAkB;AACjBgF,YAAAA,GAAG,CAAC1C,IAAJ,CAAUrE,OAAO,CAAE+B,GAAF,CAAP,CAAegB,IAAzB;AACA;AACD;AACD,OAbD,MAcK,IAAK,OAAO6F,KAAP,KAAiB,QAAtB,EAAiC;AACrC;AACA7B,QAAAA,GAAG,CAAC1C,IAAJ,CAAUrE,OAAO,CAAE4I,KAAF,CAAP,CAAiB7F,IAA3B;AACA;AACD,KA1BD;;AA4BA4F,IAAAA,OAAO,CAAEJ,KAAF,CAAP;AAEA,WAAOxB,GAAP;AACA,GA7CD;AA+CA;;;;;;;;;;;;AAUA9G,EAAAA,OAAO,CAAC6I,cAAR,GAAyB,UAAWC,KAAX,EAAkBC,QAAlB,EACzB;AACC,QAAIjC,GAAG,GAAG,EAAV;;AACA,QAAIkC,WAAW,GAAG,SAAdA,WAAc,CAAW1B,CAAX,EAAcvH,OAAd,EAAuBkJ,OAAvB,EAAiC;AAClD,UAAI7H,MAAJ;AACA,UAAIU,GAAJ;;AAEA,WAAM,IAAIG,CAAC,GAAC,CAAN,EAASC,GAAG,GAACnC,OAAO,CAACoC,MAA3B,EAAoCF,CAAC,GAACC,GAAtC,EAA4CD,CAAC,EAA7C,EAAkD;AACjDb,QAAAA,MAAM,GAAGrB,OAAO,CAACkC,CAAD,CAAhB;;AAEA,YAAKb,MAAL,EAAc;AACbU,UAAAA,GAAG,GAAGmH,OAAO,KAAKxJ,SAAZ,GACLwJ,OAAO,GAAChH,CADH,GAELA,CAAC,GAAC,EAFH;AAIAqF,UAAAA,CAAC,CAAClD,IAAF,CAAQ;AACPjD,YAAAA,IAAI,EAAEC,MAAM,CAACD,IADN;AAEP+B,YAAAA,IAAI,EAAE9B,MAAM,CAACE,IAAP,CAAY4B,IAFX;AAGPpB,YAAAA,GAAG,EAAGA;AAHC,WAAR;;AAMA,cAAKV,MAAM,CAACrB,OAAZ,EAAsB;AACrBiJ,YAAAA,WAAW,CAAE1B,CAAF,EAAKlG,MAAM,CAACrB,OAAZ,EAAqB+B,GAAG,GAAC,GAAzB,CAAX;AACA;AACD;AACD;AACD,KAvBD;;AAyBA,QAAIiF,GAAG,GAAG,SAANA,GAAM,CAAWgC,QAAX,EAAqBjG,IAArB,EAA4B;AACrC,UAAIb,CAAJ,EAAOC,GAAP;AACA,UAAInC,OAAO,GAAG,EAAd;AACAiJ,MAAAA,WAAW,CAAEjJ,OAAF,EAAW+C,IAAI,CAACvC,CAAL,CAAOR,OAAlB,CAAX;AAEA,UAAImJ,KAAK,GAAGnK,CAAC,CAACwJ,GAAF,CAAOxI,OAAP,EAAgB,UAAUyI,CAAV,EAAa;AACxC,eAAOA,CAAC,CAACrH,IAAT;AACA,OAFW,CAAZ;;AAIA,UAAKpC,CAAC,CAACoB,OAAF,CAAW4I,QAAX,KAAyBA,QAAQ,YAAYhK,CAAlD,EAAsD;AACrD,aAAMkD,CAAC,GAAC,CAAF,EAAKC,GAAG,GAAC6G,QAAQ,CAAC5G,MAAxB,EAAiCF,CAAC,GAACC,GAAnC,EAAyCD,CAAC,EAA1C,EAA+C;AAC9C8E,UAAAA,GAAG,CAAEgC,QAAQ,CAAC9G,CAAD,CAAV,EAAea,IAAf,CAAH;AACA;;AACD;AACA;;AAED,UAAKiG,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAKtJ,SAAlC,IAA+CsJ,QAAQ,KAAK,GAAjE,EAAuE;AACtE;AACA,aAAM9G,CAAC,GAAC,CAAF,EAAKC,GAAG,GAACnC,OAAO,CAACoC,MAAvB,EAAgCF,CAAC,GAACC,GAAlC,EAAwCD,CAAC,EAAzC,EAA8C;AAC7C6E,UAAAA,GAAG,CAAC1C,IAAJ,CAAU;AACTtB,YAAAA,IAAI,EAAEA,IADG;AAET3B,YAAAA,IAAI,EAAEpB,OAAO,CAACkC,CAAD,CAAP,CAAWd;AAFR,WAAV;AAIA;AACD,OARD,MASK,IAAK,OAAO4H,QAAP,KAAoB,QAAzB,EAAoC;AACxC;AACAjC,QAAAA,GAAG,CAAC1C,IAAJ,CAAU;AACTtB,UAAAA,IAAI,EAAEA,IADG;AAET3B,UAAAA,IAAI,EAAE2B,IAAI,CAACvC,CAAL,CAAOR,OAAP,CAAgBgJ,QAAhB,EAA2B5H;AAFxB,SAAV;AAIA,OANI,MAOA,IAAK,OAAO4H,QAAP,KAAoB,QAAzB,EAAoC;AACxC,YAAKA,QAAQ,CAACjE,OAAT,CAAkB,GAAlB,MAA4B,CAAC,CAAlC,EAAsC;AACrC;AACA,cAAIwC,CAAC,GAAGyB,QAAQ,CAAChH,KAAT,CAAe,GAAf,CAAR;;AAEA,eAAME,CAAC,GAAC,CAAF,EAAKC,GAAG,GAACoF,CAAC,CAACnF,MAAjB,EAA0BF,CAAC,GAACC,GAA5B,EAAkCD,CAAC,EAAnC,EAAwC;AACvC8E,YAAAA,GAAG,CAAEhI,CAAC,CAAC6J,IAAF,CAAOtB,CAAC,CAACrF,CAAD,CAAR,CAAF,EAAgBa,IAAhB,CAAH;AACA;AACD,SAPD,MAQK,IAAKiG,QAAQ,CAACI,KAAT,CAAgB,eAAhB,CAAL,EAAyC;AAC7C;AACA,cAAIC,OAAO,GAAGrK,CAAC,CAACwJ,GAAF,CAAOxI,OAAP,EAAgB,UAAUyI,CAAV,EAAa;AAC1C,mBAAOA,CAAC,CAAC1G,GAAT;AACA,WAFa,CAAd;AAIAgF,UAAAA,GAAG,CAAC1C,IAAJ,CAAU;AACTtB,YAAAA,IAAI,EAAEA,IADG;AAET3B,YAAAA,IAAI,EAAEpB,OAAO,CAAEhB,CAAC,CAACwE,OAAF,CAAWwF,QAAX,EAAqBK,OAArB,CAAF,CAAP,CAA0CjI;AAFvC,WAAV;AAIA,SAVI,MAWA,IAAK4H,QAAQ,CAACjE,OAAT,CAAkB,OAAlB,MAAgC,CAAC,CAAtC,EAA0C;AAC9C;AACA,cAAI5B,IAAI,GAAG6F,QAAQ,CAACM,OAAT,CAAkB,OAAlB,EAA2B,EAA3B,CAAX;;AAEA,eAAMpH,CAAC,GAAC,CAAF,EAAKC,GAAG,GAACnC,OAAO,CAACoC,MAAvB,EAAgCF,CAAC,GAACC,GAAlC,EAAwCD,CAAC,EAAzC,EAA8C;AAC7C,gBAAKlC,OAAO,CAACkC,CAAD,CAAP,CAAWiB,IAAX,KAAoBA,IAAzB,EAAgC;AAC/B4D,cAAAA,GAAG,CAAC1C,IAAJ,CAAU;AACTtB,gBAAAA,IAAI,EAAEA,IADG;AAET3B,gBAAAA,IAAI,EAAEpB,OAAO,CAACkC,CAAD,CAAP,CAAWd;AAFR,eAAV;AAIA;AACD;AACD,SAZI,MAaA;AACJ;AACApC,UAAAA,CAAC,CAAEmK,KAAF,CAAD,CAAWI,MAAX,CAAmBP,QAAnB,EAA8BQ,IAA9B,CAAoC,YAAY;AAC/CzC,YAAAA,GAAG,CAAC1C,IAAJ,CAAU;AACTtB,cAAAA,IAAI,EAAEA,IADG;AAET3B,cAAAA,IAAI,EAAE;AAFG,aAAV;AAIA,WALD;AAMA;AACD,OA1CI,MA2CA,IAAK,OAAO4H,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,CAACS,QAA9C,EAAyD;AAC7D;AACA,YAAI1H,GAAG,GAAG/C,CAAC,CAACwE,OAAF,CAAWwF,QAAX,EAAqBG,KAArB,CAAV;;AAEA,YAAKpH,GAAG,KAAK,CAAC,CAAd,EAAkB;AACjBgF,UAAAA,GAAG,CAAC1C,IAAJ,CAAU;AACTtB,YAAAA,IAAI,EAAEA,IADG;AAET3B,YAAAA,IAAI,EAAE+H,KAAK,CAAEpH,GAAF;AAFF,WAAV;AAIA;AACD;AACD,KAtFD;;AAyFA,SAAM,IAAIG,CAAC,GAAC,CAAN,EAASC,GAAG,GAAC4G,KAAK,CAAC3G,MAAzB,EAAkCF,CAAC,GAACC,GAApC,EAA0CD,CAAC,EAA3C,EAAgD;AAC/C,UAAIa,IAAI,GAAGgG,KAAK,CAAC7G,CAAD,CAAhB;AAEA8E,MAAAA,GAAG,CAAEgC,QAAF,EAAYjG,IAAZ,CAAH;AACA;;AAED,WAAOgE,GAAP;AACA,GA5HD;AA+HA;;;;;;;;AAMA9G,EAAAA,OAAO,CAACM,QAAR,GAAmB;AAClBP,IAAAA,OAAO,EAAE,CAAE,MAAF,EAAU,OAAV,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,OAAjC,CADS;AAElBmD,IAAAA,IAAI,EAAE,MAFY;AAGlBuG,IAAAA,QAAQ,EAAE,CAHQ;AAIlB9I,IAAAA,GAAG,EAAE;AACJC,MAAAA,SAAS,EAAE;AACVC,QAAAA,GAAG,EAAE,KADK;AAEVE,QAAAA,SAAS,EAAE;AAFD,OADP;AAKJ4C,MAAAA,UAAU,EAAE;AACX9C,QAAAA,GAAG,EAAE,KADM;AAEXE,QAAAA,SAAS,EAAE;AAFA,OALR;AASJK,MAAAA,MAAM,EAAE;AACPP,QAAAA,GAAG,EAAE,GADE;AAEPE,QAAAA,SAAS,EAAE,WAFJ;AAGPQ,QAAAA,MAAM,EAAE,QAHD;AAIPgB,QAAAA,QAAQ,EAAE;AAJH,OATJ;AAeJmB,MAAAA,WAAW,EAAE;AACZ7C,QAAAA,GAAG,EAAE,MADO;AAEZE,QAAAA,SAAS,EAAE;AAFC;AAfT;AAJa,GAAnB;AA0BA;;;;;;AAKAf,EAAAA,OAAO,CAAC0J,OAAR,GAAkB,OAAlB;AAGA3K,EAAAA,CAAC,CAACsB,MAAF,CAAUR,UAAV,EAAsB;AACrB8D,IAAAA,UAAU,EAAE;AACXH,MAAAA,IAAI,EAAE,cAAWvD,EAAX,EAAgB;AACrB,eAAOA,EAAE,CAAC0J,IAAH,CAAS,oBAAT,EAA+B,YAA/B,CAAP;AACA,OAHU;AAIX5I,MAAAA,SAAS,EAAE,oBAJA;AAKXG,MAAAA,MAAM,EAAE,gBAAWoD,CAAX,EAAcrE,EAAd,EAAkBmB,MAAlB,EAA0BlB,MAA1B,EAAmC;AAC1C,YAAIiD,IAAI,GAAG/B,MAAX;AACA,YAAIwI,UAAU,GAAGzG,IAAI,CAAC0G,MAAL,EAAjB;AACA,YAAIC,cAAc,GAAG/K,CAAC,CAAEkB,EAAE,CAACiG,KAAH,GAAWtF,SAAX,EAAF,CAAtB;AACA,YAAImJ,UAAU,GAAG,KAAjB,CAJ0C,CAM1C;;AACA,YAAKhL,CAAC,CAAC,0BAAD,CAAD,CAA8BoD,MAAnC,EAA4C;AAC3C4H,UAAAA,UAAU,GAAGhL,CAAC,CAAC,0BAAD,CAAD,CAA8B8K,MAA9B,EAAb;AACA9K,UAAAA,CAAC,CAAC,MAAD,CAAD,CAAUiL,OAAV,CAAmB,sBAAnB;AACA;;AAED9J,QAAAA,MAAM,CAAC2F,WAAP,CACE/E,QADF,CACYZ,MAAM,CAAC+J,gBADnB,EAEEhC,GAFF,CAEO,SAFP,EAEkB,MAFlB,EAGEC,QAHF,CAGY,MAHZ,EAIEC,MAJF,CAIUjI,MAAM,CAAC8H,IAJjB;;AAMA,YAAIkC,QAAQ,GAAGhK,MAAM,CAAC2F,WAAP,CAAmBoC,GAAnB,CAAwB,UAAxB,CAAf;;AAEA,YAAK8B,UAAU,IAAIG,QAAQ,KAAK,UAAhC,EAA6C;AAC5ChK,UAAAA,MAAM,CAAC2F,WAAP,CAAmBoC,GAAnB,CAAwB;AACvBkC,YAAAA,GAAG,EAAEJ,UAAU,CAACI,GAAX,GAAiB,CADC;AACE;AACzBC,YAAAA,IAAI,EAAEL,UAAU,CAACK,IAAX,GAAkB;AAFD,WAAxB;AAIA,SALD,MAMK,IAAKF,QAAQ,KAAK,UAAlB,EAA+B;AACnChK,UAAAA,MAAM,CAAC2F,WAAP,CAAmBoC,GAAnB,CAAwB;AACvBkC,YAAAA,GAAG,EAAEP,UAAU,CAACO,GAAX,GAAiBhH,IAAI,CAACkH,WAAL,EADC;AAEvBD,YAAAA,IAAI,EAAER,UAAU,CAACQ;AAFM,WAAxB;;AAKA,cAAIE,SAAS,GAAGV,UAAU,CAACQ,IAAX,GAAkBlK,MAAM,CAAC2F,WAAP,CAAmB0E,UAAnB,EAAlC;;AACA,cAAIC,UAAU,GAAGV,cAAc,CAACD,MAAf,GAAwBO,IAAxB,GAA+BN,cAAc,CAACW,KAAf,EAAhD;;AACA,cAAKH,SAAS,GAAGE,UAAjB,EAA8B;AAC7BtK,YAAAA,MAAM,CAAC2F,WAAP,CAAmBoC,GAAnB,CAAwB,MAAxB,EAAgC2B,UAAU,CAACQ,IAAX,IAAoBE,SAAS,GAAGE,UAAhC,CAAhC;AACA;AACD,SAXI,MAYA;AACJ;AACA,cAAIL,GAAG,GAAGjK,MAAM,CAAC2F,WAAP,CAAmB6E,MAAnB,KAA8B,CAAxC;;AACA,cAAKP,GAAG,GAAGpL,CAAC,CAACC,MAAD,CAAD,CAAU0L,MAAV,KAAqB,CAAhC,EAAoC;AACnCP,YAAAA,GAAG,GAAGpL,CAAC,CAACC,MAAD,CAAD,CAAU0L,MAAV,KAAqB,CAA3B;AACA;;AAEDxK,UAAAA,MAAM,CAAC2F,WAAP,CAAmBoC,GAAnB,CAAwB,WAAxB,EAAqCkC,GAAG,GAAC,CAAC,CAA1C;AACA;;AAED,YAAKjK,MAAM,CAAC4H,UAAZ,EAAyB;AACxB9H,UAAAA,OAAO,CAAC8H,UAAR,CAAoB,IAApB,EAA0B5H,MAAM,CAACyK,mBAAjC,EAAsDzK,MAAM,CAAC8H,IAA7D;AACA,SAlDyC,CAoD1C;AACA;;;AACA4C,QAAAA,UAAU,CAAE,YAAY;AACvB;AACA;AACA;AACA;AACA7L,UAAAA,CAAC,CAAC,0BAAD,CAAD,CAA8BsF,EAA9B,CAAkC,sBAAlC,EAA0D,YAAY,CAAE,CAAxE;AAEAtF,UAAAA,CAAC,CAAC,MAAD,CAAD,CAAUsF,EAAV,CAAc,sBAAd,EAAsC,UAAUC,CAAV,EAAa;AAClD;AACA,gBAAIuG,IAAI,GAAG9L,CAAC,CAACM,EAAF,CAAKyL,OAAL,GAAe,SAAf,GAA2B,SAAtC;;AAEA,gBAAK,CAAE/L,CAAC,CAACuF,CAAC,CAACyG,MAAH,CAAD,CAAYC,OAAZ,GAAsBH,IAAtB,IAA8BvB,MAA9B,CAAsCpJ,MAAM,CAAC2F,WAA7C,EAA2D1D,MAAlE,EAA2E;AAC1EjC,cAAAA,MAAM,CAAC2F,WAAP,CACEuC,OADF,CACWlI,MAAM,CAAC8H,IADlB,EACwB,YAAY;AAClC9H,gBAAAA,MAAM,CAAC2F,WAAP,CAAmBV,MAAnB;AACA,eAHF;;AAKApG,cAAAA,CAAC,CAAC,0BAAD,CAAD,CAA8B0D,GAA9B,CAAmC,sBAAnC;AACAzC,cAAAA,OAAO,CAAC8H,UAAR,CAAoB,KAApB,EAA2B5H,MAAM,CAACyK,mBAAlC,EAAuDzK,MAAM,CAAC8H,IAA9D;AAEAjJ,cAAAA,CAAC,CAAC,MAAD,CAAD,CAAU0D,GAAV,CAAe,sBAAf;AACAxC,cAAAA,EAAE,CAACwC,GAAH,CAAQ,2BAAR;AACA;AACD,WAhBD;AAiBA,SAxBS,EAwBP,EAxBO,CAAV;;AA0BA,YAAKvC,MAAM,CAAC+K,SAAZ,EAAwB;AACvBhL,UAAAA,EAAE,CAACoE,EAAH,CAAO,2BAAP,EAAoC,YAAY;AAC/CtF,YAAAA,CAAC,CAAC,0BAAD,CAAD,CAA8BiI,KAA9B;AACA,WAFD;AAGA;AACD,OA1FU;AA2FXc,MAAAA,UAAU,EAAE,IA3FD;AA4FXmC,MAAAA,gBAAgB,EAAE,EA5FP;AA6FXU,MAAAA,mBAAmB,EAAE,sBA7FV;AA8FXM,MAAAA,SAAS,EAAE,KA9FA;AA+FXjD,MAAAA,IAAI,EAAE;AA/FK,KADS;AAkGrBkD,IAAAA,IAAI,EAAE,cAAWjL,EAAX,EAAeqB,IAAf,EAAsB;AAC3B,UAAKzB,UAAU,CAACsL,SAAhB,EAA4B;AAC3B,eAAO,WAAP;AACA;;AACD,UAAKtL,UAAU,CAACuL,SAAX,IAAwBvL,UAAU,CAACuL,SAAX,CAAqBnF,SAArB,CAAgChG,EAAhC,EAAoCqB,IAApC,CAA7B,EAA0E;AACzE,eAAO,WAAP;AACA;AACD,KAzGoB;AA0GrB+J,IAAAA,GAAG,EAAE,aAAWpL,EAAX,EAAeqB,IAAf,EAAsB;AAC1B;AACA,UAAKzB,UAAU,CAACyL,QAAX,IAAuBzL,UAAU,CAACyL,QAAX,CAAoBrF,SAApB,CAA+BhG,EAA/B,EAAmCqB,IAAnC,CAA5B,EAAwE;AACvE,eAAO,UAAP;AACA;;AACD,UAAKzB,UAAU,CAAC0L,QAAX,IAAuB1L,UAAU,CAAC0L,QAAX,CAAoBtF,SAApB,CAA+BhG,EAA/B,EAAmCqB,IAAnC,CAA5B,EAAwE;AACvE,eAAO,UAAP;AACA;AACD,KAlHoB;AAmHrBkK,IAAAA,KAAK,EAAE,eAAWvL,EAAX,EAAeqB,IAAf,EAAsB;AAC5B;AACA,UAAKzB,UAAU,CAAC4L,UAAX,IAAyB5L,UAAU,CAAC4L,UAAX,CAAsBxF,SAAtB,CAAiChG,EAAjC,EAAqCqB,IAArC,CAA9B,EAA4E;AAC3E,eAAO,YAAP;AACA;;AACD,UAAKzB,UAAU,CAAC6L,UAAX,IAAyB7L,UAAU,CAAC6L,UAAX,CAAsBzF,SAAtB,CAAiChG,EAAjC,EAAqCqB,IAArC,CAA9B,EAA4E;AAC3E,eAAO,YAAP;AACA;AACD,KA3HoB;AA4HrBqK,IAAAA,GAAG,EAAE,aAAW1L,EAAX,EAAeqB,IAAf,EAAsB;AAC1B;AACA,UAAKzB,UAAU,CAAC+L,QAAX,IAAuB/L,UAAU,CAAC+L,QAAX,CAAoB3F,SAApB,CAA+BhG,EAA/B,EAAmCqB,IAAnC,CAA5B,EAAwE;AACvE,eAAO,UAAP;AACA;;AACD,UAAKzB,UAAU,CAACgM,QAAX,IAAuBhM,UAAU,CAACgM,QAAX,CAAoB5F,SAApB,CAA+BhG,EAA/B,EAAmCqB,IAAnC,CAA5B,EAAwE;AACvE,eAAO,UAAP;AACA;AACD,KApIoB;AAqIrBwK,IAAAA,UAAU,EAAE,oBAAW7L,EAAX,EAAgB;AAC3B,UAAI8L,UAAU,GAAG9L,EAAE,CAAC4C,QAAH,GAAc,CAAd,EAAiBmJ,WAAlC;AACA,UAAIC,IAAI,GAAGlN,CAAC,CAACoB,OAAF,CAAW4L,UAAU,CAAC,CAAD,CAArB,IAA6BA,UAAU,CAAC,CAAD,CAAvC,GAA6CA,UAAxD;AACA,UAAIG,IAAI,GAAGnN,CAAC,CAACoB,OAAF,CAAW4L,UAAU,CAAC,CAAD,CAArB,IAA6BA,UAAU,CAAC,CAAD,CAAvC,GAA6CA,UAAxD;;AACA,UAAIvI,IAAI,GAAG,SAAPA,IAAO,CAAWvD,EAAX,EAAgB;AAC1B,eAAOA,EAAE,CAAC0J,IAAH,CAAS,oBAAT,EAA+B;AACrC,gBAAM,eAD+B;AAErCwC,UAAAA,CAAC,EAAK;AAF+B,SAA/B,EAGJlM,EAAE,CAACmM,IAAH,CAAQC,GAAR,EAHI,CAAP;AAIA,OALD;;AAOA,aAAO;AACNhM,QAAAA,MAAM,EAAE,YADF;AAENmD,QAAAA,IAAI,EAAEA,IAFA;AAGNzC,QAAAA,SAAS,EAAE,qBAHL;AAINkK,QAAAA,SAAS,EAAE,IAJL;AAKNlL,QAAAA,OAAO,EAAEhB,CAAC,CAACwJ,GAAF,CAAO0D,IAAP,EAAa,UAAWK,GAAX,EAAgBrK,CAAhB,EAAoB;AACzC,iBAAO;AACNuB,YAAAA,IAAI,EAAE0I,IAAI,CAACjK,CAAD,CADJ;AAENf,YAAAA,MAAM,EAAE,gBAAWoD,CAAX,EAAcrE,EAAd,EAAmB;AAC1BA,cAAAA,EAAE,CAACmM,IAAH,CAAQC,GAAR,CAAaC,GAAb,EAAmBC,IAAnB;AACA,aAJK;AAKNzG,YAAAA,IAAI,EAAE,cAAW7F,EAAX,EAAekB,IAAf,EAAqBG,IAArB,EAA4B;AACjC,kBAAI2C,IAAI,GAAG,IAAX;;AACA,kBAAI5E,EAAE,GAAG,SAALA,EAAK,GAAY;AACpB4E,gBAAAA,IAAI,CAAC1C,MAAL,CAAatB,EAAE,CAACmM,IAAH,CAAQC,GAAR,OAAkBC,GAA/B;AACA,eAFD;;AAIArM,cAAAA,EAAE,CAACoE,EAAH,CAAO,cAAY/C,IAAI,CAACZ,SAAxB,EAAmCrB,EAAnC;AACAA,cAAAA,EAAE;AACF,aAbK;AAcNmD,YAAAA,OAAO,EAAE,iBAAWvC,EAAX,EAAekB,IAAf,EAAqBG,IAArB,EAA4B;AACpCrB,cAAAA,EAAE,CAACwC,GAAH,CAAQ,cAAYnB,IAAI,CAACZ,SAAzB;AACA;AAhBK,WAAP;AAkBA,SAnBQ,CALH;AAyBNoF,QAAAA,IAAI,EAAE,cAAW7F,EAAX,EAAekB,IAAf,EAAqBG,IAArB,EAA4B;AACjC,cAAI2C,IAAI,GAAG,IAAX;AACAhE,UAAAA,EAAE,CAACoE,EAAH,CAAO,cAAY/C,IAAI,CAACZ,SAAxB,EAAmC,YAAY;AAC9CuD,YAAAA,IAAI,CAACT,IAAL,CAAWA,IAAI,CAAEvD,EAAF,CAAf;AACA,WAFD;AAGA,SA9BK;AA+BNuC,QAAAA,OAAO,EAAE,iBAAWvC,EAAX,EAAekB,IAAf,EAAqBG,IAArB,EAA4B;AACpCrB,UAAAA,EAAE,CAACwC,GAAH,CAAQ,cAAYnB,IAAI,CAACZ,SAAzB;AACA;AAjCK,OAAP;AAmCA;AAnLoB,GAAtB;AAuLA;;;;;;AAOA;;AACAhB,EAAAA,SAAS,CAACc,GAAV,CAAcgM,QAAd,CAAwB,WAAxB,EAAqC,UAAWlE,KAAX,EAAkBS,QAAlB,EAA6B;AACjE;AACA,QAAKA,QAAQ,KAAKtJ,SAAlB,EAA8B;AAC7BsJ,MAAAA,QAAQ,GAAGT,KAAX;AACAA,MAAAA,KAAK,GAAG7I,SAAR;AACA;;AAED,SAAKsJ,QAAL,CAAc0D,WAAd,GAA4BnE,KAA5B;AAEA,QAAIoE,GAAG,GAAG,KAAKC,QAAL,CAAe,IAAf,EAAqB,OAArB,EAA8B,UAAWC,GAAX,EAAiB;AACxD,UAAKA,GAAG,CAACzI,QAAT,EAAoB;AACnB,eAAOnE,OAAO,CAAC6I,cAAR,CACN7I,OAAO,CAACqI,gBAAR,CAA0BC,KAA1B,EAAiCsE,GAAG,CAACzI,QAArC,CADM,EAEN4E,QAFM,CAAP;AAIA;AACD,KAPS,EAOP,IAPO,CAAV;AASA2D,IAAAA,GAAG,CAACG,cAAJ,GAAqBvE,KAArB;AACA,WAAOoE,GAAP;AACA,GApBD,EArwC6C,CA2xC7C;;AACAhN,EAAAA,SAAS,CAACc,GAAV,CAAcgM,QAAd,CAAwB,UAAxB,EAAoC,UAAWlE,KAAX,EAAkBS,QAAlB,EAA6B;AAChE;AACA,QAAIhJ,OAAO,GAAG,KAAKA,OAAL,CAAcuI,KAAd,EAAqBS,QAArB,CAAd;;AAEA,QAAKhJ,OAAO,CAACoC,MAAR,GAAiB,CAAtB,EAA0B;AACzBpC,MAAAA,OAAO,CAACgD,MAAR,CAAgB,CAAhB,EAAmBhD,OAAO,CAACoC,MAA3B;AACA;;AAED,WAAOpC,OAAP;AACA,GATD,EA5xC6C,CAuyC7C;;AACAL,EAAAA,SAAS,CAACc,GAAV,CAAcsM,cAAd,CAA8B,oBAA9B,EAAoD,mBAApD,EAAyE,UAAWtL,IAAX,EAAkB;AAC1F,QAAKA,IAAI,KAAK/B,SAAd,EAA0B;AACzB,aAAO,KAAK8I,GAAL,CAAU,UAAWwE,GAAX,EAAiB;AACjC,eAAOA,GAAG,CAACjK,IAAJ,CAASvB,MAAT,CAAiBwL,GAAG,CAAC5L,IAArB,CAAP;AACA,OAFM,CAAP;AAGA;;AAED,WAAO,KAAKoI,IAAL,CAAW,UAAWwD,GAAX,EAAiB;AAClCA,MAAAA,GAAG,CAACjK,IAAJ,CAASvB,MAAT,CAAiBwL,GAAG,CAAC5L,IAArB,EAA2BK,IAA3B;AACA,KAFM,CAAP;AAGA,GAVD,EAxyC6C,CAozC7C;;AACA9B,EAAAA,SAAS,CAACc,GAAV,CAAcsM,cAAd,CAA8B,oBAA9B,EAAoD,mBAApD,EAAyE,UAAW5L,MAAX,EAAoB;AAC5F,QAAKA,MAAM,KAAKzB,SAAhB,EAA4B;AAC3B,aAAO,KAAK8I,GAAL,CAAU,UAAWwE,GAAX,EAAiB;AACjC,eAAOA,GAAG,CAACjK,IAAJ,CAAS5B,MAAT,CAAiB6L,GAAG,CAAC5L,IAArB,CAAP;AACA,OAFM,CAAP;AAGA;;AAED,WAAO,KAAKoI,IAAL,CAAW,UAAWwD,GAAX,EAAiB;AAClCA,MAAAA,GAAG,CAACjK,IAAJ,CAAS5B,MAAT,CAAiB6L,GAAG,CAAC5L,IAArB,EAA2BD,MAA3B;AACA,KAFM,CAAP;AAGA,GAVD,EArzC6C,CAi0C7C;;AACAxB,EAAAA,SAAS,CAACc,GAAV,CAAcgM,QAAd,CAAwB,CAAC,oBAAD,EAAuB,mBAAvB,CAAxB,EAAqE,UAAWhL,IAAX,EAAkB;AACtF,WAAO,KAAK+H,IAAL,CAAW,UAAWwD,GAAX,EAAiB;AAClCA,MAAAA,GAAG,CAACjK,IAAJ,CAASE,MAAT,CAAiB+J,GAAG,CAAC5L,IAArB,EAA2BK,IAA3B;AACA,KAFM,CAAP;AAGA,GAJD,EAl0C6C,CAw0C7C;;AACA9B,EAAAA,SAAS,CAACc,GAAV,CAAcgM,QAAd,CAAwB,CAAC,qBAAD,EAAwB,oBAAxB,CAAxB,EAAuE,YAAY;AAClF,WAAO,KAAKjD,IAAL,CAAW,UAAWwD,GAAX,EAAiB;AAClCA,MAAAA,GAAG,CAACjK,IAAJ,CAASR,OAAT,CAAkByK,GAAG,CAAC5L,IAAtB;AACA,KAFM,CAAP;AAGA,GAJD,EAz0C6C,CA+0C7C;;AACAzB,EAAAA,SAAS,CAACc,GAAV,CAAcsM,cAAd,CAA8B,mBAA9B,EAAmD,iBAAnD,EAAsE,YAAY;AACjF,QAAIE,EAAE,GAAGjO,CAAC,EAAV,CADiF,CAGjF;;AACAA,IAAAA,CAAC,CAAE,KAAKwK,IAAL,CAAW,UAAWwD,GAAX,EAAiB;AAC9BC,MAAAA,EAAE,GAAGA,EAAE,CAACnL,GAAH,CAAQkL,GAAG,CAACjK,IAAJ,CAAS3B,IAAT,CAAe4L,GAAG,CAAC5L,IAAnB,CAAR,CAAL;AACA,KAFE,CAAF,CAAD;AAIA,WAAO6L,EAAP;AACA,GATD,EAh1C6C,CA21C7C;;AACAtN,EAAAA,SAAS,CAACc,GAAV,CAAcsM,cAAd,CAA8B,kBAA9B,EAAkD,iBAAlD,EAAqE,UAAWrJ,KAAX,EAAmB;AACvF,QAAKA,KAAK,KAAKhE,SAAf,EAA2B;AAC1B,aAAO,KAAK8I,GAAL,CAAU,UAAWwE,GAAX,EAAiB;AACjC,eAAOA,GAAG,CAACjK,IAAJ,CAASU,IAAT,CAAeuJ,GAAG,CAAC5L,IAAnB,CAAP;AACA,OAFM,CAAP;AAGA;;AAED,WAAO,KAAKoI,IAAL,CAAW,UAAWwD,GAAX,EAAiB;AAClCA,MAAAA,GAAG,CAACjK,IAAJ,CAASU,IAAT,CAAeuJ,GAAG,CAAC5L,IAAnB,EAAyBsC,KAAzB;AACA,KAFM,CAAP;AAGA,GAVD,EA51C6C,CAw2C7C;;AACA/D,EAAAA,SAAS,CAACc,GAAV,CAAcsM,cAAd,CAA8B,qBAA9B,EAAqD,oBAArD,EAA2E,YAAY;AACtF,WAAO,KAAKvD,IAAL,CAAW,UAAWwD,GAAX,EAAiB;AAClCA,MAAAA,GAAG,CAACjK,IAAJ,CAAS3B,IAAT,CAAe4L,GAAG,CAAC5L,IAAnB,EAA0B6I,OAA1B,CAAmC,OAAnC;AACA,KAFM,CAAP;AAGA,GAJD,EAz2C6C,CA+2C7C;;AACAtK,EAAAA,SAAS,CAACc,GAAV,CAAcsM,cAAd,CAA8B,wBAA9B,EAAwD,uBAAxD,EAAiF,YAAY;AAC5F,QAAIE,EAAE,GAAGjO,CAAC,EAAV;AACA,QAAIkO,aAAa,GAAG,KAAKJ,cAAzB,CAF4F,CAI5F;AACA;;AACA,SAAKF,QAAL,CAAe,IAAf,EAAqB,OAArB,EAA8B,UAAWC,GAAX,EAAiB;AAC9C,UAAKA,GAAG,CAACzI,QAAT,EAAoB;AACnB,YAAI2E,KAAK,GAAG9I,OAAO,CAACqI,gBAAR,CAA0B4E,aAA1B,EAAyCL,GAAG,CAACzI,QAA7C,CAAZ;;AAEA,aAAM,IAAIlC,CAAC,GAAC,CAAN,EAASC,GAAG,GAAC4G,KAAK,CAAC3G,MAAzB,EAAkCF,CAAC,GAACC,GAApC,EAA0CD,CAAC,EAA3C,EAAgD;AAC/C+K,UAAAA,EAAE,GAAGA,EAAE,CAACnL,GAAH,CAAQiH,KAAK,CAAC7G,CAAD,CAAL,CAASrB,SAAT,EAAR,CAAL;AACA;AACD;AACD,KARD;AAUA,WAAOoM,EAAP;AACA,GAjBD,EAh3C6C,CAm4C7C;;AACAtN,EAAAA,SAAS,CAACc,GAAV,CAAcgM,QAAd,CAAwB,gBAAxB,EAA0C,UAAW1K,GAAX,EAAgBR,IAAhB,EAAuB;AAChE,QAAIsL,GAAG,GAAG,KAAKM,OAAf,CADgE,CAGhE;;AACA,QAAKN,GAAG,CAACzK,MAAT,EAAkB;AACjB,UAAIW,IAAI,GAAG9C,OAAO,CAACqI,gBAAR,CAA0B,KAAKwE,cAA/B,EAA+CD,GAAG,CAAC,CAAD,CAAH,CAAOzI,QAAtD,CAAX;;AAEA,UAAKrB,IAAI,CAACX,MAAV,EAAmB;AAClBW,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQjB,GAAR,CAAaP,IAAb,EAAmBQ,GAAnB;AACA;AACD;;AAED,WAAO,KAAKV,MAAL,CAAa,KAAKyL,cAAlB,EAAkC/K,GAAlC,CAAP;AACA,GAbD,EAp4C6C,CAm5C7C;;AACApC,EAAAA,SAAS,CAACc,GAAV,CAAcgM,QAAd,CAAwB,qBAAxB,EAA+C,YAAY;AAC1D,SAAKW,KAAL,CAAY,MAAZ,EAAqBC,MAArB,GAA8B7D,IAA9B,CAAoC,UAAWzG,IAAX,EAAkB;AACrDA,MAAAA,IAAI,CAACN,OAAL;AACA,KAFD;AAIA,WAAO,IAAP;AACA,GAND,EAp5C6C,CA45C7C;;AACA9C,EAAAA,SAAS,CAACc,GAAV,CAAcsM,cAAd,CAA8B,oBAA9B,EAAoD,oBAApD,EAA0E,YAAY;AACrF,SAAKvD,IAAL,CAAW,UAAWwD,GAAX,EAAiB;AAC3BA,MAAAA,GAAG,CAACjK,IAAJ,CAASH,MAAT,CAAiBoK,GAAG,CAAC5L,IAArB;AACA,KAFD;AAIA,WAAO,IAAP;AACA,GAND,EA75C6C,CAq6C7C;;AACA,MAAIkM,UAAJ;;AACA3N,EAAAA,SAAS,CAACc,GAAV,CAAcgM,QAAd,CAAwB,gBAAxB,EAA0C,UAAWc,KAAX,EAAkBC,OAAlB,EAA2BC,IAA3B,EAAkC;AAC3E,QAAIvJ,IAAI,GAAG,IAAX;;AAEA,QAAKqJ,KAAK,KAAK,KAAf,EAAuB;AACtBvO,MAAAA,CAAC,CAAC,0BAAD,CAAD,CAA8BqJ,OAA9B,CAAuC,YAAY;AAClDrJ,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQ4D,MAAR;AACA,OAFD;AAGA8K,MAAAA,YAAY,CAAEJ,UAAF,CAAZ;AACAA,MAAAA,UAAU,GAAG,IAAb;AAEA,aAAO,IAAP;AACA;;AAED,QAAKA,UAAL,EAAkB;AACjBI,MAAAA,YAAY,CAAEJ,UAAF,CAAZ;AACA;;AAED,QAAKtO,CAAC,CAAC,0BAAD,CAAD,CAA8BoD,MAAnC,EAA4C;AAC3CpD,MAAAA,CAAC,CAAC,0BAAD,CAAD,CAA8B4D,MAA9B;AACA;;AAED2K,IAAAA,KAAK,GAAGA,KAAK,GAAG,SAAOA,KAAP,GAAa,OAAhB,GAA0B,EAAvC;AAEAvO,IAAAA,CAAC,CAAC,4DAAD,CAAD,CACEiF,IADF,CACQsJ,KADR,EAEElI,MAFF,CAEUrG,CAAC,CAAC,QAAD,CAAD,CAAa,OAAOwO,OAAP,KAAmB,QAAnB,GAA8B,MAA9B,GAAuC,QAApD,EAAgEA,OAAhE,CAFV,EAGEtF,GAHF,CAGO,SAHP,EAGkB,MAHlB,EAIEC,QAJF,CAIY,MAJZ,EAKEC,MALF;;AAOA,QAAKqF,IAAI,KAAK/N,SAAT,IAAsB+N,IAAI,KAAK,CAApC,EAAwC;AACvCH,MAAAA,UAAU,GAAGzC,UAAU,CAAE,YAAY;AACpC3G,QAAAA,IAAI,CAAClE,OAAL,CAAa2N,IAAb,CAAmB,KAAnB;AACA,OAFsB,EAEpBF,IAFoB,CAAvB;AAGA;;AAED,WAAO,IAAP;AACA,GArCD,EAv6C6C,CA88C7C;AACA;;AACA9N,EAAAA,SAAS,CAACc,GAAV,CAAcgM,QAAd,CAAwB,sBAAxB,EAAgD,UAAWmB,OAAX,EAAqB;AACpE,QAAK,KAAKT,OAAL,CAAa/K,MAAlB,EAA2B;AAC1B,aAAOyL,WAAW,CAAE,IAAIlO,SAAS,CAACc,GAAd,CAAmB,KAAK0M,OAAL,CAAa,CAAb,CAAnB,CAAF,EAAwCS,OAAxC,CAAlB;AACA;AACD,GAJD;AAOA,MAAIE,eAAe,GAAG9O,CAAC,CAAC,aAAD,CAAD,CAAiB,CAAjB,CAAtB;;AACA,MAAI6O,WAAW,GAAG,SAAdA,WAAc,CAAW3N,EAAX,EAAe6N,MAAf,EAClB;AACC,QAAI5N,MAAM,GAAGnB,CAAC,CAACsB,MAAF,CAAU,IAAV,EAAgB,EAAhB,EAAoB;AAChC0N,MAAAA,IAAI,EAAY,IADgB;AAEhCC,MAAAA,OAAO,EAAS,EAFgB;AAGhCC,MAAAA,QAAQ,EAAQ;AACfC,QAAAA,MAAM,EAAE,SADO;AAEfC,QAAAA,KAAK,EAAG;AAFO,OAHgB;AAOhCC,MAAAA,UAAU,EAAM,SAPgB;AAQhCC,MAAAA,SAAS,EAAO,IARgB;AAShCC,MAAAA,aAAa,EAAG,IATgB;AAUhCC,MAAAA,cAAc,EAAE,IAVgB;AAWhC3F,MAAAA,IAAI,EAAY,IAXgB;AAYhC4F,MAAAA,MAAM,EAAU;AACfC,QAAAA,MAAM,EAAE,gBAAWC,CAAX,EAAe;AACtB,iBAAOC,KAAK,CAAED,CAAF,CAAZ;AACA,SAHc;AAIfE,QAAAA,MAAM,EAAE,gBAAWF,CAAX,EAAe;AACtB,iBAAOC,KAAK,CAAED,CAAF,CAAZ;AACA,SANc;AAOflK,QAAAA,IAAI,EAAE,cAAWkK,CAAX,EAAe;AACpB,iBAAOC,KAAK,CAAED,CAAF,CAAZ;AACA;AATc;AAZgB,KAApB,EAuBVZ,MAvBU,CAAb;;AAyBA,QAAIa,KAAK,GAAG,SAARA,KAAQ,CAAWE,GAAX,EAAiB;AAC5B,UAAK,OAAOA,GAAP,KAAe,QAApB,EAA+B;AAC9B,eAAOA,GAAP;AACA;;AAED,UAAK3O,MAAM,CAACmO,SAAZ,EAAwB;AACvBQ,QAAAA,GAAG,GAAGA,GAAG,CAACxF,OAAJ,CAAa,UAAb,EAAyB,EAAzB,CAAN;AACA;;AAED,UAAKnJ,MAAM,CAAC0I,IAAZ,EAAmB;AAClBiG,QAAAA,GAAG,GAAGA,GAAG,CAACxF,OAAJ,CAAa,YAAb,EAA2B,EAA3B,CAAN;AACA;;AAED,UAAKnJ,MAAM,CAACoO,aAAZ,EAA4B;AAC3BO,QAAAA,GAAG,GAAGA,GAAG,CAACxF,OAAJ,CAAa,KAAb,EAAoB,GAApB,CAAN;AACA;;AAED,UAAKnJ,MAAM,CAACqO,cAAZ,EAA6B;AAC5BV,QAAAA,eAAe,CAACiB,SAAhB,GAA4BD,GAA5B;AACAA,QAAAA,GAAG,GAAGhB,eAAe,CAACkB,KAAtB;AACA;;AAED,aAAOF,GAAP;AACA,KAvBD;;AA0BA,QAAIJ,MAAM,GAAGxO,EAAE,CAAC+N,OAAH,CAAY9N,MAAM,CAAC8N,OAAnB,EAA6B5E,OAA7B,GAAuCb,GAAvC,CAA4C,UAAUzG,GAAV,EAAe;AACvE,UAAIkN,EAAE,GAAG/O,EAAE,CAACgP,MAAH,CAAWnN,GAAX,EAAiB2M,MAAjB,EAAT;AACA,aAAOvO,MAAM,CAACsO,MAAP,CAAcC,MAAd,CAAsBO,EAAE,CAACF,SAAzB,EAAoChN,GAApC,EAAyCkN,EAAzC,CAAP;AACA,KAHY,EAGTE,OAHS,EAAb;AAKA,QAAIN,MAAM,GAAG3O,EAAE,CAACiG,KAAH,GAAW0I,MAAX,KACZ3O,EAAE,CAAC+N,OAAH,CAAY9N,MAAM,CAAC8N,OAAnB,EAA6B5E,OAA7B,GAAuCb,GAAvC,CAA4C,UAAUzG,GAAV,EAAe;AAC1D,UAAIkN,EAAE,GAAG/O,EAAE,CAACgP,MAAH,CAAWnN,GAAX,EAAiB8M,MAAjB,EAAT;AACA,aAAO1O,MAAM,CAACsO,MAAP,CAAcI,MAAd,CAAsBI,EAAE,GAAGA,EAAE,CAACF,SAAN,GAAkB,EAA1C,EAA8ChN,GAA9C,EAAmDkN,EAAnD,CAAP;AACA,KAHD,EAGIE,OAHJ,EADY,GAKZ,IALD;AAOA,QAAIC,aAAa,GAAGlP,EAAE,CAACmP,KAAH,CAAUlP,MAAM,CAAC6N,IAAjB,EAAuB7N,MAAM,CAAC8N,OAA9B,EAAuC9N,MAAM,CAAC+N,QAA9C,CAApB;AACA,QAAImB,KAAK,GAAGD,aAAa,CACvBE,MADU,CACFnP,MAAM,CAACkO,UADL,EAEVc,OAFU,EAAZ;AAGA,QAAII,SAAS,GAAGH,aAAa,CAC3BjG,KADc,GAEdgG,OAFc,EAAhB;AAIA,QAAIlB,OAAO,GAAGS,MAAM,CAACtM,MAArB;AACA,QAAI4L,IAAI,GAAGC,OAAO,GAAG,CAAV,GAAcoB,KAAK,CAACjN,MAAN,GAAe6L,OAA7B,GAAuC,CAAlD;AACA,QAAIxJ,IAAI,GAAG,IAAI+K,KAAJ,CAAWxB,IAAX,CAAX;AACA,QAAIyB,WAAW,GAAG,CAAlB;;AAEA,SAAM,IAAIvN,CAAC,GAAC,CAAN,EAASC,GAAG,GAAC6L,IAAnB,EAA0B9L,CAAC,GAACC,GAA5B,EAAkCD,CAAC,EAAnC,EAAwC;AACvC,UAAIwN,GAAG,GAAG,IAAIF,KAAJ,CAAWvB,OAAX,CAAV;;AAEA,WAAM,IAAI0B,CAAC,GAAC,CAAZ,EAAgBA,CAAC,GAAC1B,OAAlB,EAA4B0B,CAAC,EAA7B,EAAkC;AACjCD,QAAAA,GAAG,CAACC,CAAD,CAAH,GAASxP,MAAM,CAACsO,MAAP,CAAchK,IAAd,CAAoB4K,KAAK,CAAEI,WAAF,CAAzB,EAA0CvN,CAA1C,EAA6CyN,CAA7C,EAAgDJ,SAAS,CAAEE,WAAF,CAAzD,CAAT;AACAA,QAAAA,WAAW;AACX;;AAEDhL,MAAAA,IAAI,CAACvC,CAAD,CAAJ,GAAUwN,GAAV;AACA;;AAED,WAAO;AACNhB,MAAAA,MAAM,EAAEA,MADF;AAENG,MAAAA,MAAM,EAAEA,MAFF;AAGNpK,MAAAA,IAAI,EAAIA;AAHF,KAAP;AAKA,GA9FD;AAiGA;;;AAIA;;;AACAzF,EAAAA,CAAC,CAACM,EAAF,CAAKC,SAAL,CAAeU,OAAf,GAAyBA,OAAzB;AACAjB,EAAAA,CAAC,CAACM,EAAF,CAAKK,SAAL,CAAeM,OAAf,GAAyBA,OAAzB,CA/jD6C,CAmkD7C;AACA;AACA;AACA;AACA;;AACAjB,EAAAA,CAAC,CAACE,QAAD,CAAD,CAAYoF,EAAZ,CAAgB,wBAAhB,EAA0C,UAAUC,CAAV,EAAazB,QAAb,EAAuB;AAChE,QAAKyB,CAAC,CAAC5D,SAAF,KAAgB,IAArB,EAA4B;AAC3B;AACA;;AAED,QAAIiP,IAAI,GAAG9M,QAAQ,CAAC+M,KAAT,CAAe7P,OAAf,IAA0BL,SAAS,CAACY,QAAV,CAAmBP,OAAxD;;AAEA,QAAK4P,IAAI,IAAI,CAAE9M,QAAQ,CAACsB,QAAxB,EAAmC;AAClC,UAAInE,OAAJ,CAAa6C,QAAb,EAAuB8M,IAAvB,EAA8B/O,SAA9B;AACA;AACD,GAVD,EAxkD6C,CAolD7C;;AACAlB,EAAAA,SAAS,CAACI,GAAV,CAAc+P,OAAd,CAAsBzL,IAAtB,CAA4B;AAC3B0L,IAAAA,MAAM,EAAE,gBAAUjN,QAAV,EAAqB;AAC5B,UAAIkN,GAAG,GAAG,IAAIrQ,SAAS,CAACc,GAAd,CAAmBqC,QAAnB,CAAV;AACA,UAAI8M,IAAI,GAAGI,GAAG,CAACjK,IAAJ,GAAW/F,OAAX,IAAsBL,SAAS,CAACY,QAAV,CAAmBP,OAApD;AAEA,aAAO,IAAIC,OAAJ,CAAa+P,GAAb,EAAkBJ,IAAlB,EAAyB/O,SAAzB,EAAP;AACA,KAN0B;AAO3BoP,IAAAA,QAAQ,EAAE;AAPiB,GAA5B;AAWA,SAAOhQ,OAAP;AACC,CA1nDA,CAAD","sourcesContent":["/*! Buttons for DataTables 1.2.2\n * Â©2016 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Used for namespacing events added to the document by each instance, so they\n// can be removed on destroy\nvar _instCounter = 0;\n\n// Button namespacing counter for namespacing events on individual buttons\nvar _buttonCounter = 0;\n\nvar _dtButtons = DataTable.ext.buttons;\n\n/**\n * [Buttons description]\n * @param {[type]}\n * @param {[type]}\n */\nvar Buttons = function( dt, config )\n{\n\t// Allow a boolean true for defaults\n\tif ( config === true ) {\n\t\tconfig = {};\n\t}\n\n\t// For easy configuration of buttons an array can be given\n\tif ( $.isArray( config ) ) {\n\t\tconfig = { buttons: config };\n\t}\n\n\tthis.c = $.extend( true, {}, Buttons.defaults, config );\n\n\t// Don't want a deep copy for the buttons\n\tif ( config.buttons ) {\n\t\tthis.c.buttons = config.buttons;\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( dt ),\n\t\tbuttons: [],\n\t\tlistenKeys: '',\n\t\tnamespace: 'dtb'+(_instCounter++)\n\t};\n\n\tthis.dom = {\n\t\tcontainer: $('<'+this.c.dom.container.tag+'/>')\n\t\t\t.addClass( this.c.dom.container.className )\n\t};\n\n\tthis._constructor();\n};\n\n\n$.extend( Buttons.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t */\n\n\t/**\n\t * Get the action of a button\n\t * @param  {int|string} Button index\n\t * @return {function}\n\t *//**\n\t * Set the action of a button\n\t * @param  {node} node Button element\n\t * @param  {function} action Function to set\n\t * @return {Buttons} Self for chaining\n\t */\n\taction: function ( node, action )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( action === undefined ) {\n\t\t\treturn button.conf.action;\n\t\t}\n\n\t\tbutton.conf.action = action;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add an active class to the button to make to look active or get current\n\t * active state.\n\t * @param  {node} node Button element\n\t * @param  {boolean} [flag] Enable / disable flag\n\t * @return {Buttons} Self for chaining or boolean for getter\n\t */\n\tactive: function ( node, flag ) {\n\t\tvar button = this._nodeToButton( node );\n\t\tvar klass = this.c.dom.button.active;\n\t\tvar jqNode = $(button.node);\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn jqNode.hasClass( klass );\n\t\t}\n\n\t\tjqNode.toggleClass( klass, flag === undefined ? true : flag );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add a new button\n\t * @param {object} config Button configuration object, base string name or function\n\t * @param {int|string} [idx] Button index for where to insert the button\n\t * @return {Buttons} Self for chaining\n\t */\n\tadd: function ( config, idx )\n\t{\n\t\tvar buttons = this.s.buttons;\n\n\t\tif ( typeof idx === 'string' ) {\n\t\t\tvar split = idx.split('-');\n\t\t\tvar base = this.s;\n\n\t\t\tfor ( var i=0, ien=split.length-1 ; i<ien ; i++ ) {\n\t\t\t\tbase = base.buttons[ split[i]*1 ];\n\t\t\t}\n\n\t\t\tbuttons = base.buttons;\n\t\t\tidx = split[ split.length-1 ]*1;\n\t\t}\n\n\t\tthis._expandButton( buttons, config, false, idx );\n\t\tthis._draw();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the container node for the buttons\n\t * @return {jQuery} Buttons node\n\t */\n\tcontainer: function ()\n\t{\n\t\treturn this.dom.container;\n\t},\n\n\t/**\n\t * Disable a button\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tdisable: function ( node ) {\n\t\tvar button = this._nodeToButton( node );\n\n\t\t$(button.node).addClass( this.c.dom.button.disabled );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Destroy the instance, cleaning up event handlers and removing DOM\n\t * elements\n\t * @return {Buttons} Self for chaining\n\t */\n\tdestroy: function ()\n\t{\n\t\t// Key event listener\n\t\t$('body').off( 'keyup.'+this.s.namespace );\n\n\t\t// Individual button destroy (so they can remove their own events if\n\t\t// needed). Take a copy as the array is modified by `remove`\n\t\tvar buttons = this.s.buttons.slice();\n\t\tvar i, ien;\n\t\t\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.remove( buttons[i].node );\n\t\t}\n\n\t\t// Container\n\t\tthis.dom.container.remove();\n\n\t\t// Remove from the settings object collection\n\t\tvar buttonInsts = this.s.dt.settings()[0];\n\n\t\tfor ( i=0, ien=buttonInsts.length ; i<ien ; i++ ) {\n\t\t\tif ( buttonInsts.inst === this ) {\n\t\t\t\tbuttonInsts.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable / disable a button\n\t * @param  {node} node Button node\n\t * @param  {boolean} [flag=true] Enable / disable flag\n\t * @return {Buttons} Self for chaining\n\t */\n\tenable: function ( node, flag )\n\t{\n\t\tif ( flag === false ) {\n\t\t\treturn this.disable( node );\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\t$(button.node).removeClass( this.c.dom.button.disabled );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the instance name for the button set selector\n\t * @return {string} Instance name\n\t */\n\tname: function ()\n\t{\n\t\treturn this.c.name;\n\t},\n\n\t/**\n\t * Get a button's node\n\t * @param  {node} node Button node\n\t * @return {jQuery} Button element\n\t */\n\tnode: function ( node )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\treturn $(button.node);\n\t},\n\n\t/**\n\t * Remove a button.\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tremove: function ( node )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar host = this._nodeToHost( node );\n\t\tvar dt = this.s.dt;\n\n\t\t// Remove any child buttons first\n\t\tif ( button.buttons.length ) {\n\t\t\tfor ( var i=button.buttons.length-1 ; i>=0 ; i-- ) {\n\t\t\t\tthis.remove( button.buttons[i].node );\n\t\t\t}\n\t\t}\n\n\t\t// Allow the button to remove event handlers, etc\n\t\tif ( button.conf.destroy ) {\n\t\t\tbutton.conf.destroy.call( dt.button(node), dt, $(node), button.conf );\n\t\t}\n\n\t\tthis._removeKey( button.conf );\n\n\t\t$(button.node).remove();\n\n\t\tvar idx = $.inArray( button, host );\n\t\thost.splice( idx, 1 );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the text for a button\n\t * @param  {int|string} node Button index\n\t * @return {string} Button text\n\t *//**\n\t * Set the text for a button\n\t * @param  {int|string|function} node Button index\n\t * @param  {string} label Text\n\t * @return {Buttons} Self for chaining\n\t */\n\ttext: function ( node, label )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar buttonLiner = this.c.dom.collection.buttonLiner;\n\t\tvar linerTag = button.inCollection && buttonLiner && buttonLiner.tag ?\n\t\t\tbuttonLiner.tag :\n\t\t\tthis.c.dom.buttonLiner.tag;\n\t\tvar dt = this.s.dt;\n\t\tvar jqNode = $(button.node);\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, jqNode, button.conf ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( label === undefined ) {\n\t\t\treturn text( button.conf.text );\n\t\t}\n\n\t\tbutton.conf.text = label;\n\n\t\tif ( linerTag ) {\n\t\t\tjqNode.children( linerTag ).html( text(label) );\n\t\t}\n\t\telse {\n\t\t\tjqNode.html( text(label) );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Buttons constructor\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar buttons =  this.c.buttons;\n\n\t\tif ( ! dtSettings._buttons ) {\n\t\t\tdtSettings._buttons = [];\n\t\t}\n\n\t\tdtSettings._buttons.push( {\n\t\t\tinst: this,\n\t\t\tname: this.c.name\n\t\t} );\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.add( buttons[i] );\n\t\t}\n\n\t\tdt.on( 'destroy', function () {\n\t\t\tthat.destroy();\n\t\t} );\n\n\t\t// Global key event binding to listen for button keys\n\t\t$('body').on( 'keyup.'+this.s.namespace, function ( e ) {\n\t\t\tif ( ! document.activeElement || document.activeElement === document.body ) {\n\t\t\t\t// SUse a string of characters for fast lookup of if we need to\n\t\t\t\t// handle this\n\t\t\t\tvar character = String.fromCharCode(e.keyCode).toLowerCase();\n\n\t\t\t\tif ( that.s.listenKeys.toLowerCase().indexOf( character ) !== -1 ) {\n\t\t\t\t\tthat._keypress( character, e );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Add a new button to the key press listener\n\t * @param {object} conf Resolved button configuration object\n\t * @private\n\t */\n\t_addKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tthis.s.listenKeys += $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\t\t}\n\t},\n\n\t/**\n\t * Insert the buttons into the container. Call without parameters!\n\t * @param  {node} [container] Recursive only - Insert point\n\t * @param  {array} [buttons] Recursive only - Buttons array\n\t * @private\n\t */\n\t_draw: function ( container, buttons )\n\t{\n\t\tif ( ! container ) {\n\t\t\tcontainer = this.dom.container;\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tcontainer.children().detach();\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tcontainer.append( buttons[i].inserter );\n\n\t\t\tif ( buttons[i].buttons && buttons[i].buttons.length ) {\n\t\t\t\tthis._draw( buttons[i].collection, buttons[i].buttons );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create buttons from an array of buttons\n\t * @param  {array} attachTo Buttons array to attach to\n\t * @param  {object} button Button definition\n\t * @param  {boolean} inCollection true if the button is in a collection\n\t * @private\n\t */\n\t_expandButton: function ( attachTo, button, inCollection, attachPoint )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar buttonCounter = 0;\n\t\tvar buttons = ! $.isArray( button ) ?\n\t\t\t[ button ] :\n\t\t\tbutton;\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tvar conf = this._resolveExtends( buttons[i] );\n\n\t\t\tif ( ! conf ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the configuration is an array, then expand the buttons at this\n\t\t\t// point\n\t\t\tif ( $.isArray( conf ) ) {\n\t\t\t\tthis._expandButton( attachTo, conf, inCollection, attachPoint );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar built = this._buildButton( conf, inCollection );\n\t\t\tif ( ! built ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( attachPoint !== undefined ) {\n\t\t\t\tattachTo.splice( attachPoint, 0, built );\n\t\t\t\tattachPoint++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattachTo.push( built );\n\t\t\t}\n\n\t\t\tif ( built.conf.buttons ) {\n\t\t\t\tvar collectionDom = this.c.dom.collection;\n\t\t\t\tbuilt.collection = $('<'+collectionDom.tag+'/>')\n\t\t\t\t\t.addClass( collectionDom.className );\n\t\t\t\tbuilt.conf._collection = built.collection;\n\n\t\t\t\tthis._expandButton( built.buttons, built.conf.buttons, true, attachPoint );\n\t\t\t}\n\n\t\t\t// init call is made here, rather than buildButton as it needs to\n\t\t\t// be selectable, and for that it needs to be in the buttons array\n\t\t\tif ( conf.init ) {\n\t\t\t\tconf.init.call( dt.button( built.node ), dt, $(built.node), conf );\n\t\t\t}\n\n\t\t\tbuttonCounter++;\n\t\t}\n\t},\n\n\t/**\n\t * Create an individual button\n\t * @param  {object} config            Resolved button configuration\n\t * @param  {boolean} inCollection `true` if a collection button\n\t * @return {jQuery} Created button node (jQuery)\n\t * @private\n\t */\n\t_buildButton: function ( config, inCollection )\n\t{\n\t\tvar buttonDom = this.c.dom.button;\n\t\tvar linerDom = this.c.dom.buttonLiner;\n\t\tvar collectionDom = this.c.dom.collection;\n\t\tvar dt = this.s.dt;\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, button, config ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( inCollection && collectionDom.button ) {\n\t\t\tbuttonDom = collectionDom.button;\n\t\t}\n\n\t\tif ( inCollection && collectionDom.buttonLiner ) {\n\t\t\tlinerDom = collectionDom.buttonLiner;\n\t\t}\n\n\t\t// Make sure that the button is available based on whatever requirements\n\t\t// it has. For example, Flash buttons require Flash\n\t\tif ( config.available && ! config.available( dt, config ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar action = function ( e, dt, button, config ) {\n\t\t\tconfig.action.call( dt.button( button ), e, dt, button, config );\n\n\t\t\t$(dt.table().node()).triggerHandler( 'buttons-action.dt', [\n\t\t\t\tdt.button( button ), dt, button, config \n\t\t\t] );\n\t\t};\n\n\t\tvar button = $('<'+buttonDom.tag+'/>')\n\t\t\t.addClass( buttonDom.className )\n\t\t\t.attr( 'tabindex', this.s.dt.settings()[0].iTabIndex )\n\t\t\t.attr( 'aria-controls', this.s.dt.table().node().id )\n\t\t\t.on( 'click.dtb', function (e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t}\n\n\t\t\t\tbutton.blur();\n\t\t\t} )\n\t\t\t.on( 'keyup.dtb', function (e) {\n\t\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// Make `a` tags act like a link\n\t\tif ( buttonDom.tag.toLowerCase() === 'a' ) {\n\t\t\tbutton.attr( 'href', '#' );\n\t\t}\n\n\t\tif ( linerDom.tag ) {\n\t\t\tvar liner = $('<'+linerDom.tag+'/>')\n\t\t\t\t.html( text( config.text ) )\n\t\t\t\t.addClass( linerDom.className );\n\n\t\t\tif ( linerDom.tag.toLowerCase() === 'a' ) {\n\t\t\t\tliner.attr( 'href', '#' );\n\t\t\t}\n\n\t\t\tbutton.append( liner );\n\t\t}\n\t\telse {\n\t\t\tbutton.html( text( config.text ) );\n\t\t}\n\n\t\tif ( config.enabled === false ) {\n\t\t\tbutton.addClass( buttonDom.disabled );\n\t\t}\n\n\t\tif ( config.className ) {\n\t\t\tbutton.addClass( config.className );\n\t\t}\n\n\t\tif ( config.titleAttr ) {\n\t\t\tbutton.attr( 'title', config.titleAttr );\n\t\t}\n\n\t\tif ( ! config.namespace ) {\n\t\t\tconfig.namespace = '.dt-button-'+(_buttonCounter++);\n\t\t}\n\n\t\tvar buttonContainer = this.c.dom.buttonContainer;\n\t\tvar inserter;\n\t\tif ( buttonContainer && buttonContainer.tag ) {\n\t\t\tinserter = $('<'+buttonContainer.tag+'/>')\n\t\t\t\t.addClass( buttonContainer.className )\n\t\t\t\t.append( button );\n\t\t}\n\t\telse {\n\t\t\tinserter = button;\n\t\t}\n\n\t\tthis._addKey( config );\n\n\t\treturn {\n\t\t\tconf:         config,\n\t\t\tnode:         button.get(0),\n\t\t\tinserter:     inserter,\n\t\t\tbuttons:      [],\n\t\t\tinCollection: inCollection,\n\t\t\tcollection:   null\n\t\t};\n\t},\n\n\t/**\n\t * Get the button object from a node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {object} Button object\n\t * @private\n\t */\n\t_nodeToButton: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons[i];\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToButton( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Get container array for a button from a button node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {array} Button's host array\n\t * @private\n\t */\n\t_nodeToHost: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons;\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToHost( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handle a key press - determine if any button's key configured matches\n\t * what was typed and trigger the action if so.\n\t * @param  {string} character The character pressed\n\t * @param  {object} e Key event that triggered this call\n\t * @private\n\t */\n\t_keypress: function ( character, e )\n\t{\n\t\tvar run = function ( conf, node ) {\n\t\t\tif ( ! conf.key ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( conf.key === character ) {\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t\telse if ( $.isPlainObject( conf.key ) ) {\n\t\t\t\tif ( conf.key.key !== character ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.shiftKey && ! e.shiftKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.altKey && ! e.altKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.ctrlKey && ! e.ctrlKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.metaKey && ! e.metaKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Made it this far - it is good\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t};\n\n\t\tvar recurse = function ( a ) {\n\t\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\trun( a[i].conf, a[i].node );\n\n\t\t\t\tif ( a[i].buttons.length ) {\n\t\t\t\t\trecurse( a[i].buttons );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trecurse( this.s.buttons );\n\t},\n\n\t/**\n\t * Remove a key from the key listener for this instance (to be used when a\n\t * button is removed)\n\t * @param  {object} conf Button configuration\n\t * @private\n\t */\n\t_removeKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tvar character = $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\n\t\t\t// Remove only one character, as multiple buttons could have the\n\t\t\t// same listening key\n\t\t\tvar a = this.s.listenKeys.split('');\n\t\t\tvar idx = $.inArray( character, a );\n\t\t\ta.splice( idx, 1 );\n\t\t\tthis.s.listenKeys = a.join('');\n\t\t}\n\t},\n\n\t/**\n\t * Resolve a button configuration\n\t * @param  {string|function|object} conf Button config to resolve\n\t * @return {object} Button configuration\n\t * @private\n\t */\n\t_resolveExtends: function ( conf )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar i, ien;\n\t\tvar toConfObject = function ( base ) {\n\t\t\tvar loop = 0;\n\n\t\t\t// Loop until we have resolved to a button configuration, or an\n\t\t\t// array of button configurations (which will be iterated\n\t\t\t// separately)\n\t\t\twhile ( ! $.isPlainObject(base) && ! $.isArray(base) ) {\n\t\t\t\tif ( base === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( typeof base === 'function' ) {\n\t\t\t\t\tbase = base( dt, conf );\n\n\t\t\t\t\tif ( ! base ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( typeof base === 'string' ) {\n\t\t\t\t\tif ( ! _dtButtons[ base ] ) {\n\t\t\t\t\t\tthrow 'Unknown button type: '+base;\n\t\t\t\t\t}\n\n\t\t\t\t\tbase = _dtButtons[ base ];\n\t\t\t\t}\n\n\t\t\t\tloop++;\n\t\t\t\tif ( loop > 30 ) {\n\t\t\t\t\t// Protect against misconfiguration killing the browser\n\t\t\t\t\tthrow 'Buttons: Too many iterations';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $.isArray( base ) ?\n\t\t\t\tbase :\n\t\t\t\t$.extend( {}, base );\n\t\t};\n\n\t\tconf = toConfObject( conf );\n\n\t\twhile ( conf && conf.extend ) {\n\t\t\t// Use `toConfObject` in case the button definition being extended\n\t\t\t// is itself a string or a function\n\t\t\tif ( ! _dtButtons[ conf.extend ] ) {\n\t\t\t\tthrow 'Cannot extend unknown button type: '+conf.extend;\n\t\t\t}\n\n\t\t\tvar objArray = toConfObject( _dtButtons[ conf.extend ] );\n\t\t\tif ( $.isArray( objArray ) ) {\n\t\t\t\treturn objArray;\n\t\t\t}\n\t\t\telse if ( ! objArray ) {\n\t\t\t\t// This is a little brutal as it might be possible to have a\n\t\t\t\t// valid button without the extend, but if there is no extend\n\t\t\t\t// then the host button would be acting in an undefined state\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stash the current class name\n\t\t\tvar originalClassName = objArray.className;\n\n\t\t\tconf = $.extend( {}, objArray, conf );\n\n\t\t\t// The extend will have overwritten the original class name if the\n\t\t\t// `conf` object also assigned a class, but we want to concatenate\n\t\t\t// them so they are list that is combined from all extended buttons\n\t\t\tif ( originalClassName && conf.className !== originalClassName ) {\n\t\t\t\tconf.className = originalClassName+' '+conf.className;\n\t\t\t}\n\n\t\t\t// Buttons to be added to a collection  -gives the ability to define\n\t\t\t// if buttons should be added to the start or end of a collection\n\t\t\tvar postfixButtons = conf.postfixButtons;\n\t\t\tif ( postfixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=postfixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.push( postfixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.postfixButtons = null;\n\t\t\t}\n\n\t\t\tvar prefixButtons = conf.prefixButtons;\n\t\t\tif ( prefixButtons ) {\n\t\t\t\tif ( ! conf.buttons ) {\n\t\t\t\t\tconf.buttons = [];\n\t\t\t\t}\n\n\t\t\t\tfor ( i=0, ien=prefixButtons.length ; i<ien ; i++ ) {\n\t\t\t\t\tconf.buttons.splice( i, 0, prefixButtons[i] );\n\t\t\t\t}\n\n\t\t\t\tconf.prefixButtons = null;\n\t\t\t}\n\n\t\t\t// Although we want the `conf` object to overwrite almost all of\n\t\t\t// the properties of the object being extended, the `extend`\n\t\t\t// property should come from the object being extended\n\t\t\tconf.extend = objArray.extend;\n\t\t}\n\n\t\treturn conf;\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n */\n\n/**\n * Show / hide a background layer behind a collection\n * @param  {boolean} Flag to indicate if the background should be shown or\n *   hidden \n * @param  {string} Class to assign to the background\n * @static\n */\nButtons.background = function ( show, className, fade ) {\n\tif ( fade === undefined ) {\n\t\tfade = 400;\n\t}\n\n\tif ( show ) {\n\t\t$('<div/>')\n\t\t\t.addClass( className )\n\t\t\t.css( 'display', 'none' )\n\t\t\t.appendTo( 'body' )\n\t\t\t.fadeIn( fade );\n\t}\n\telse {\n\t\t$('body > div.'+className)\n\t\t\t.fadeOut( fade, function () {\n\t\t\t\t$(this)\n\t\t\t\t\t.removeClass( className )\n\t\t\t\t\t.remove();\n\t\t\t} );\n\t}\n};\n\n/**\n * Instance selector - select Buttons instances based on an instance selector\n * value from the buttons assigned to a DataTable. This is only useful if\n * multiple instances are attached to a DataTable.\n * @param  {string|int|array} Instance selector - see `instance-selector`\n *   documentation on the DataTables site\n * @param  {array} Button instance array that was attached to the DataTables\n *   settings object\n * @return {array} Buttons instances\n * @static\n */\nButtons.instanceSelector = function ( group, buttons )\n{\n\tif ( ! group ) {\n\t\treturn $.map( buttons, function ( v ) {\n\t\t\treturn v.inst;\n\t\t} );\n\t}\n\n\tvar ret = [];\n\tvar names = $.map( buttons, function ( v ) {\n\t\treturn v.name;\n\t} );\n\n\t// Flatten the group selector into an array of single options\n\tvar process = function ( input ) {\n\t\tif ( $.isArray( input ) ) {\n\t\t\tfor ( var i=0, ien=input.length ; i<ien ; i++ ) {\n\t\t\t\tprocess( input[i] );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof input === 'string' ) {\n\t\t\tif ( input.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// String selector, list of names\n\t\t\t\tprocess( input.split(',') );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// String selector individual name\n\t\t\t\tvar idx = $.inArray( $.trim(input), names );\n\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tret.push( buttons[ idx ].inst );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( typeof input === 'number' ) {\n\t\t\t// Index selector\n\t\t\tret.push( buttons[ input ].inst );\n\t\t}\n\t};\n\t\n\tprocess( group );\n\n\treturn ret;\n};\n\n/**\n * Button selector - select one or more buttons from a selector input so some\n * operation can be performed on them.\n * @param  {array} Button instances array that the selector should operate on\n * @param  {string|int|node|jQuery|array} Button selector - see\n *   `button-selector` documentation on the DataTables site\n * @return {array} Array of objects containing `inst` and `idx` properties of\n *   the selected buttons so you know which instance each button belongs to.\n * @static\n */\nButtons.buttonSelector = function ( insts, selector )\n{\n\tvar ret = [];\n\tvar nodeBuilder = function ( a, buttons, baseIdx ) {\n\t\tvar button;\n\t\tvar idx;\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( button ) {\n\t\t\t\tidx = baseIdx !== undefined ?\n\t\t\t\t\tbaseIdx+i :\n\t\t\t\t\ti+'';\n\n\t\t\t\ta.push( {\n\t\t\t\t\tnode: button.node,\n\t\t\t\t\tname: button.conf.name,\n\t\t\t\t\tidx:  idx\n\t\t\t\t} );\n\n\t\t\t\tif ( button.buttons ) {\n\t\t\t\t\tnodeBuilder( a, button.buttons, idx+'-' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar run = function ( selector, inst ) {\n\t\tvar i, ien;\n\t\tvar buttons = [];\n\t\tnodeBuilder( buttons, inst.s.buttons );\n\n\t\tvar nodes = $.map( buttons, function (v) {\n\t\t\treturn v.node;\n\t\t} );\n\n\t\tif ( $.isArray( selector ) || selector instanceof $ ) {\n\t\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t\trun( selector[i], inst );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( selector === null || selector === undefined || selector === '*' ) {\n\t\t\t// Select all\n\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'number' ) {\n\t\t\t// Main button index selector\n\t\t\tret.push( {\n\t\t\t\tinst: inst,\n\t\t\t\tnode: inst.s.buttons[ selector ].node\n\t\t\t} );\n\t\t}\n\t\telse if ( typeof selector === 'string' ) {\n\t\t\tif ( selector.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// Split\n\t\t\t\tvar a = selector.split(',');\n\n\t\t\t\tfor ( i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\t\trun( $.trim(a[i]), inst );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( selector.match( /^\\d+(\\-\\d+)*$/ ) ) {\n\t\t\t\t// Sub-button index selector\n\t\t\t\tvar indexes = $.map( buttons, function (v) {\n\t\t\t\t\treturn v.idx;\n\t\t\t\t} );\n\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[ $.inArray( selector, indexes ) ].node\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse if ( selector.indexOf( ':name' ) !== -1 ) {\n\t\t\t\t// Button name selector\n\t\t\t\tvar name = selector.replace( ':name', '' );\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( buttons[i].name === name ) {\n\t\t\t\t\t\tret.push( {\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// jQuery selector on the nodes\n\t\t\t\t$( nodes ).filter( selector ).each( function () {\n\t\t\t\t\tret.push( {\n\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\tnode: this\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'object' && selector.nodeName ) {\n\t\t\t// Node selector\n\t\t\tvar idx = $.inArray( selector, nodes );\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: nodes[ idx ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t};\n\n\n\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\tvar inst = insts[i];\n\n\t\trun( selector, inst );\n\t}\n\n\treturn ret;\n};\n\n\n/**\n * Buttons defaults. For full documentation, please refer to the docs/option\n * directory or the DataTables site.\n * @type {Object}\n * @static\n */\nButtons.defaults = {\n\tbuttons: [ 'copy', 'excel', 'csv', 'pdf', 'print' ],\n\tname: 'main',\n\ttabIndex: 0,\n\tdom: {\n\t\tcontainer: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-buttons'\n\t\t},\n\t\tcollection: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-button-collection'\n\t\t},\n\t\tbutton: {\n\t\t\ttag: 'a',\n\t\t\tclassName: 'dt-button',\n\t\t\tactive: 'active',\n\t\t\tdisabled: 'disabled'\n\t\t},\n\t\tbuttonLiner: {\n\t\t\ttag: 'span',\n\t\t\tclassName: ''\n\t\t}\n\t}\n};\n\n/**\n * Version information\n * @type {string}\n * @static\n */\nButtons.version = '1.2.2';\n\n\n$.extend( _dtButtons, {\n\tcollection: {\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.collection', 'Collection' );\n\t\t},\n\t\tclassName: 'buttons-collection',\n\t\taction: function ( e, dt, button, config ) {\n\t\t\tvar host = button;\n\t\t\tvar hostOffset = host.offset();\n\t\t\tvar tableContainer = $( dt.table().container() );\n\t\t\tvar multiLevel = false;\n\n\t\t\t// Remove any old collection\n\t\t\tif ( $('div.dt-button-background').length ) {\n\t\t\t\tmultiLevel = $('div.dt-button-collection').offset();\n\t\t\t\t$('body').trigger( 'click.dtb-collection' );\n\t\t\t}\n\n\t\t\tconfig._collection\n\t\t\t\t.addClass( config.collectionLayout )\n\t\t\t\t.css( 'display', 'none' )\n\t\t\t\t.appendTo( 'body' )\n\t\t\t\t.fadeIn( config.fade );\n\n\t\t\tvar position = config._collection.css( 'position' );\n\n\t\t\tif ( multiLevel && position === 'absolute' ) {\n\t\t\t\tconfig._collection.css( {\n\t\t\t\t\ttop: multiLevel.top + 5, // magic numbers for a little offset\n\t\t\t\t\tleft: multiLevel.left + 5\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse if ( position === 'absolute' ) {\n\t\t\t\tconfig._collection.css( {\n\t\t\t\t\ttop: hostOffset.top + host.outerHeight(),\n\t\t\t\t\tleft: hostOffset.left\n\t\t\t\t} );\n\n\t\t\t\tvar listRight = hostOffset.left + config._collection.outerWidth();\n\t\t\t\tvar tableRight = tableContainer.offset().left + tableContainer.width();\n\t\t\t\tif ( listRight > tableRight ) {\n\t\t\t\t\tconfig._collection.css( 'left', hostOffset.left - ( listRight - tableRight ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fix position - centre on screen\n\t\t\t\tvar top = config._collection.height() / 2;\n\t\t\t\tif ( top > $(window).height() / 2 ) {\n\t\t\t\t\ttop = $(window).height() / 2;\n\t\t\t\t}\n\n\t\t\t\tconfig._collection.css( 'marginTop', top*-1 );\n\t\t\t}\n\n\t\t\tif ( config.background ) {\n\t\t\t\tButtons.background( true, config.backgroundClassName, config.fade );\n\t\t\t}\n\n\t\t\t// Need to break the 'thread' for the collection button being\n\t\t\t// activated by a click - it would also trigger this event\n\t\t\tsetTimeout( function () {\n\t\t\t\t// This is bonkers, but if we don't have a click listener on the\n\t\t\t\t// background element, iOS Safari will ignore the body click\n\t\t\t\t// listener below. An empty function here is all that is\n\t\t\t\t// required to make it work...\n\t\t\t\t$('div.dt-button-background').on( 'click.dtb-collection', function () {} );\n\n\t\t\t\t$('body').on( 'click.dtb-collection', function (e) {\n\t\t\t\t\t// andSelf is deprecated in jQ1.8, but we want 1.7 compat\n\t\t\t\t\tvar back = $.fn.addBack ? 'addBack' : 'andSelf';\n\n\t\t\t\t\tif ( ! $(e.target).parents()[back]().filter( config._collection ).length ) {\n\t\t\t\t\t\tconfig._collection\n\t\t\t\t\t\t\t.fadeOut( config.fade, function () {\n\t\t\t\t\t\t\t\tconfig._collection.detach();\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t$('div.dt-button-background').off( 'click.dtb-collection' );\n\t\t\t\t\t\tButtons.background( false, config.backgroundClassName, config.fade );\n\n\t\t\t\t\t\t$('body').off( 'click.dtb-collection' );\n\t\t\t\t\t\tdt.off( 'buttons-action.b-internal' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}, 10 );\n\n\t\t\tif ( config.autoClose ) {\n\t\t\t\tdt.on( 'buttons-action.b-internal', function () {\n\t\t\t\t\t$('div.dt-button-background').click();\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\tbackground: true,\n\t\tcollectionLayout: '',\n\t\tbackgroundClassName: 'dt-button-background',\n\t\tautoClose: false,\n\t\tfade: 400\n\t},\n\tcopy: function ( dt, conf ) {\n\t\tif ( _dtButtons.copyHtml5 ) {\n\t\t\treturn 'copyHtml5';\n\t\t}\n\t\tif ( _dtButtons.copyFlash && _dtButtons.copyFlash.available( dt, conf ) ) {\n\t\t\treturn 'copyFlash';\n\t\t}\n\t},\n\tcsv: function ( dt, conf ) {\n\t\t// Common option that will use the HTML5 or Flash export buttons\n\t\tif ( _dtButtons.csvHtml5 && _dtButtons.csvHtml5.available( dt, conf ) ) {\n\t\t\treturn 'csvHtml5';\n\t\t}\n\t\tif ( _dtButtons.csvFlash && _dtButtons.csvFlash.available( dt, conf ) ) {\n\t\t\treturn 'csvFlash';\n\t\t}\n\t},\n\texcel: function ( dt, conf ) {\n\t\t// Common option that will use the HTML5 or Flash export buttons\n\t\tif ( _dtButtons.excelHtml5 && _dtButtons.excelHtml5.available( dt, conf ) ) {\n\t\t\treturn 'excelHtml5';\n\t\t}\n\t\tif ( _dtButtons.excelFlash && _dtButtons.excelFlash.available( dt, conf ) ) {\n\t\t\treturn 'excelFlash';\n\t\t}\n\t},\n\tpdf: function ( dt, conf ) {\n\t\t// Common option that will use the HTML5 or Flash export buttons\n\t\tif ( _dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available( dt, conf ) ) {\n\t\t\treturn 'pdfHtml5';\n\t\t}\n\t\tif ( _dtButtons.pdfFlash && _dtButtons.pdfFlash.available( dt, conf ) ) {\n\t\t\treturn 'pdfFlash';\n\t\t}\n\t},\n\tpageLength: function ( dt ) {\n\t\tvar lengthMenu = dt.settings()[0].aLengthMenu;\n\t\tvar vals = $.isArray( lengthMenu[0] ) ? lengthMenu[0] : lengthMenu;\n\t\tvar lang = $.isArray( lengthMenu[0] ) ? lengthMenu[1] : lengthMenu;\n\t\tvar text = function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.pageLength', {\n\t\t\t\t\"-1\": 'Show all rows',\n\t\t\t\t_:    'Show %d rows'\n\t\t\t}, dt.page.len() );\n\t\t};\n\n\t\treturn {\n\t\t\textend: 'collection',\n\t\t\ttext: text,\n\t\t\tclassName: 'buttons-page-length',\n\t\t\tautoClose: true,\n\t\t\tbuttons: $.map( vals, function ( val, i ) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: lang[i],\n\t\t\t\t\taction: function ( e, dt ) {\n\t\t\t\t\t\tdt.page.len( val ).draw();\n\t\t\t\t\t},\n\t\t\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\tvar fn = function () {\n\t\t\t\t\t\t\tthat.active( dt.page.len() === val );\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdt.on( 'length.dt'+conf.namespace, fn );\n\t\t\t\t\t\tfn();\n\t\t\t\t\t},\n\t\t\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} ),\n\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\tvar that = this;\n\t\t\t\tdt.on( 'length.dt'+conf.namespace, function () {\n\t\t\t\t\tthat.text( text( dt ) );\n\t\t\t\t} );\n\t\t\t},\n\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Buttons group and individual button selector\nDataTable.Api.register( 'buttons()', function ( group, selector ) {\n\t// Argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = group;\n\t\tgroup = undefined;\n\t}\n\n\tthis.selector.buttonGroup = group;\n\n\tvar res = this.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\treturn Buttons.buttonSelector(\n\t\t\t\tButtons.instanceSelector( group, ctx._buttons ),\n\t\t\t\tselector\n\t\t\t);\n\t\t}\n\t}, true );\n\n\tres._groupSelector = group;\n\treturn res;\n} );\n\n// Individual button selector\nDataTable.Api.register( 'button()', function ( group, selector ) {\n\t// just run buttons() and truncate\n\tvar buttons = this.buttons( group, selector );\n\n\tif ( buttons.length > 1 ) {\n\t\tbuttons.splice( 1, buttons.length );\n\t}\n\n\treturn buttons;\n} );\n\n// Active buttons\nDataTable.Api.registerPlural( 'buttons().active()', 'button().active()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.active( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.active( set.node, flag );\n\t} );\n} );\n\n// Get / set button action\nDataTable.Api.registerPlural( 'buttons().action()', 'button().action()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.action( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.action( set.node, action );\n\t} );\n} );\n\n// Enable / disable buttons\nDataTable.Api.register( ['buttons().enable()', 'button().enable()'], function ( flag ) {\n\treturn this.each( function ( set ) {\n\t\tset.inst.enable( set.node, flag );\n\t} );\n} );\n\n// Disable buttons\nDataTable.Api.register( ['buttons().disable()', 'button().disable()'], function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.disable( set.node );\n\t} );\n} );\n\n// Get button nodes\nDataTable.Api.registerPlural( 'buttons().nodes()', 'button().node()', function () {\n\tvar jq = $();\n\n\t// jQuery will automatically reduce duplicates to a single entry\n\t$( this.each( function ( set ) {\n\t\tjq = jq.add( set.inst.node( set.node ) );\n\t} ) );\n\n\treturn jq;\n} );\n\n// Get / set button text (i.e. the button labels)\nDataTable.Api.registerPlural( 'buttons().text()', 'button().text()', function ( label ) {\n\tif ( label === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.text( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.text( set.node, label );\n\t} );\n} );\n\n// Trigger a button's action\nDataTable.Api.registerPlural( 'buttons().trigger()', 'button().trigger()', function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.node( set.node ).trigger( 'click' );\n\t} );\n} );\n\n// Get the container elements\nDataTable.Api.registerPlural( 'buttons().containers()', 'buttons().container()', function () {\n\tvar jq = $();\n\tvar groupSelector = this._groupSelector;\n\n\t// We need to use the group selector directly, since if there are no buttons\n\t// the result set will be empty\n\tthis.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\tvar insts = Buttons.instanceSelector( groupSelector, ctx._buttons );\n\n\t\t\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\t\t\tjq = jq.add( insts[i].container() );\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn jq;\n} );\n\n// Add a new button\nDataTable.Api.register( 'button().add()', function ( idx, conf ) {\n\tvar ctx = this.context;\n\n\t// Don't use `this` as it could be empty - select the instances directly\n\tif ( ctx.length ) {\n\t\tvar inst = Buttons.instanceSelector( this._groupSelector, ctx[0]._buttons );\n\n\t\tif ( inst.length ) {\n\t\t\tinst[0].add( conf, idx );\n\t\t}\n\t}\n\n\treturn this.button( this._groupSelector, idx );\n} );\n\n// Destroy the button sets selected\nDataTable.Api.register( 'buttons().destroy()', function () {\n\tthis.pluck( 'inst' ).unique().each( function ( inst ) {\n\t\tinst.destroy();\n\t} );\n\n\treturn this;\n} );\n\n// Remove a button\nDataTable.Api.registerPlural( 'buttons().remove()', 'buttons().remove()', function () {\n\tthis.each( function ( set ) {\n\t\tset.inst.remove( set.node );\n\t} );\n\n\treturn this;\n} );\n\n// Information box that can be used by buttons\nvar _infoTimer;\nDataTable.Api.register( 'buttons.info()', function ( title, message, time ) {\n\tvar that = this;\n\n\tif ( title === false ) {\n\t\t$('#datatables_buttons_info').fadeOut( function () {\n\t\t\t$(this).remove();\n\t\t} );\n\t\tclearTimeout( _infoTimer );\n\t\t_infoTimer = null;\n\n\t\treturn this;\n\t}\n\n\tif ( _infoTimer ) {\n\t\tclearTimeout( _infoTimer );\n\t}\n\n\tif ( $('#datatables_buttons_info').length ) {\n\t\t$('#datatables_buttons_info').remove();\n\t}\n\n\ttitle = title ? '<h2>'+title+'</h2>' : '';\n\n\t$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\n\t\t.html( title )\n\t\t.append( $('<div/>')[ typeof message === 'string' ? 'html' : 'append' ]( message ) )\n\t\t.css( 'display', 'none' )\n\t\t.appendTo( 'body' )\n\t\t.fadeIn();\n\n\tif ( time !== undefined && time !== 0 ) {\n\t\t_infoTimer = setTimeout( function () {\n\t\t\tthat.buttons.info( false );\n\t\t}, time );\n\t}\n\n\treturn this;\n} );\n\n// Get data from the table for export - this is common to a number of plug-in\n// buttons so it is included in the Buttons core library\nDataTable.Api.register( 'buttons.exportData()', function ( options ) {\n\tif ( this.context.length ) {\n\t\treturn _exportData( new DataTable.Api( this.context[0] ), options );\n\t}\n} );\n\n\nvar _exportTextarea = $('<textarea/>')[0];\nvar _exportData = function ( dt, inOpts )\n{\n\tvar config = $.extend( true, {}, {\n\t\trows:           null,\n\t\tcolumns:        '',\n\t\tmodifier:       {\n\t\t\tsearch: 'applied',\n\t\t\torder:  'applied'\n\t\t},\n\t\torthogonal:     'display',\n\t\tstripHtml:      true,\n\t\tstripNewlines:  true,\n\t\tdecodeEntities: true,\n\t\ttrim:           true,\n\t\tformat:         {\n\t\t\theader: function ( d ) {\n\t\t\t\treturn strip( d );\n\t\t\t},\n\t\t\tfooter: function ( d ) {\n\t\t\t\treturn strip( d );\n\t\t\t},\n\t\t\tbody: function ( d ) {\n\t\t\t\treturn strip( d );\n\t\t\t}\n\t\t}\n\t}, inOpts );\n\n\tvar strip = function ( str ) {\n\t\tif ( typeof str !== 'string' ) {\n\t\t\treturn str;\n\t\t}\n\n\t\tif ( config.stripHtml ) {\n\t\t\tstr = str.replace( /<[^>]*>/g, '' );\n\t\t}\n\n\t\tif ( config.trim ) {\n\t\t\tstr = str.replace( /^\\s+|\\s+$/g, '' );\n\t\t}\n\n\t\tif ( config.stripNewlines ) {\n\t\t\tstr = str.replace( /\\n/g, ' ' );\n\t\t}\n\n\t\tif ( config.decodeEntities ) {\n\t\t\t_exportTextarea.innerHTML = str;\n\t\t\tstr = _exportTextarea.value;\n\t\t}\n\n\t\treturn str;\n\t};\n\n\n\tvar header = dt.columns( config.columns ).indexes().map( function (idx) {\n\t\tvar el = dt.column( idx ).header();\n\t\treturn config.format.header( el.innerHTML, idx, el );\n\t} ).toArray();\n\n\tvar footer = dt.table().footer() ?\n\t\tdt.columns( config.columns ).indexes().map( function (idx) {\n\t\t\tvar el = dt.column( idx ).footer();\n\t\t\treturn config.format.footer( el ? el.innerHTML : '', idx, el );\n\t\t} ).toArray() :\n\t\tnull;\n\n\tvar selectedCells = dt.cells( config.rows, config.columns, config.modifier );\n\tvar cells = selectedCells\n\t\t.render( config.orthogonal )\n\t\t.toArray();\n\tvar cellNodes = selectedCells\n\t\t.nodes()\n\t\t.toArray();\n\n\tvar columns = header.length;\n\tvar rows = columns > 0 ? cells.length / columns : 0;\n\tvar body = new Array( rows );\n\tvar cellCounter = 0;\n\n\tfor ( var i=0, ien=rows ; i<ien ; i++ ) {\n\t\tvar row = new Array( columns );\n\n\t\tfor ( var j=0 ; j<columns ; j++ ) {\n\t\t\trow[j] = config.format.body( cells[ cellCounter ], i, j, cellNodes[ cellCounter ] );\n\t\t\tcellCounter++;\n\t\t}\n\n\t\tbody[i] = row;\n\t}\n\n\treturn {\n\t\theader: header,\n\t\tfooter: footer,\n\t\tbody:   body\n\t};\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interface\n */\n\n// Attach to DataTables objects for global access\n$.fn.dataTable.Buttons = Buttons;\n$.fn.DataTable.Buttons = Buttons;\n\n\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n// be removed in future.\n$(document).on( 'init.dt plugin-init.dt', function (e, settings) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n\tif ( opts && ! settings._buttons ) {\n\t\tnew Buttons( settings, opts ).container();\n\t}\n} );\n\n// DataTables `dom` feature option\nDataTable.ext.feature.push( {\n\tfnInit: function( settings ) {\n\t\tvar api = new DataTable.Api( settings );\n\t\tvar opts = api.init().buttons || DataTable.defaults.buttons;\n\n\t\treturn new Buttons( api, opts ).container();\n\t},\n\tcFeature: \"B\"\n} );\n\n\nreturn Buttons;\n}));\n"]},"metadata":{},"sourceType":"module"}