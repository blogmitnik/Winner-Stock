{"ast":null,"code":"/*!\n * Responsive Tables v5.0.4 (http://gergeo.se/RWD-Table-Patterns)\n * This is an awesome solution for responsive tables with complex data.\n * Authors: Nadan Gergeo <nadan.gergeo@gmail.com> (www.gergeo.se) & Maggie Wachs (www.filamentgroup.com)\n * Licensed under MIT (https://github.com/nadangergeo/RWD-Table-Patterns/blob/master/LICENSE-MIT)\n */\n(function ($) {\n  'use strict'; // RESPONSIVE TABLE CLASS DEFINITION\n  // ==========================\n\n  var ResponsiveTable = function ResponsiveTable(element, options) {\n    var that = this;\n    this.options = options;\n    this.$tableWrapper = null; //defined later in wrapTable\n\n    this.$tableScrollWrapper = $(element); //defined later in wrapTable\n\n    this.$table = $(element).find('table');\n\n    if (this.$table.length !== 1) {\n      throw new Error('Exactly one table is expected in a .table-responsive div.');\n    } //apply pattern option as data-attribute, in case it was set via js\n\n\n    this.$tableScrollWrapper.attr('data-pattern', this.options.pattern); //if the table doesn't have a unique id, give it one.\n    //The id will be a random hexadecimal value, prefixed with id.\n    //Used for triggers with displayAll button.\n\n    this.id = this.$table.prop('id') || this.$tableScrollWrapper.prop('id') || 'id' + Math.random().toString(16).slice(2);\n    this.$tableClone = null; //defined farther down\n\n    this.$stickyTableHeader = null; //defined farther down\n    //good to have - for easy access\n\n    this.$thead = this.$table.find('thead');\n    this.$tbody = this.$table.find('tbody');\n    this.$hdrCells = this.$thead.find('th');\n    this.$bodyRows = this.$tbody.find('tr'); //toolbar and buttons\n\n    this.$btnToolbar = null; //defined farther down\n\n    this.$dropdownGroup = null; //defined farther down\n\n    this.$dropdownBtn = null; //defined farther down\n\n    this.$dropdownContainer = null; //defined farther down\n\n    this.$displayAllBtn = null; //defined farther down\n\n    this.$focusGroup = null; //defined farther down\n\n    this.$focusBtn = null; //defined farther down\n    //misc\n\n    this.displayAllTrigger = 'display-all-' + this.id + '.responsive-table';\n    this.idPrefix = this.id + '-col-'; // Check if iOS\n    // property to save performance\n\n    this.iOS = isIOS(); // Setup table\n    // -------------------------\n    //wrap table\n\n    this.wrapTable(); //create toolbar with buttons\n\n    this.createButtonToolbar(); // Setup cells\n    // -------------------------\n    //setup header cells\n\n    this.setupHdrCells(); //setup standard cells\n\n    this.setupStandardCells(); //create sticky table head\n\n    if (this.options.stickyTableHeader) {\n      this.createStickyTableHeader();\n    } // hide toggle button if the list is empty\n\n\n    if (this.$dropdownContainer.is(':empty')) {\n      this.$dropdownGroup.hide();\n    } // Event binding\n    // -------------------------\n    // on orientchange, resize and displayAllBtn-click\n\n\n    $(window).bind('orientationchange resize ' + this.displayAllTrigger, function () {\n      //update the inputs' checked status\n      that.$dropdownContainer.find('input').trigger('updateCheck'); //update colspan and visibility of spanning cells\n\n      $.proxy(that.updateSpanningCells(), that);\n    });\n  };\n\n  ResponsiveTable.DEFAULTS = {\n    pattern: 'priority-columns',\n    stickyTableHeader: true,\n    fixedNavbar: '.navbar-fixed-top',\n    // Is there a fixed navbar? The stickyTableHeader needs to know about it!\n    addDisplayAllBtn: true,\n    // should it have a display-all button?\n    addFocusBtn: true,\n    // should it have a focus button?\n    focusBtnIcon: 'glyphicon glyphicon-screenshot'\n  }; // Wrap table\n\n  ResponsiveTable.prototype.wrapTable = function () {\n    this.$tableScrollWrapper.wrap('<div class=\"table-wrapper\"/>');\n    this.$tableWrapper = this.$tableScrollWrapper.parent();\n  }; // Create toolbar with buttons\n\n\n  ResponsiveTable.prototype.createButtonToolbar = function () {\n    var that = this;\n    this.$btnToolbar = $('<div class=\"btn-toolbar\" />');\n    this.$dropdownGroup = $('<div class=\"btn-group dropdown-btn-group pull-right\" />');\n    this.$dropdownBtn = $('<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">Display <span class=\"caret\"></span></button>');\n    this.$dropdownContainer = $('<ul class=\"dropdown-menu\"/>'); // Focus btn\n\n    if (this.options.addFocusBtn) {\n      // Create focus btn group\n      this.$focusGroup = $('<div class=\"btn-group focus-btn-group\" />'); // Create focus btn\n\n      this.$focusBtn = $('<button class=\"btn btn-default\">Focus</button>');\n\n      if (this.options.focusBtnIcon) {\n        this.$focusBtn.prepend('<span class=\"' + this.options.focusBtnIcon + '\"></span> ');\n      } // Add btn to group\n\n\n      this.$focusGroup.append(this.$focusBtn); // Add focus btn to toolbar\n\n      this.$btnToolbar.append(this.$focusGroup); // bind click on focus btn\n\n      this.$focusBtn.click(function () {\n        $.proxy(that.activateFocus(), that);\n      }); // bind click on rows\n\n      this.$bodyRows.click(function () {\n        $.proxy(that.focusOnRow($(this)), that);\n      });\n    } // Display-all btn\n\n\n    if (this.options.addDisplayAllBtn) {\n      // Create display-all btn\n      this.$displayAllBtn = $('<button class=\"btn btn-default\">Display all</button>'); // Add display-all btn to dropdown-btn-group\n\n      this.$dropdownGroup.append(this.$displayAllBtn);\n\n      if (this.$table.hasClass('display-all')) {\n        // add 'btn-primary' class to btn to indicate that display all is activated\n        this.$displayAllBtn.addClass('btn-primary');\n      } // bind click on display-all btn\n\n\n      this.$displayAllBtn.click(function () {\n        $.proxy(that.displayAll(null, true), that);\n      });\n    } //add dropdown btn and menu to dropdown-btn-group\n\n\n    this.$dropdownGroup.append(this.$dropdownBtn).append(this.$dropdownContainer); //add dropdown group to toolbar\n\n    this.$btnToolbar.append(this.$dropdownGroup); // add toolbar above table\n\n    this.$tableScrollWrapper.before(this.$btnToolbar);\n  };\n\n  ResponsiveTable.prototype.clearAllFocus = function () {\n    this.$bodyRows.removeClass('unfocused');\n    this.$bodyRows.removeClass('focused');\n  };\n\n  ResponsiveTable.prototype.activateFocus = function () {\n    // clear all\n    this.clearAllFocus();\n\n    if (this.$focusBtn) {\n      this.$focusBtn.toggleClass('btn-primary');\n    }\n\n    this.$table.toggleClass('focus-on');\n  };\n\n  ResponsiveTable.prototype.focusOnRow = function (row) {\n    // only if activated (.i.e the table has the class focus-on)\n    if (this.$table.hasClass('focus-on')) {\n      var alreadyFocused = $(row).hasClass('focused'); // clear all\n\n      this.clearAllFocus();\n\n      if (!alreadyFocused) {\n        this.$bodyRows.addClass('unfocused');\n        $(row).addClass('focused');\n      }\n    }\n  };\n  /**\n   * @param activate Forces the displayAll to be active or not. If anything else than bool, it will not force the state so it will toggle as normal.\n   * @param trigger Bool to indicate if the displayAllTrigger should be triggered.\n   */\n\n\n  ResponsiveTable.prototype.displayAll = function (activate, trigger) {\n    if (this.$displayAllBtn) {\n      // add 'btn-primary' class to btn to indicate that display all is activated\n      this.$displayAllBtn.toggleClass('btn-primary', activate);\n    }\n\n    this.$table.toggleClass('display-all', activate);\n\n    if (this.$tableClone) {\n      this.$tableClone.toggleClass('display-all', activate);\n    }\n\n    if (trigger) {\n      $(window).trigger(this.displayAllTrigger);\n    }\n  };\n\n  ResponsiveTable.prototype.preserveDisplayAll = function () {\n    var displayProp = 'table-cell';\n\n    if ($('html').hasClass('lt-ie9')) {\n      displayProp = 'inline';\n    }\n\n    $(this.$table).find('th, td').css('display', displayProp);\n\n    if (this.$tableClone) {\n      $(this.$tableClone).find('th, td').css('display', displayProp);\n    }\n  };\n\n  ResponsiveTable.prototype.createStickyTableHeader = function () {\n    var that = this; //clone table head\n\n    that.$tableClone = that.$table.clone(); //replace ids\n\n    that.$tableClone.prop('id', this.id + '-clone');\n    that.$tableClone.find('[id]').each(function () {\n      $(this).prop('id', $(this).prop('id') + '-clone');\n    }); // wrap table clone (this is our \"sticky table header\" now)\n\n    that.$tableClone.wrap('<div class=\"sticky-table-header\"/>');\n    that.$stickyTableHeader = that.$tableClone.parent(); // give the sticky table header same height as original\n\n    that.$stickyTableHeader.css('height', that.$thead.height() + 2); //insert sticky table header\n\n    if ($('html').hasClass('lt-ie10')) {\n      that.$tableWrapper.prepend(that.$stickyTableHeader);\n    } else {\n      that.$table.before(that.$stickyTableHeader);\n    } // var bodyRowsClone = $(tableClone).find('tbody').find('tr');\n    // bind scroll and resize with updateStickyTableHeader\n\n\n    $(window).bind('scroll resize', function () {\n      $.proxy(that.updateStickyTableHeader(), that);\n    });\n    $(that.$tableScrollWrapper).bind('scroll', function () {\n      $.proxy(that.updateStickyTableHeader(), that);\n    });\n  }; // Help function for sticky table header\n\n\n  ResponsiveTable.prototype.updateStickyTableHeader = function () {\n    var that = this,\n        top = 0,\n        offsetTop = that.$table.offset().top,\n        scrollTop = $(window).scrollTop() - 1,\n        //-1 to accomodate for top border\n    maxTop = that.$table.height() - that.$stickyTableHeader.height(),\n        rubberBandOffset = scrollTop + $(window).height() - $(document).height(),\n        //          useFixedSolution  = that.$table.parent().prop('scrollWidth') === that.$table.parent().width();\n    useFixedSolution = !that.iOS,\n        navbarHeight = 0; //Is there a fixed navbar?\n\n    if ($(that.options.fixedNavbar).length) {\n      var $navbar = $(that.options.fixedNavbar).first();\n      navbarHeight = $navbar.height() + 2;\n      scrollTop = scrollTop + navbarHeight;\n    }\n\n    var shouldBeVisible = scrollTop > offsetTop && scrollTop < offsetTop + that.$table.height();\n\n    if (useFixedSolution) {\n      that.$stickyTableHeader.scrollLeft(that.$tableScrollWrapper.scrollLeft()); //add fixedSolution class\n\n      that.$stickyTableHeader.addClass('fixed-solution'); // Calculate top property value (-1 to accomodate for top border)\n\n      top = navbarHeight - 1; // When the about to scroll past the table, move sticky table head up\n\n      if (scrollTop - offsetTop > maxTop) {\n        top -= scrollTop - offsetTop - maxTop;\n        that.$stickyTableHeader.addClass('border-radius-fix');\n      } else {\n        that.$stickyTableHeader.removeClass('border-radius-fix');\n      }\n\n      if (shouldBeVisible) {\n        //show sticky table header and update top and width.\n        that.$stickyTableHeader.css({\n          'visibility': 'visible',\n          'top': top + 'px',\n          'width': that.$tableScrollWrapper.innerWidth() + 'px'\n        }); //no more stuff to do - return!\n\n        return;\n      } else {\n        //hide sticky table header and reset width\n        that.$stickyTableHeader.css({\n          'visibility': 'hidden',\n          'width': 'auto'\n        });\n      }\n    } else {\n      // alternate method\n      //remove fixedSolution class\n      that.$stickyTableHeader.removeClass('fixed-solution'); //animation duration\n\n      var animationDuration = 400; // Calculate top property value (-1 to accomodate for top border)\n\n      top = scrollTop - offsetTop - 1; // Make sure the sticky table header doesn't slide up/down too far.\n\n      if (top < 0) {\n        top = 0;\n      } else if (top > maxTop) {\n        top = maxTop;\n      } // Accomandate for rubber band effect\n\n\n      if (rubberBandOffset > 0) {\n        top = top - rubberBandOffset;\n      }\n\n      if (shouldBeVisible) {\n        //show sticky table header (animate repositioning)\n        that.$stickyTableHeader.css({\n          'visibility': 'visible'\n        });\n        that.$stickyTableHeader.animate({\n          'top': top + 'px'\n        }, animationDuration); // hide original table head\n\n        that.$thead.css({\n          'visibility': 'hidden'\n        });\n      } else {\n        that.$stickyTableHeader.animate({\n          'top': '0'\n        }, animationDuration, function () {\n          // show original table head\n          that.$thead.css({\n            'visibility': 'visible'\n          }); // hide sticky table head\n\n          that.$stickyTableHeader.css({\n            'visibility': 'hidden'\n          });\n        });\n      }\n    }\n  }; // Setup header cells\n\n\n  ResponsiveTable.prototype.setupHdrCells = function () {\n    var that = this; // for each header column\n\n    that.$hdrCells.each(function (i) {\n      var $th = $(this),\n          id = $th.prop('id'),\n          thText = $th.text(); // assign an id to each header, if none is in the markup\n\n      if (!id) {\n        id = that.idPrefix + i;\n        $th.prop('id', id);\n      }\n\n      if (thText === '') {\n        thText = $th.attr('data-col-name');\n      } // create the hide/show toggle for the current column\n\n\n      if ($th.is('[data-priority]')) {\n        var $toggle = $('<li class=\"checkbox-row\"><input type=\"checkbox\" name=\"toggle-' + id + '\" id=\"toggle-' + id + '\" value=\"' + id + '\" /> <label for=\"toggle-' + id + '\">' + thText + '</label></li>');\n        var $checkbox = $toggle.find('input');\n        that.$dropdownContainer.append($toggle);\n        $toggle.click(function () {\n          // console.log(\"cliiiick!\");\n          $checkbox.prop('checked', !$checkbox.prop('checked'));\n          $checkbox.trigger('change');\n        }); //Freakin' IE fix\n\n        if ($('html').hasClass('lt-ie9')) {\n          $checkbox.click(function () {\n            $(this).trigger('change');\n          });\n        }\n\n        $toggle.find('label').click(function (event) {\n          event.stopPropagation();\n        });\n        $toggle.find('input').click(function (event) {\n          event.stopPropagation();\n        }).change(function () {\n          // bind change event on checkbox\n          var $checkbox = $(this),\n              val = $checkbox.val(),\n              //all cells under the column, including the header and its clone\n          $cells = that.$tableWrapper.find('#' + val + ', #' + val + '-clone, [data-columns~=' + val + ']'); //if display-all is on - save state and carry on\n\n          if (that.$table.hasClass('display-all')) {\n            //save state\n            $.proxy(that.preserveDisplayAll(), that); //remove display all class\n\n            that.$table.removeClass('display-all');\n\n            if (that.$tableClone) {\n              that.$tableClone.removeClass('display-all');\n            } //switch off button\n\n\n            that.$displayAllBtn.removeClass('btn-primary');\n          } // loop through the cells\n\n\n          $cells.each(function () {\n            var $cell = $(this); // is the checkbox checked now?\n\n            if ($checkbox.is(':checked')) {\n              // if the cell was already visible, it means its original colspan was >1\n              // so let's increment the colspan\n              if ($cell.css('display') !== 'none') {\n                $cell.prop('colSpan', parseInt($cell.prop('colSpan')) + 1);\n              } // show cell\n\n\n              $cell.show();\n            } // checkbox has been unchecked\n            else {\n                // decrement colSpan if it's not 1 (because colSpan should not be 0)\n                if (parseInt($cell.prop('colSpan')) > 1) {\n                  $cell.prop('colSpan', parseInt($cell.prop('colSpan')) - 1);\n                } // otherwise, hide the cell\n                else {\n                    $cell.hide();\n                  }\n              }\n          });\n        }).bind('updateCheck', function () {\n          if ($th.css('display') !== 'none') {\n            $(this).prop('checked', true);\n          } else {\n            $(this).prop('checked', false);\n          }\n        }).trigger('updateCheck');\n      } // end if\n\n    }); // end hdrCells loop \n  }; // Setup standard cells\n  // assign matching \"data-columns\" attributes to the associated cells \"(cells with colspan>1 has multiple columns).\n\n\n  ResponsiveTable.prototype.setupStandardCells = function () {\n    var that = this; // for each body rows\n\n    that.$bodyRows.each(function () {\n      var idStart = 0; // for each cell\n\n      $(this).find('th, td').each(function () {\n        var $cell = $(this);\n        var columnsAttr = '';\n        var colSpan = $cell.prop('colSpan');\n        var numOfHidden = 0; // loop through columns that the cell spans over\n\n        for (var k = idStart; k < idStart + colSpan; k++) {\n          // add column id\n          columnsAttr = columnsAttr + ' ' + that.idPrefix + k; // get column header\n\n          var $colHdr = that.$tableScrollWrapper.find('#' + that.idPrefix + k); // copy data-priority attribute from column header\n\n          var dataPriority = $colHdr.attr('data-priority');\n\n          if (dataPriority) {\n            $cell.attr('data-priority', dataPriority);\n          }\n\n          if ($colHdr.css('display') === 'none') {\n            numOfHidden++;\n          }\n        } // if colSpan is more than 1\n\n\n        if (colSpan > 1) {\n          //give it the class 'spn-cell';\n          $cell.addClass('spn-cell'); // if one of the columns that the cell belongs to is visible then show the cell\n\n          if (numOfHidden !== colSpan) {\n            $cell.show();\n          } else {\n            $cell.hide(); //just in case\n          }\n        } //update colSpan to match number of visible columns that i belongs to\n\n\n        $cell.prop('colSpan', Math.max(colSpan - numOfHidden, 1)); //remove whitespace in begining of string.\n\n        columnsAttr = columnsAttr.substring(1); //set attribute to cell\n\n        $cell.attr('data-columns', columnsAttr); //increment idStart with the current cells colSpan.\n\n        idStart = idStart + colSpan;\n      });\n    });\n  }; // Update colspan and visibility of spanning cells\n\n\n  ResponsiveTable.prototype.updateSpanningCells = function () {\n    var that = this; // iterate through cells with class 'spn-cell'\n\n    that.$table.find('.spn-cell').each(function () {\n      var $cell = $(this);\n      var columnsAttr = $cell.attr('data-columns').split(' ');\n      var colSpan = columnsAttr.length;\n      var numOfHidden = 0;\n\n      for (var i = 0; i < colSpan; i++) {\n        if ($('#' + columnsAttr[i]).css('display') === 'none') {\n          numOfHidden++;\n        }\n      } // if one of the columns that the cell belongs to is visible then show the cell\n\n\n      if (numOfHidden !== colSpan) {\n        $cell.show();\n      } else {\n        $cell.hide(); //just in case\n      } // console.log('numOfHidden: ' + numOfHidden);\n      // console.log(\"new colSpan:\" +Math.max((colSpan - numOfHidden),1));\n      //update colSpan to match number of visible columns that i belongs to\n\n\n      $cell.prop('colSpan', Math.max(colSpan - numOfHidden, 1));\n    });\n  }; // RESPONSIVE TABLE PLUGIN DEFINITION\n  // ===========================\n\n\n  var old = $.fn.responsiveTable;\n\n  $.fn.responsiveTable = function (option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('responsiveTable');\n      var options = $.extend({}, ResponsiveTable.DEFAULTS, $this.data(), typeof option === 'object' && option);\n\n      if (options.pattern === '') {\n        return;\n      }\n\n      if (!data) {\n        $this.data('responsiveTable', data = new ResponsiveTable(this, options));\n      }\n\n      if (typeof option === 'string') {\n        data[option]();\n      }\n    });\n  };\n\n  $.fn.responsiveTable.Constructor = ResponsiveTable; // RESPONSIVE TABLE NO CONFLICT\n  // =====================\n\n  $.fn.responsiveTable.noConflict = function () {\n    $.fn.responsiveTable = old;\n    return this;\n  }; // RESPONSIVE TABLE DATA-API\n  // ==================\n\n\n  $(document).on('ready.responsive-table.data-api', function () {\n    $('[data-pattern]').each(function () {\n      var $tableScrollWrapper = $(this);\n      $tableScrollWrapper.responsiveTable($tableScrollWrapper.data());\n    });\n  }); // DROPDOWN\n  // ==========================\n  // Prevent dropdown from closing when toggling checkbox\n\n  $(document).on('click.dropdown.data-api', '.dropdown-menu .checkbox-row', function (e) {\n    e.stopPropagation();\n  }); // FEATURE DETECTION (instead of Modernizr)\n  // ==========================\n  // media queries\n\n  function mediaQueriesSupported() {\n    return typeof window.matchMedia !== 'undefined' || typeof window.msMatchMedia !== 'undefined' || typeof window.styleMedia !== 'undefined';\n  } // touch\n\n\n  function hasTouch() {\n    return 'ontouchstart' in window;\n  } // Checks if current browser is on IOS.\n\n\n  function isIOS() {\n    return !!(navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i));\n  }\n\n  $(document).ready(function () {\n    // Change `no-js` to `js`\n    $('html').removeClass('no-js').addClass('js'); // Add mq/no-mq class to html\n\n    if (mediaQueriesSupported()) {\n      $('html').addClass('mq');\n    } else {\n      $('html').addClass('no-mq');\n    } // Add touch/no-touch class to html\n\n\n    if (hasTouch()) {\n      $('html').addClass('touch');\n    } else {\n      $('html').addClass('no-touch');\n    }\n  });\n})(jQuery);","map":{"version":3,"sources":["/Users/david/Winner-Stock/app/javascript/packs/rwd-table.js"],"names":["$","ResponsiveTable","element","options","that","$tableWrapper","$tableScrollWrapper","$table","find","length","Error","attr","pattern","id","prop","Math","random","toString","slice","$tableClone","$stickyTableHeader","$thead","$tbody","$hdrCells","$bodyRows","$btnToolbar","$dropdownGroup","$dropdownBtn","$dropdownContainer","$displayAllBtn","$focusGroup","$focusBtn","displayAllTrigger","idPrefix","iOS","isIOS","wrapTable","createButtonToolbar","setupHdrCells","setupStandardCells","stickyTableHeader","createStickyTableHeader","is","hide","window","bind","trigger","proxy","updateSpanningCells","DEFAULTS","fixedNavbar","addDisplayAllBtn","addFocusBtn","focusBtnIcon","prototype","wrap","parent","prepend","append","click","activateFocus","focusOnRow","hasClass","addClass","displayAll","before","clearAllFocus","removeClass","toggleClass","row","alreadyFocused","activate","preserveDisplayAll","displayProp","css","clone","each","height","updateStickyTableHeader","top","offsetTop","offset","scrollTop","maxTop","rubberBandOffset","document","useFixedSolution","navbarHeight","$navbar","first","shouldBeVisible","scrollLeft","innerWidth","animationDuration","animate","i","$th","thText","text","$toggle","$checkbox","event","stopPropagation","change","val","$cells","$cell","parseInt","show","idStart","columnsAttr","colSpan","numOfHidden","k","$colHdr","dataPriority","max","substring","split","old","fn","responsiveTable","option","$this","data","extend","Constructor","noConflict","on","e","mediaQueriesSupported","matchMedia","msMatchMedia","styleMedia","hasTouch","navigator","userAgent","match","ready","jQuery"],"mappings":"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","sourcesContent":["/*!\n * Responsive Tables v5.0.4 (http://gergeo.se/RWD-Table-Patterns)\n * This is an awesome solution for responsive tables with complex data.\n * Authors: Nadan Gergeo <nadan.gergeo@gmail.com> (www.gergeo.se) & Maggie Wachs (www.filamentgroup.com)\n * Licensed under MIT (https://github.com/nadangergeo/RWD-Table-Patterns/blob/master/LICENSE-MIT)\n */\n(function ($) {\n    'use strict';\n\n    // RESPONSIVE TABLE CLASS DEFINITION\n    // ==========================\n\n    var ResponsiveTable = function(element, options) {\n        var that = this;\n\n        this.options = options;\n        this.$tableWrapper = null; //defined later in wrapTable\n        this.$tableScrollWrapper = $(element); //defined later in wrapTable\n        this.$table = $(element).find('table');\n\n        if(this.$table.length !== 1) {\n            throw new Error('Exactly one table is expected in a .table-responsive div.');\n        }\n\n        //apply pattern option as data-attribute, in case it was set via js\n        this.$tableScrollWrapper.attr('data-pattern', this.options.pattern);\n\n        //if the table doesn't have a unique id, give it one.\n        //The id will be a random hexadecimal value, prefixed with id.\n        //Used for triggers with displayAll button.\n        this.id = this.$table.prop('id') || this.$tableScrollWrapper.prop('id') || 'id' + Math.random().toString(16).slice(2);\n\n        this.$tableClone = null; //defined farther down\n        this.$stickyTableHeader = null; //defined farther down\n\n        //good to have - for easy access\n        this.$thead = this.$table.find('thead');\n        this.$tbody = this.$table.find('tbody');\n        this.$hdrCells = this.$thead.find('th');\n        this.$bodyRows = this.$tbody.find('tr');\n\n        //toolbar and buttons\n        this.$btnToolbar = null; //defined farther down\n        this.$dropdownGroup = null; //defined farther down\n        this.$dropdownBtn = null; //defined farther down\n        this.$dropdownContainer = null; //defined farther down\n\n        this.$displayAllBtn = null; //defined farther down\n\n        this.$focusGroup = null; //defined farther down\n        this.$focusBtn = null; //defined farther down\n\n        //misc\n        this.displayAllTrigger = 'display-all-' + this.id + '.responsive-table';\n        this.idPrefix = this.id + '-col-';\n\n        // Check if iOS\n        // property to save performance\n        this.iOS = isIOS();\n      \n        // Setup table\n        // -------------------------\n      \n        //wrap table\n        this.wrapTable();\n\n        //create toolbar with buttons\n        this.createButtonToolbar();\n\n        // Setup cells\n        // -------------------------\n\n        //setup header cells\n        this.setupHdrCells();\n\n        //setup standard cells\n        this.setupStandardCells();\n\n        //create sticky table head\n        if(this.options.stickyTableHeader){\n            this.createStickyTableHeader();\n        }\n\n        // hide toggle button if the list is empty\n        if(this.$dropdownContainer.is(':empty')){\n            this.$dropdownGroup.hide();\n        }\n\n        // Event binding\n        // -------------------------\n\n        // on orientchange, resize and displayAllBtn-click\n        $(window).bind('orientationchange resize ' + this.displayAllTrigger, function(){\n\n            //update the inputs' checked status\n            that.$dropdownContainer.find('input').trigger('updateCheck');\n\n            //update colspan and visibility of spanning cells\n            $.proxy(that.updateSpanningCells(), that);\n\n        });\n    };\n\n    ResponsiveTable.DEFAULTS = {\n        pattern: 'priority-columns',\n        stickyTableHeader: true,\n        fixedNavbar: '.navbar-fixed-top',  // Is there a fixed navbar? The stickyTableHeader needs to know about it!\n        addDisplayAllBtn: true, // should it have a display-all button?\n        addFocusBtn: true,  // should it have a focus button?\n        focusBtnIcon: 'glyphicon glyphicon-screenshot'\n    };\n\n    // Wrap table\n    ResponsiveTable.prototype.wrapTable = function() {        \n        this.$tableScrollWrapper.wrap('<div class=\"table-wrapper\"/>');\n        this.$tableWrapper = this.$tableScrollWrapper.parent();\n    };\n\n    // Create toolbar with buttons\n    ResponsiveTable.prototype.createButtonToolbar = function() {\n        var that = this;\n\n        this.$btnToolbar = $('<div class=\"btn-toolbar\" />');\n\n        this.$dropdownGroup = $('<div class=\"btn-group dropdown-btn-group pull-right\" />');\n        this.$dropdownBtn = $('<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">Display <span class=\"caret\"></span></button>');\n        this.$dropdownContainer = $('<ul class=\"dropdown-menu\"/>');\n\n        // Focus btn\n        if(this.options.addFocusBtn) {\n            // Create focus btn group\n            this.$focusGroup = $('<div class=\"btn-group focus-btn-group\" />');\n\n            // Create focus btn\n            this.$focusBtn = $('<button class=\"btn btn-default\">Focus</button>');\n\n            if(this.options.focusBtnIcon) {\n                this.$focusBtn.prepend('<span class=\"' + this.options.focusBtnIcon + '\"></span> ');\n            }\n\n            // Add btn to group\n            this.$focusGroup.append(this.$focusBtn);\n            // Add focus btn to toolbar\n            this.$btnToolbar.append(this.$focusGroup);\n\n            // bind click on focus btn\n            this.$focusBtn.click(function(){\n                $.proxy(that.activateFocus(), that);\n            });\n\n            // bind click on rows\n            this.$bodyRows.click(function(){\n                $.proxy(that.focusOnRow($(this)), that);\n            });\n        }\n\n         // Display-all btn\n        if(this.options.addDisplayAllBtn) {\n            // Create display-all btn\n            this.$displayAllBtn = $('<button class=\"btn btn-default\">Display all</button>');\n            // Add display-all btn to dropdown-btn-group\n            this.$dropdownGroup.append(this.$displayAllBtn);\n\n            if (this.$table.hasClass('display-all')) {\n                // add 'btn-primary' class to btn to indicate that display all is activated\n                this.$displayAllBtn.addClass('btn-primary');\n            }\n\n            // bind click on display-all btn\n            this.$displayAllBtn.click(function(){\n                $.proxy(that.displayAll(null, true), that);\n            });\n        }\n\n        //add dropdown btn and menu to dropdown-btn-group\n        this.$dropdownGroup.append(this.$dropdownBtn).append(this.$dropdownContainer);\n\n        //add dropdown group to toolbar\n        this.$btnToolbar.append(this.$dropdownGroup);\n\n        // add toolbar above table\n        this.$tableScrollWrapper.before(this.$btnToolbar);\n    };\n\n    ResponsiveTable.prototype.clearAllFocus = function() {\n        this.$bodyRows.removeClass('unfocused');\n        this.$bodyRows.removeClass('focused');\n    };\n\n    ResponsiveTable.prototype.activateFocus = function() {\n        // clear all\n        this.clearAllFocus();\n\n        if(this.$focusBtn){\n            this.$focusBtn.toggleClass('btn-primary');\n        }\n\n        this.$table.toggleClass('focus-on');\n    };\n\n    ResponsiveTable.prototype.focusOnRow = function(row) {\n        // only if activated (.i.e the table has the class focus-on)\n        if(this.$table.hasClass('focus-on')) {\n            var alreadyFocused = $(row).hasClass('focused');\n\n            // clear all\n            this.clearAllFocus();\n\n            if(!alreadyFocused) {\n                this.$bodyRows.addClass('unfocused');\n                $(row).addClass('focused');\n            }\n        }\n    };\n\n    /**\n     * @param activate Forces the displayAll to be active or not. If anything else than bool, it will not force the state so it will toggle as normal.\n     * @param trigger Bool to indicate if the displayAllTrigger should be triggered.\n     */\n    ResponsiveTable.prototype.displayAll = function(activate, trigger) {\n        if(this.$displayAllBtn){\n            // add 'btn-primary' class to btn to indicate that display all is activated\n            this.$displayAllBtn.toggleClass('btn-primary', activate);\n        }\n\n        this.$table.toggleClass('display-all', activate);\n        if(this.$tableClone){\n            this.$tableClone.toggleClass('display-all', activate);\n        }\n\n        if(trigger) {\n            $(window).trigger(this.displayAllTrigger);\n        }\n    };\n\n    ResponsiveTable.prototype.preserveDisplayAll = function() {\n        var displayProp = 'table-cell';\n        if($('html').hasClass('lt-ie9')){\n            displayProp = 'inline';\n        }\n\n        $(this.$table).find('th, td').css('display', displayProp);\n        if(this.$tableClone){\n            $(this.$tableClone).find('th, td').css('display', displayProp);\n        }\n    };\n\n    ResponsiveTable.prototype.createStickyTableHeader = function() {\n        var that = this;\n\n        //clone table head\n        that.$tableClone = that.$table.clone();\n\n        //replace ids\n        that.$tableClone.prop('id', this.id + '-clone');\n        that.$tableClone.find('[id]').each(function() {\n            $(this).prop('id', $(this).prop('id') + '-clone');\n        });\n\n        // wrap table clone (this is our \"sticky table header\" now)\n        that.$tableClone.wrap('<div class=\"sticky-table-header\"/>');\n        that.$stickyTableHeader = that.$tableClone.parent();\n\n        // give the sticky table header same height as original\n        that.$stickyTableHeader.css('height', that.$thead.height() + 2);\n\n        //insert sticky table header\n        if($('html').hasClass('lt-ie10')){\n            that.$tableWrapper.prepend(that.$stickyTableHeader);\n        } else {\n            that.$table.before(that.$stickyTableHeader);\n        }\n\n        // var bodyRowsClone = $(tableClone).find('tbody').find('tr');\n\n        // bind scroll and resize with updateStickyTableHeader\n        $(window).bind('scroll resize', function(){\n            $.proxy(that.updateStickyTableHeader(), that);\n        });\n\n        $(that.$tableScrollWrapper).bind('scroll', function(){\n            $.proxy(that.updateStickyTableHeader(), that);\n        });\n    };\n\n    // Help function for sticky table header\n    ResponsiveTable.prototype.updateStickyTableHeader = function() {\n        var that              = this,\n          top               = 0,\n          offsetTop         = that.$table.offset().top,\n          scrollTop         = $(window).scrollTop() -1, //-1 to accomodate for top border\n          maxTop            = that.$table.height() - that.$stickyTableHeader.height(),\n          rubberBandOffset  = (scrollTop + $(window).height()) - $(document).height(),\n        //          useFixedSolution  = that.$table.parent().prop('scrollWidth') === that.$table.parent().width();\n          useFixedSolution  = !that.iOS,\n          navbarHeight      = 0;\n\n        //Is there a fixed navbar?\n        if($(that.options.fixedNavbar).length) {\n            var $navbar = $(that.options.fixedNavbar).first();\n            navbarHeight = $navbar.height() + 2;\n            scrollTop = scrollTop + navbarHeight;\n        }\n\n        var shouldBeVisible   = (scrollTop > offsetTop) && (scrollTop < offsetTop + that.$table.height());\n\n        if(useFixedSolution) {\n            that.$stickyTableHeader.scrollLeft(that.$tableScrollWrapper.scrollLeft());\n\n            //add fixedSolution class\n            that.$stickyTableHeader.addClass('fixed-solution');\n\n            // Calculate top property value (-1 to accomodate for top border)\n            top = navbarHeight - 1;\n\n            // When the about to scroll past the table, move sticky table head up\n            if(((scrollTop - offsetTop) > maxTop)){\n                top -= ((scrollTop - offsetTop) - maxTop);\n                that.$stickyTableHeader.addClass('border-radius-fix');\n            } else {\n                that.$stickyTableHeader.removeClass('border-radius-fix');\n            }\n\n            if (shouldBeVisible) {\n                //show sticky table header and update top and width.\n                that.$stickyTableHeader.css({ 'visibility': 'visible', 'top': top + 'px', 'width': that.$tableScrollWrapper.innerWidth() + 'px'});\n\n                //no more stuff to do - return!\n                return;\n            } else {\n                //hide sticky table header and reset width\n                that.$stickyTableHeader.css({'visibility': 'hidden', 'width': 'auto' });\n            }\n\n        } else { // alternate method\n            //remove fixedSolution class\n            that.$stickyTableHeader.removeClass('fixed-solution');\n\n            //animation duration\n            var animationDuration = 400;\n\n            // Calculate top property value (-1 to accomodate for top border)\n            top = scrollTop - offsetTop - 1;\n\n            // Make sure the sticky table header doesn't slide up/down too far.\n            if(top < 0) {\n                top = 0;\n            } else if (top > maxTop) {\n                top = maxTop;\n            }\n\n            // Accomandate for rubber band effect\n            if(rubberBandOffset > 0) {\n                top = top - rubberBandOffset;\n            }\n\n            if (shouldBeVisible) {\n                //show sticky table header (animate repositioning)\n                that.$stickyTableHeader.css({ 'visibility': 'visible' });\n                that.$stickyTableHeader.animate({ 'top': top + 'px' }, animationDuration);\n\n                // hide original table head\n                that.$thead.css({ 'visibility': 'hidden' });\n\n            } else {\n\n                that.$stickyTableHeader.animate({ 'top': '0' }, animationDuration, function(){\n                    // show original table head\n                    that.$thead.css({ 'visibility': 'visible' });\n\n                    // hide sticky table head\n                    that.$stickyTableHeader.css({ 'visibility': 'hidden' });\n                });\n            }\n        }\n    };\n\n    // Setup header cells\n    ResponsiveTable.prototype.setupHdrCells = function() {\n        var that = this;\n\n        // for each header column\n        that.$hdrCells.each(function(i){\n            var $th = $(this),\n                id = $th.prop('id'),\n                thText = $th.text();\n\n            // assign an id to each header, if none is in the markup\n            if (!id) {\n                id = that.idPrefix + i;\n                $th.prop('id', id);\n            }\n\n            if(thText === ''){\n                thText = $th.attr('data-col-name');\n            }\n\n            // create the hide/show toggle for the current column\n            if ( $th.is('[data-priority]') ) {\n                var $toggle = $('<li class=\"checkbox-row\"><input type=\"checkbox\" name=\"toggle-'+id+'\" id=\"toggle-'+id+'\" value=\"'+id+'\" /> <label for=\"toggle-'+id+'\">'+ thText +'</label></li>');\n                var $checkbox = $toggle.find('input');\n\n                that.$dropdownContainer.append($toggle);\n\n                $toggle.click(function(){\n                    // console.log(\"cliiiick!\");\n                    $checkbox.prop('checked', !$checkbox.prop('checked'));\n                    $checkbox.trigger('change');\n                });\n\n                //Freakin' IE fix\n                if ($('html').hasClass('lt-ie9')) {\n                    $checkbox.click(function() {\n                        $(this).trigger('change');\n                    });\n                }\n\n                $toggle.find('label').click(function(event){\n                    event.stopPropagation();\n                });\n\n                $toggle.find('input')\n                    .click(function(event){\n                        event.stopPropagation();\n                    })\n                .change(function(){ // bind change event on checkbox\n                    var $checkbox = $(this),\n                        val = $checkbox.val(),\n                        //all cells under the column, including the header and its clone\n                        $cells = that.$tableWrapper.find('#' + val + ', #' + val + '-clone, [data-columns~='+ val +']');\n\n                    //if display-all is on - save state and carry on\n                    if(that.$table.hasClass('display-all')){\n                        //save state\n                        $.proxy(that.preserveDisplayAll(), that);\n                        //remove display all class\n                        that.$table.removeClass('display-all');\n                        if(that.$tableClone){\n                            that.$tableClone.removeClass('display-all');\n                        }\n                        //switch off button\n                        that.$displayAllBtn.removeClass('btn-primary');\n                    }\n\n                    // loop through the cells\n                    $cells.each(function(){\n                        var $cell = $(this);\n\n                        // is the checkbox checked now?\n                        if ($checkbox.is(':checked')) {\n\n                            // if the cell was already visible, it means its original colspan was >1\n                            // so let's increment the colspan\n                            if($cell.css('display') !== 'none'){\n                                $cell.prop('colSpan', parseInt($cell.prop('colSpan')) + 1);\n                            }\n\n                            // show cell\n                            $cell.show();\n\n                        }\n                      // checkbox has been unchecked\n                      else {\n                            // decrement colSpan if it's not 1 (because colSpan should not be 0)\n                            if(parseInt($cell.prop('colSpan'))>1){\n                                $cell.prop('colSpan', parseInt($cell.prop('colSpan')) - 1);\n                            }\n                            // otherwise, hide the cell\n                            else {\n                                $cell.hide();\n                            }\n                        }\n                    });\n                })\n                .bind('updateCheck', function(){\n                    if ( $th.css('display') !== 'none') {\n                        $(this).prop('checked', true);\n                    }\n                    else {\n                        $(this).prop('checked', false);\n                    }\n                })\n                .trigger('updateCheck');\n            } // end if\n        }); // end hdrCells loop \n    };\n\n    // Setup standard cells\n    // assign matching \"data-columns\" attributes to the associated cells \"(cells with colspan>1 has multiple columns).\n    ResponsiveTable.prototype.setupStandardCells = function() {\n        var that = this;\n\n        // for each body rows\n        that.$bodyRows.each(function(){\n            var idStart = 0;\n\n            // for each cell\n            $(this).find('th, td').each(function(){\n                var $cell = $(this);\n                var columnsAttr = '';\n\n                var colSpan = $cell.prop('colSpan');\n\n                var numOfHidden = 0;\n                // loop through columns that the cell spans over\n                for (var k = idStart; k < (idStart + colSpan); k++) {\n                    // add column id\n                    columnsAttr = columnsAttr + ' ' + that.idPrefix + k;\n\n                    // get column header\n                    var $colHdr = that.$tableScrollWrapper.find('#' + that.idPrefix + k);\n\n                    // copy data-priority attribute from column header\n                    var dataPriority = $colHdr.attr('data-priority');\n                    if (dataPriority) { $cell.attr('data-priority', dataPriority); }\n\n                    if($colHdr.css('display')==='none'){\n                        numOfHidden++;\n                    }\n\n                }\n\n                // if colSpan is more than 1\n                if(colSpan > 1) {\n                    //give it the class 'spn-cell';\n                    $cell.addClass('spn-cell');\n\n                    // if one of the columns that the cell belongs to is visible then show the cell\n                    if(numOfHidden !== colSpan){\n                        $cell.show();\n                    } else {\n                        $cell.hide(); //just in case\n                    }\n                }\n\n                //update colSpan to match number of visible columns that i belongs to\n                $cell.prop('colSpan',Math.max((colSpan - numOfHidden),1));\n\n                //remove whitespace in begining of string.\n                columnsAttr = columnsAttr.substring(1);\n\n                //set attribute to cell\n                $cell.attr('data-columns', columnsAttr);\n\n                //increment idStart with the current cells colSpan.\n                idStart = idStart + colSpan;\n            });\n        });\n    };\n\n    // Update colspan and visibility of spanning cells\n    ResponsiveTable.prototype.updateSpanningCells = function() {\n        var that = this;\n\n        // iterate through cells with class 'spn-cell'\n        that.$table.find('.spn-cell').each( function(){\n            var $cell = $(this);\n            var columnsAttr = $cell.attr('data-columns').split(' ');\n\n            var colSpan = columnsAttr.length;\n            var numOfHidden = 0;\n            for (var i = 0; i < colSpan; i++) {\n                if($('#' + columnsAttr[i]).css('display')==='none'){\n                    numOfHidden++;\n                }\n            }\n\n            // if one of the columns that the cell belongs to is visible then show the cell\n            if(numOfHidden !== colSpan){\n                $cell.show();\n            } else {\n                $cell.hide(); //just in case\n            }\n\n            // console.log('numOfHidden: ' + numOfHidden);\n            // console.log(\"new colSpan:\" +Math.max((colSpan - numOfHidden),1));\n\n            //update colSpan to match number of visible columns that i belongs to\n            $cell.prop('colSpan',Math.max((colSpan - numOfHidden),1));\n        });\n    };\n\n    // RESPONSIVE TABLE PLUGIN DEFINITION\n    // ===========================\n\n    var old = $.fn.responsiveTable;\n\n    $.fn.responsiveTable = function (option) {\n        return this.each(function () {\n            var $this   = $(this);\n            var data    = $this.data('responsiveTable');\n            var options = $.extend({}, ResponsiveTable.DEFAULTS, $this.data(), typeof option === 'object' && option);\n\n            if(options.pattern === '') {\n                return;\n            }\n\n            if (!data) {\n                $this.data('responsiveTable', (data = new ResponsiveTable(this, options)));\n            }\n            if (typeof option === 'string') {\n                data[option]();\n            }\n        });\n    };\n\n    $.fn.responsiveTable.Constructor = ResponsiveTable;\n\n\n    // RESPONSIVE TABLE NO CONFLICT\n    // =====================\n\n    $.fn.responsiveTable.noConflict = function () {\n        $.fn.responsiveTable = old;\n        return this;\n    };\n\n    // RESPONSIVE TABLE DATA-API\n    // ==================\n\n    $(document).on('ready.responsive-table.data-api', function () {\n        $('[data-pattern]').each(function () {\n            var $tableScrollWrapper = $(this);\n            $tableScrollWrapper.responsiveTable($tableScrollWrapper.data());\n        });\n    });\n\n\n    // DROPDOWN\n    // ==========================\n\n    // Prevent dropdown from closing when toggling checkbox\n    $(document).on('click.dropdown.data-api', '.dropdown-menu .checkbox-row', function (e) {\n        e.stopPropagation();\n    });\n\n    // FEATURE DETECTION (instead of Modernizr)\n    // ==========================\n\n    // media queries\n    function mediaQueriesSupported() {\n        return (typeof window.matchMedia !== 'undefined' || typeof window.msMatchMedia !== 'undefined' || typeof window.styleMedia !== 'undefined');\n    }\n\n    // touch\n    function hasTouch() {\n        return 'ontouchstart' in window;\n    }\n\n    // Checks if current browser is on IOS.\n    function isIOS() {\n        return !!(navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i));\n    }\n\n\n    $(document).ready(function() {\n        // Change `no-js` to `js`\n        $('html').removeClass('no-js').addClass('js');\n\n        // Add mq/no-mq class to html\n        if(mediaQueriesSupported()) {\n            $('html').addClass('mq');\n        } else {\n            $('html').addClass('no-mq');\n        }\n\n        // Add touch/no-touch class to html\n        if(hasTouch()) {\n            $('html').addClass('touch');\n        } else {\n            $('html').addClass('no-touch');\n        }\n    });\n})(jQuery);"]},"metadata":{},"sourceType":"module"}