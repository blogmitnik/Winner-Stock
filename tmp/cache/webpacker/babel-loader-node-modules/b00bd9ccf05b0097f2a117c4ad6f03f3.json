{"ast":null,"code":"/*!\n * Ladda\n * http://lab.hakim.se/ladda\n * MIT licensed\n *\n * Copyright (C) 2016 Hakim El Hattab, http://hakim.se\n */\n\n/* jshint node:true, browser:true */\n(function (root, factory) {\n  // CommonJS\n  if (typeof exports === 'object') {\n    module.exports = factory(require('spin.js'));\n  } // AMD module\n  else if (typeof define === 'function' && define.amd) {\n      define(['spin'], factory);\n    } // Browser global\n    else {\n        root.Ladda = factory(root.Spinner);\n      }\n})(this, function (Spinner) {\n  'use strict'; // All currently instantiated instances of Ladda\n\n  var ALL_INSTANCES = [];\n  /**\n   * Creates a new instance of Ladda which wraps the\n   * target button element.\n   *\n   * @return An API object that can be used to control\n   * the loading animation state.\n   */\n\n  function create(button) {\n    if (typeof button === 'undefined') {\n      console.warn(\"Ladda button target must be defined.\");\n      return;\n    } // The button must have the class \"ladda-button\"\n\n\n    if (!/ladda-button/i.test(button.className)) {\n      button.className += ' ladda-button';\n    } // Style is required, default to \"expand-right\"\n\n\n    if (!button.hasAttribute('data-style')) {\n      button.setAttribute('data-style', 'expand-right');\n    } // The text contents must be wrapped in a ladda-label\n    // element, create one if it doesn't already exist\n\n\n    if (!button.querySelector('.ladda-label')) {\n      var laddaLabel = document.createElement('span');\n      laddaLabel.className = 'ladda-label';\n      wrapContent(button, laddaLabel);\n    } // The spinner component\n\n\n    var spinner,\n        spinnerWrapper = button.querySelector('.ladda-spinner'); // Wrapper element for the spinner\n\n    if (!spinnerWrapper) {\n      spinnerWrapper = document.createElement('span');\n      spinnerWrapper.className = 'ladda-spinner';\n    }\n\n    button.appendChild(spinnerWrapper); // Timer used to delay starting/stopping\n\n    var timer;\n    var instance = {\n      /**\n       * Enter the loading state.\n       */\n      start: function start() {\n        // Create the spinner if it doesn't already exist\n        if (!spinner) spinner = createSpinner(button);\n        button.setAttribute('disabled', '');\n        button.setAttribute('data-loading', '');\n        clearTimeout(timer);\n        spinner.spin(spinnerWrapper);\n        this.setProgress(0);\n        return this; // chain\n      },\n\n      /**\n       * Enter the loading state, after a delay.\n       */\n      startAfter: function startAfter(delay) {\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          instance.start();\n        }, delay);\n        return this; // chain\n      },\n\n      /**\n       * Exit the loading state.\n       */\n      stop: function stop() {\n        button.removeAttribute('disabled');\n        button.removeAttribute('data-loading'); // Kill the animation after a delay to make sure it\n        // runs for the duration of the button transition\n\n        clearTimeout(timer);\n\n        if (spinner) {\n          timer = setTimeout(function () {\n            spinner.stop();\n          }, 1000);\n        }\n\n        return this; // chain\n      },\n\n      /**\n       * Toggle the loading state on/off.\n       */\n      toggle: function toggle() {\n        if (this.isLoading()) {\n          this.stop();\n        } else {\n          this.start();\n        }\n\n        return this; // chain\n      },\n\n      /**\n       * Sets the width of the visual progress bar inside of\n       * this Ladda button\n       *\n       * @param {Number} progress in the range of 0-1\n       */\n      setProgress: function setProgress(progress) {\n        // Cap it\n        progress = Math.max(Math.min(progress, 1), 0);\n        var progressElement = button.querySelector('.ladda-progress'); // Remove the progress bar if we're at 0 progress\n\n        if (progress === 0 && progressElement && progressElement.parentNode) {\n          progressElement.parentNode.removeChild(progressElement);\n        } else {\n          if (!progressElement) {\n            progressElement = document.createElement('div');\n            progressElement.className = 'ladda-progress';\n            button.appendChild(progressElement);\n          }\n\n          progressElement.style.width = (progress || 0) * button.offsetWidth + 'px';\n        }\n      },\n      enable: function enable() {\n        this.stop();\n        return this; // chain\n      },\n      disable: function disable() {\n        this.stop();\n        button.setAttribute('disabled', '');\n        return this; // chain\n      },\n      isLoading: function isLoading() {\n        return button.hasAttribute('data-loading');\n      },\n      remove: function remove() {\n        clearTimeout(timer);\n        button.removeAttribute('disabled', '');\n        button.removeAttribute('data-loading', '');\n\n        if (spinner) {\n          spinner.stop();\n          spinner = null;\n        }\n\n        for (var i = 0, len = ALL_INSTANCES.length; i < len; i++) {\n          if (instance === ALL_INSTANCES[i]) {\n            ALL_INSTANCES.splice(i, 1);\n            break;\n          }\n        }\n      }\n    };\n    ALL_INSTANCES.push(instance);\n    return instance;\n  }\n  /**\n  * Get the first ancestor node from an element, having a\n  * certain type.\n  *\n  * @param elem An HTML element\n  * @param type an HTML tag type (uppercased)\n  *\n  * @return An HTML element\n  */\n\n\n  function getAncestorOfTagType(elem, type) {\n    while (elem.parentNode && elem.tagName !== type) {\n      elem = elem.parentNode;\n    }\n\n    return type === elem.tagName ? elem : undefined;\n  }\n  /**\n   * Returns a list of all inputs in the given form that\n   * have their `required` attribute set.\n   *\n   * @param form The from HTML element to look in\n   *\n   * @return A list of elements\n   */\n\n\n  function getRequiredFields(form) {\n    var requirables = ['input', 'textarea', 'select'];\n    var inputs = [];\n\n    for (var i = 0; i < requirables.length; i++) {\n      var candidates = form.getElementsByTagName(requirables[i]);\n\n      for (var j = 0; j < candidates.length; j++) {\n        if (candidates[j].hasAttribute('required')) {\n          inputs.push(candidates[j]);\n        }\n      }\n    }\n\n    return inputs;\n  }\n  /**\n   * Binds the target buttons to automatically enter the\n   * loading state when clicked.\n   *\n   * @param target Either an HTML element or a CSS selector.\n   * @param options\n   *          - timeout Number of milliseconds to wait before\n   *            automatically cancelling the animation.\n   */\n\n\n  function bind(target, options) {\n    options = options || {};\n    var targets = [];\n\n    if (typeof target === 'string') {\n      targets = toArray(document.querySelectorAll(target));\n    } else if (typeof target === 'object' && typeof target.nodeName === 'string') {\n      targets = [target];\n    }\n\n    for (var i = 0, len = targets.length; i < len; i++) {\n      (function () {\n        var element = targets[i]; // Make sure we're working with a DOM element\n\n        if (typeof element.addEventListener === 'function') {\n          var instance = create(element);\n          var timeout = -1;\n          element.addEventListener('click', function (event) {\n            // If the button belongs to a form, make sure all the\n            // fields in that form are filled out\n            var valid = true;\n            var form = getAncestorOfTagType(element, 'FORM');\n\n            if (typeof form !== 'undefined') {\n              // Modern form validation\n              if (typeof form.checkValidity === 'function') {\n                valid = form.checkValidity();\n              } // Fallback to manual validation for old browsers\n              else {\n                  var requireds = getRequiredFields(form);\n\n                  for (var i = 0; i < requireds.length; i++) {\n                    if (requireds[i].value.replace(/^\\s+|\\s+$/g, '') === '') {\n                      valid = false;\n                    } // Radiobuttons and Checkboxes need to be checked for the \"checked\" attribute\n\n\n                    if ((requireds[i].type === 'checkbox' || requireds[i].type === 'radio') && !requireds[i].checked) {\n                      valid = false;\n                    } // Email field validation\n\n\n                    if (requireds[i].type === 'email') {\n                      valid = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(requireds[i].value);\n                    }\n                  }\n                }\n            }\n\n            if (valid) {\n              // This is asynchronous to avoid an issue where setting\n              // the disabled attribute on the button prevents forms\n              // from submitting\n              instance.startAfter(1); // Set a loading timeout if one is specified\n\n              if (typeof options.timeout === 'number') {\n                clearTimeout(timeout);\n                timeout = setTimeout(instance.stop, options.timeout);\n              } // Invoke callbacks\n\n\n              if (typeof options.callback === 'function') {\n                options.callback.apply(null, [instance]);\n              }\n            }\n          }, false);\n        }\n      })();\n    }\n  }\n  /**\n   * Stops ALL current loading animations.\n   */\n\n\n  function stopAll() {\n    for (var i = 0, len = ALL_INSTANCES.length; i < len; i++) {\n      ALL_INSTANCES[i].stop();\n    }\n  }\n\n  function createSpinner(button) {\n    var height = button.offsetHeight,\n        spinnerColor,\n        spinnerLines;\n\n    if (height === 0) {\n      // We may have an element that is not visible so\n      // we attempt to get the height in a different way\n      height = parseFloat(window.getComputedStyle(button).height);\n    } // If the button is tall we can afford some padding\n\n\n    if (height > 32) {\n      height *= 0.8;\n    } // Prefer an explicit height if one is defined\n\n\n    if (button.hasAttribute('data-spinner-size')) {\n      height = parseInt(button.getAttribute('data-spinner-size'), 10);\n    } // Allow buttons to specify the color of the spinner element\n\n\n    if (button.hasAttribute('data-spinner-color')) {\n      spinnerColor = button.getAttribute('data-spinner-color');\n    } // Allow buttons to specify the number of lines of the spinner\n\n\n    if (button.hasAttribute('data-spinner-lines')) {\n      spinnerLines = parseInt(button.getAttribute('data-spinner-lines'), 10);\n    }\n\n    var radius = height * 0.2,\n        length = radius * 0.6,\n        width = radius < 7 ? 2 : 3;\n    return new Spinner({\n      color: spinnerColor || '#fff',\n      lines: spinnerLines || 12,\n      radius: radius,\n      length: length,\n      width: width,\n      zIndex: 'auto',\n      top: 'auto',\n      left: 'auto',\n      className: ''\n    });\n  }\n\n  function toArray(nodes) {\n    var a = [];\n\n    for (var i = 0; i < nodes.length; i++) {\n      a.push(nodes[i]);\n    }\n\n    return a;\n  }\n\n  function wrapContent(node, wrapper) {\n    var r = document.createRange();\n    r.selectNodeContents(node);\n    r.surroundContents(wrapper);\n    node.appendChild(wrapper);\n  } // Public API\n\n\n  return {\n    bind: bind,\n    create: create,\n    stopAll: stopAll\n  };\n});","map":{"version":3,"sources":["/Users/david/Winner-Stock/app/javascript/packs/ladda.js"],"names":["root","factory","exports","module","require","define","amd","Ladda","Spinner","ALL_INSTANCES","create","button","console","warn","test","className","hasAttribute","setAttribute","querySelector","laddaLabel","document","createElement","wrapContent","spinner","spinnerWrapper","appendChild","timer","instance","start","createSpinner","clearTimeout","spin","setProgress","startAfter","delay","setTimeout","stop","removeAttribute","toggle","isLoading","progress","Math","max","min","progressElement","parentNode","removeChild","style","width","offsetWidth","enable","disable","remove","i","len","length","splice","push","getAncestorOfTagType","elem","type","tagName","undefined","getRequiredFields","form","requirables","inputs","candidates","getElementsByTagName","j","bind","target","options","targets","toArray","querySelectorAll","nodeName","element","addEventListener","timeout","event","valid","checkValidity","requireds","value","replace","checked","callback","apply","stopAll","height","offsetHeight","spinnerColor","spinnerLines","parseFloat","window","getComputedStyle","parseInt","getAttribute","radius","color","lines","zIndex","top","left","nodes","a","node","wrapper","r","createRange","selectNodeContents","surroundContents"],"mappings":"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","sourcesContent":["/*!\n * Ladda\n * http://lab.hakim.se/ladda\n * MIT licensed\n *\n * Copyright (C) 2016 Hakim El Hattab, http://hakim.se\n */\n/* jshint node:true, browser:true */\n(function( root, factory ) {\n\n\t// CommonJS\n\tif( typeof exports === 'object' )  {\n\t\tmodule.exports = factory(require('spin.js'));\n\t}\n\t// AMD module\n\telse if( typeof define === 'function' && define.amd ) {\n\t\tdefine( [ 'spin' ], factory );\n\t}\n\t// Browser global\n\telse {\n\t\troot.Ladda = factory( root.Spinner );\n\t}\n\n}\n(this, function( Spinner ) {\n\t'use strict';\n\n\t// All currently instantiated instances of Ladda\n\tvar ALL_INSTANCES = [];\n\n\t/**\n\t * Creates a new instance of Ladda which wraps the\n\t * target button element.\n\t *\n\t * @return An API object that can be used to control\n\t * the loading animation state.\n\t */\n\tfunction create( button ) {\n\n\t\tif( typeof button === 'undefined' ) {\n\t\t\tconsole.warn( \"Ladda button target must be defined.\" );\n\t\t\treturn;\n\t\t}\n\n\t\t// The button must have the class \"ladda-button\"\n\t\tif( !/ladda-button/i.test( button.className ) ) {\n\t\t\tbutton.className += ' ladda-button';\n\t\t}\n\n\t\t// Style is required, default to \"expand-right\"\n\t\tif( !button.hasAttribute( 'data-style' ) ) {\n\t\t\tbutton.setAttribute( 'data-style', 'expand-right' );\n\t\t}\n\n\t\t// The text contents must be wrapped in a ladda-label\n\t\t// element, create one if it doesn't already exist\n\t\tif( !button.querySelector( '.ladda-label' ) ) {\n\t\t\tvar laddaLabel = document.createElement( 'span' );\n\t\t\tladdaLabel.className = 'ladda-label';\n\t\t\twrapContent( button, laddaLabel );\n\t\t}\n\n\t\t// The spinner component\n\t\tvar spinner,\n\t\t\tspinnerWrapper = button.querySelector( '.ladda-spinner' );\n\n\t\t// Wrapper element for the spinner\n\t\tif( !spinnerWrapper ) {\n\t\t\tspinnerWrapper = document.createElement( 'span' );\n\t\t\tspinnerWrapper.className = 'ladda-spinner';\n\t\t}\n\n\t\tbutton.appendChild( spinnerWrapper );\n\n\t\t// Timer used to delay starting/stopping\n\t\tvar timer;\n\n\t\tvar instance = {\n\n\t\t\t/**\n\t\t\t * Enter the loading state.\n\t\t\t */\n\t\t\tstart: function() {\n\n\t\t\t\t// Create the spinner if it doesn't already exist\n\t\t\t\tif( !spinner ) spinner = createSpinner( button );\n\n\t\t\t\tbutton.setAttribute( 'disabled', '' );\n\t\t\t\tbutton.setAttribute( 'data-loading', '' );\n\n\t\t\t\tclearTimeout( timer );\n\t\t\t\tspinner.spin( spinnerWrapper );\n\n\t\t\t\tthis.setProgress( 0 );\n\n\t\t\t\treturn this; // chain\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Enter the loading state, after a delay.\n\t\t\t */\n\t\t\tstartAfter: function( delay ) {\n\n\t\t\t\tclearTimeout( timer );\n\t\t\t\ttimer = setTimeout( function() { instance.start(); }, delay );\n\n\t\t\t\treturn this; // chain\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Exit the loading state.\n\t\t\t */\n\t\t\tstop: function() {\n\n\t\t\t\tbutton.removeAttribute( 'disabled' );\n\t\t\t\tbutton.removeAttribute( 'data-loading' );\n\n\t\t\t\t// Kill the animation after a delay to make sure it\n\t\t\t\t// runs for the duration of the button transition\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\tif( spinner ) {\n\t\t\t\t\ttimer = setTimeout( function() { spinner.stop(); }, 1000 );\n\t\t\t\t}\n\n\t\t\t\treturn this; // chain\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Toggle the loading state on/off.\n\t\t\t */\n\t\t\ttoggle: function() {\n\n\t\t\t\tif( this.isLoading() ) {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.start();\n\t\t\t\t}\n\n\t\t\t\treturn this; // chain\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the width of the visual progress bar inside of\n\t\t\t * this Ladda button\n\t\t\t *\n\t\t\t * @param {Number} progress in the range of 0-1\n\t\t\t */\n\t\t\tsetProgress: function( progress ) {\n\n\t\t\t\t// Cap it\n\t\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\t\tvar progressElement = button.querySelector( '.ladda-progress' );\n\n\t\t\t\t// Remove the progress bar if we're at 0 progress\n\t\t\t\tif( progress === 0 && progressElement && progressElement.parentNode ) {\n\t\t\t\t\tprogressElement.parentNode.removeChild( progressElement );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif( !progressElement ) {\n\t\t\t\t\t\tprogressElement = document.createElement( 'div' );\n\t\t\t\t\t\tprogressElement.className = 'ladda-progress';\n\t\t\t\t\t\tbutton.appendChild( progressElement );\n\t\t\t\t\t}\n\n\t\t\t\t\tprogressElement.style.width = ( ( progress || 0 ) * button.offsetWidth ) + 'px';\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tenable: function() {\n\n\t\t\t\tthis.stop();\n\n\t\t\t\treturn this; // chain\n\n\t\t\t},\n\n\t\t\tdisable: function () {\n\n\t\t\t\tthis.stop();\n\t\t\t\tbutton.setAttribute( 'disabled', '' );\n\n\t\t\t\treturn this; // chain\n\n\t\t\t},\n\n\t\t\tisLoading: function() {\n\n\t\t\t\treturn button.hasAttribute( 'data-loading' );\n\n\t\t\t},\n\n\t\t\tremove: function() {\n\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\tbutton.removeAttribute( 'disabled', '' );\n\t\t\t\tbutton.removeAttribute( 'data-loading', '' );\n\n\t\t\t\tif( spinner ) {\n\t\t\t\t\tspinner.stop();\n\t\t\t\t\tspinner = null;\n\t\t\t\t}\n\n\t\t\t\tfor( var i = 0, len = ALL_INSTANCES.length; i < len; i++ ) {\n\t\t\t\t\tif( instance === ALL_INSTANCES[i] ) {\n\t\t\t\t\t\tALL_INSTANCES.splice( i, 1 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tALL_INSTANCES.push( instance );\n\n\t\treturn instance;\n\n\t}\n\n\t/**\n\t* Get the first ancestor node from an element, having a\n\t* certain type.\n\t*\n\t* @param elem An HTML element\n\t* @param type an HTML tag type (uppercased)\n\t*\n\t* @return An HTML element\n\t*/\n\tfunction getAncestorOfTagType( elem, type ) {\n\n\t\twhile ( elem.parentNode && elem.tagName !== type ) {\n\t\t\telem = elem.parentNode;\n\t\t}\n\n\t\treturn ( type === elem.tagName ) ? elem : undefined;\n\n\t}\n\n\t/**\n\t * Returns a list of all inputs in the given form that\n\t * have their `required` attribute set.\n\t *\n\t * @param form The from HTML element to look in\n\t *\n\t * @return A list of elements\n\t */\n\tfunction getRequiredFields( form ) {\n\n\t\tvar requirables = [ 'input', 'textarea', 'select' ];\n\t\tvar inputs = [];\n\n\t\tfor( var i = 0; i < requirables.length; i++ ) {\n\t\t\tvar candidates = form.getElementsByTagName( requirables[i] );\n\t\t\tfor( var j = 0; j < candidates.length; j++ ) {\n\t\t\t\tif ( candidates[j].hasAttribute( 'required' ) ) {\n\t\t\t\t\tinputs.push( candidates[j] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn inputs;\n\n\t}\n\n\n\t/**\n\t * Binds the target buttons to automatically enter the\n\t * loading state when clicked.\n\t *\n\t * @param target Either an HTML element or a CSS selector.\n\t * @param options\n\t *          - timeout Number of milliseconds to wait before\n\t *            automatically cancelling the animation.\n\t */\n\tfunction bind( target, options ) {\n\n\t\toptions = options || {};\n\n\t\tvar targets = [];\n\n\t\tif( typeof target === 'string' ) {\n\t\t\ttargets = toArray( document.querySelectorAll( target ) );\n\t\t}\n\t\telse if( typeof target === 'object' && typeof target.nodeName === 'string' ) {\n\t\t\ttargets = [ target ];\n\t\t}\n\n\t\tfor( var i = 0, len = targets.length; i < len; i++ ) {\n\n\t\t\t(function() {\n\t\t\t\tvar element = targets[i];\n\n\t\t\t\t// Make sure we're working with a DOM element\n\t\t\t\tif( typeof element.addEventListener === 'function' ) {\n\t\t\t\t\tvar instance = create( element );\n\t\t\t\t\tvar timeout = -1;\n\n\t\t\t\t\telement.addEventListener( 'click', function( event ) {\n\n\t\t\t\t\t\t// If the button belongs to a form, make sure all the\n\t\t\t\t\t\t// fields in that form are filled out\n\t\t\t\t\t\tvar valid = true;\n\t\t\t\t\t\tvar form = getAncestorOfTagType( element, 'FORM' );\n\n\t\t\t\t\t\tif( typeof form !== 'undefined' ) {\n\t\t\t\t\t\t\t// Modern form validation\n\t\t\t\t\t\t\tif( typeof form.checkValidity === 'function' ) {\n\t\t\t\t\t\t\t\tvalid = form.checkValidity();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Fallback to manual validation for old browsers\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvar requireds = getRequiredFields( form );\n\t\t\t\t\t\t\t\tfor( var i = 0; i < requireds.length; i++ ) {\n\n\t\t\t\t\t\t\t\t\tif( requireds[i].value.replace( /^\\s+|\\s+$/g, '' ) === '' ) {\n\t\t\t\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Radiobuttons and Checkboxes need to be checked for the \"checked\" attribute\n\t\t\t\t\t\t\t\t\tif( (requireds[i].type === 'checkbox' || requireds[i].type === 'radio' ) && !requireds[i].checked ) {\n\t\t\t\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Email field validation\n\t\t\t\t\t\t\t\t\tif( requireds[i].type === 'email' ) {\n\t\t\t\t\t\t\t\t\t\tvalid = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test( requireds[i].value );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( valid ) {\n\t\t\t\t\t\t\t// This is asynchronous to avoid an issue where setting\n\t\t\t\t\t\t\t// the disabled attribute on the button prevents forms\n\t\t\t\t\t\t\t// from submitting\n\t\t\t\t\t\t\tinstance.startAfter( 1 );\n\n\t\t\t\t\t\t\t// Set a loading timeout if one is specified\n\t\t\t\t\t\t\tif( typeof options.timeout === 'number' ) {\n\t\t\t\t\t\t\t\tclearTimeout( timeout );\n\t\t\t\t\t\t\t\ttimeout = setTimeout( instance.stop, options.timeout );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Invoke callbacks\n\t\t\t\t\t\t\tif( typeof options.callback === 'function' ) {\n\t\t\t\t\t\t\t\toptions.callback.apply( null, [ instance ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, false );\n\t\t\t\t}\n\t\t\t})();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stops ALL current loading animations.\n\t */\n\tfunction stopAll() {\n\n\t\tfor( var i = 0, len = ALL_INSTANCES.length; i < len; i++ ) {\n\t\t\tALL_INSTANCES[i].stop();\n\t\t}\n\n\t}\n\n\tfunction createSpinner( button ) {\n\n\t\tvar height = button.offsetHeight,\n\t\t\tspinnerColor,\n\t\t\tspinnerLines;\n\n\t\tif( height === 0 ) {\n\t\t\t// We may have an element that is not visible so\n\t\t\t// we attempt to get the height in a different way\n\t\t\theight = parseFloat( window.getComputedStyle( button ).height );\n\t\t}\n\n\t\t// If the button is tall we can afford some padding\n\t\tif( height > 32 ) {\n\t\t\theight *= 0.8;\n\t\t}\n\n\t\t// Prefer an explicit height if one is defined\n\t\tif( button.hasAttribute( 'data-spinner-size' ) ) {\n\t\t\theight = parseInt( button.getAttribute( 'data-spinner-size' ), 10 );\n\t\t}\n\n\t\t// Allow buttons to specify the color of the spinner element\n\t\tif( button.hasAttribute( 'data-spinner-color' ) ) {\n\t\t\tspinnerColor = button.getAttribute( 'data-spinner-color' );\n\t\t}\n\n\t\t// Allow buttons to specify the number of lines of the spinner\n\t\tif( button.hasAttribute( 'data-spinner-lines' ) ) {\n\t\t\tspinnerLines = parseInt( button.getAttribute( 'data-spinner-lines' ), 10 );\n\t\t}\n\n\t\tvar radius = height * 0.2,\n\t\t\tlength = radius * 0.6,\n\t\t\twidth = radius < 7 ? 2 : 3;\n\n\t\treturn new Spinner( {\n\t\t\tcolor: spinnerColor || '#fff',\n\t\t\tlines: spinnerLines || 12,\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\twidth: width,\n\t\t\tzIndex: 'auto',\n\t\t\ttop: 'auto',\n\t\t\tleft: 'auto',\n\t\t\tclassName: ''\n\t\t} );\n\n\t}\n\n\tfunction toArray( nodes ) {\n\n\t\tvar a = [];\n\n\t\tfor ( var i = 0; i < nodes.length; i++ ) {\n\t\t\ta.push( nodes[ i ] );\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tfunction wrapContent( node, wrapper ) {\n\n\t\tvar r = document.createRange();\n\t\tr.selectNodeContents( node );\n\t\tr.surroundContents( wrapper );\n\t\tnode.appendChild( wrapper );\n\n\t}\n\n\t// Public API\n\treturn {\n\n\t\tbind: bind,\n\t\tcreate: create,\n\t\tstopAll: stopAll\n\n\t};\n\n}));\n"]},"metadata":{},"sourceType":"module"}